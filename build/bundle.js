!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=7)}([function(e,t){e.exports=require("react")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MAXLENGTHPERTAB={month:31,year:11,week:6},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t.WEEKNAMESHORT=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t.TODAY="today",t.YESTERDAY="yesterday"},function(e,t){e.exports=require("react-router-dom")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_expense=t.deleteExpenseDate=t.get_expense_summary=t.get_expense_data=t.new_expense=t.logoutUser=t.getUserInfo=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(18),o=(a=s)&&a.__esModule?a:{default:a};t.signup=function(e){return o.default.post("/signup/",r({},e))},t.signin=function(e){return o.default.post("/signin/",r({},e))},t.getUserInfo=function(){return o.default.post("/userinfo/",{})},t.logoutUser=function(){return o.default.post("/logout/",{})},t.new_expense=function(e){return o.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return o.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return o.default.post("/get_expense_summary/",e)},t.deleteExpenseDate=function(e){return o.default.post("/delete_expense_date/",e)},t.edit_expense=function(e){return o.default.post("/edit_expense/",e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.renderOptions=function(e){var t=[];if("day"===e){t.push(o.default.createElement("option",null,"Day"));for(var n=1;n<32;n++)t.push(o.default.createElement("option",{key:"day_"+n,value:n},n))}else if("month"===e){t.push(o.default.createElement("option",null,"Month"));for(var a=0;a<12;a++)t.push(o.default.createElement("option",{key:"month_"+a,value:a},i.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(o.default.createElement("option",null,"Year"));for(var r=2020;r>2e3;r--)t.push(o.default.createElement("option",{key:"year_"+r,value:r},r))}else if("week"===e){t.push(o.default.createElement("option",null,"Week"));for(var s=1;s<6;s++)t.push(o.default.createElement("option",{key:"week_"+s,value:s},s))}return t},t.formatDate=function(e){var t=void 0;t="object"!==(void 0===e?"undefined":a(e))?new Date(e):e;var n="";return n+=t.getDate()+" "+i.MONTHSNAMESHORT[t.getMonth()]+" "+t.getFullYear()},t.amountOnGraph=function(e){if(""===e)return"";parseFloat(e,10);return e>1e3?Math.round(10*parseFloat(e/1e3,10))/10+"K":e};var r,s=n(0),o=(r=s)&&r.__esModule?r:{default:r},i=n(1)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(13);o(n(8));var a=o(n(14)),r=o(n(15));o(n(16));n(25);var s=n(26);function o(e){return e&&e.__esModule?e:{default:e}}n(8);var i=n(27),l=n(28)(i),u=(0,a.default)(),c=process.env.PORT;u.use(i({secret:"foo",resave:!0,store:new l({url:process.env.MONGOLAB_URI})})),u.use(r.default.urlencoded({extended:!1})),u.use(r.default.json()),u.use(a.default.static("build/public")),u.use("/styles",a.default.static("src/pages/styles")),u.use(a.default.static("src/pages/static")),u.post("/signup",s.signUp),u.post("/signin",s.signIn),u.post("/logout",s.logout),u.post("/userinfo",s.getUserInfo),u.post("/new_expense",s.newExpense),u.post("/get_expense_data",s.getExpenseData),u.post("/get_expense_summary",s.getExpenseSummary),u.post("/delete_expense_date",s.deleteExpenseDate),u.post("/edit_expense",s.editExpense);u.get("*",function(e,t){t.send('\n        <html>\n            <head>\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="manifest" href="/manifest.json">\n                <link rel="icon" href="/img/budget64.png">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js">\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link rel="stylesheet" type="text/css" href="/styles/notfound.css">\n                <link rel="stylesheet" type="text/css" href="/styles/popup.css">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src = "/swRegisterer.js">\n                <\/script>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>')}),u.listen(c,function(){console.log("Server Started on Port: ",c)}),t.default=u},function(e,t,n){"use strict"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=u(s),i=u(n(4)),l=n(5);function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.signoutUser=n.signoutUser.bind(n),n.state={username:"",password:"",signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login",load:!window.signedIn},window.signedIn&&n.signoutUser(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"signoutUser",value:function(){(0,l.logoutUser)().then(function(e){if(!e.data.error)return window.signedIn=!1,console.log("Signing out success"),void window.location.reload();console.log("unable to signout user"),window.location.reload()}).catch(function(){console.log("unable to signout user"),window.location.reload()})}},{key:"head",value:function(){return o.default.createElement(i.default,null,o.default.createElement("title",null,"Expense Login"))}},{key:"successful",value:function(e){e.data&&!e.data.error?(this.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):this.setState(a({},e.data)),e.data&&e.data.error&&this.resetButtonText()}},{key:"isValid",value:function(){return this.state.username.length<5?(this.setState({error:!0,msg:"Username must be greater than 4 Characters"}),!1):!(this.state.password.length<8)||(this.setState({error:!0,msg:"Password must be greater than 7 Characters"}),!1)}},{key:"resetButtonText",value:function(){this.setState({signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login"})}},{key:"signUp",value:function(){var e=this;this.isValid()&&(this.setState({signupText:"Signing up..."}),(0,l.signup)({username:this.state.username,password:this.state.password}).then(function(t){e.successful(t)}).catch(function(t){e.resetButtonText(),console.log("Failed to Signup")}))}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(e||this.isValid())&&(e?this.setState({continueText:"Continuing with Test Login..."}):this.setState({signinText:"Signing in..."}),(0,l.signin)({username:a,password:r}).then(function(e){t.successful(e)}).catch(function(e){t.resetButtonText(),console.log("Failed to SignIn",e)}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.signinText,a=t.signupText,r=t.continueText;return o.default.createElement("div",null,this.head(),this.state.load&&o.default.createElement("div",null,o.default.createElement("div",{className:""},o.default.createElement("div",{className:"fieldsDiv"},o.default.createElement("div",{className:"username"},o.default.createElement("input",{className:"loginInput ",id:"loginUsername",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),o.default.createElement("div",{className:"password padT10"},o.default.createElement("input",{className:"loginInput ",id:"loginPwd",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),this.state.error&&o.default.createElement("div",{id:"errorDiv",className:"textCenter red "},this.state.msg),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn loginBtns themeBg",onClick:function(){return e.signIn(!1)}},n)),o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn loginBtns themeBg",onClick:this.signUp},a))),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new"},o.default.createElement("span",{className:"newBtn loginBtns testLogin themeBg",onClick:function(){return e.signIn(!0)}},r))))))}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(3));r(n(11));function r(e){return e&&e.__esModule?e:{default:e}}var s=a.default.model("Expenses",{token:{type:String,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=s(n(3)),r=(s(n(10)),s(n(12)));function s(e){return e&&e.__esModule?e:{default:e}}var o=new a.default.Schema({_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},token:{type:String,required:!1},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});function i(e,t){r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt for Token",n):r.default.hash(e._id.toHexString()+e.password.toString(),a,function(n,a){n?console.log("Unable to generate Hash for Token",n):(e.token=a,t())})})}o.pre("save",function(e){var t=this;t.isModified("password")?r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt",n):r.default.hash(t.password,a,function(n,a){n?console.log("Unable to generate Hash",n):(t.password=a,i(t,e))})}):i(t,e)});var l=a.default.model("Users",o);t.default=l},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=i(r),o=(n(17),i(n(9)),i(n(19)));n(2);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return s.default.createElement(o.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("react-router")},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(0)),r=n(2),s=l(n(9)),o=l(n(20)),i=l(n(21));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(i.default,e)}}),a.default.createElement(r.Route,{path:"*",render:function(e){return a.default.createElement(o.default,e)}}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=l(r),o=l(n(4)),i=n(2);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return s.default.createElement(o.default,null,s.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){return s.default.createElement("div",null,this.head(),s.default.createElement("div",{className:"notfoundContainer"},s.default.createElement("h5",{className:"notFoundText fb textCenter"},"Sorry, this page does not exist!")),s.default.createElement("div",null,s.default.createElement("ul",{className:"notfoundUL textCenter"},s.default.createElement("li",null,s.default.createElement("div",{className:"blueBtn"},s.default.createElement(i.NavLink,{to:"/login",className:"white"}," Login "))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=m(s),i=(m(n(4)),m(n(22))),l=n(5),u=n(1),c=m(n(23)),d=n(6),f=m(n(24)),p=n(2);function m(e){return e&&e.__esModule?e:{default:e}}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.cancelPopup=n.cancelPopup.bind(n),n.confirmPopup=n.confirmPopup.bind(n),n.deleteExpense=n.deleteExpense.bind(n),n.editExpense=n.editExpense.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,viewMore:!1,weekData:{},monthData:{},yearData:{},selectorWW:"",selectorMM:"",selectorYY:"",activeFilter:"spentRate"},n.viewedMore={},n.userInfo(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary(),this.updateTogglerContent()}},{key:"updateTogglerContent",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"currentTabData",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"findCurrentDataProp",value:function(){var e=this.state.activeTab;return e===u.WEEK?"weekData":e===u.MONTH?"monthData":e===u.YEAR?"yearData":void 0}},{key:"getParams",value:function(e){var t=this.state,n=t.activeTab,a=t.activeFilter,r=this.currentTabData(),s=r.dd,o=r.mm,i=r.yy,l=r.ww,u=i&&void 0!==o&&s?new Date(i,o,s):new Date,c=u.getMonth(),d=u.getDay(),f=u.getDate(),p=u.getFullYear();if(!l){var m=new Date(p,c,1).getDay();l=Math.ceil((m+u.getDate())/7)}return this.state.selectorWW&&void 0!==this.state.selectorMM&&this.state.selectorYY&&(p=parseInt(this.state.selectorYY),c=parseInt(this.state.selectorMM),l=parseInt(this.state.selectorWW)),{tab:n,mm:c,dow:d,ww:l,yy:p,dd:f,activeFilter:a}}},{key:"userInfo",value:function(){var e=this;(0,l.getUserInfo)().then(function(t){t.data&&t.data.userInfo?e.setState({userInfo:t.data.userInfo}):e.navigateToSignIn()}).catch(function(){e.navigateToSignIn()})}},{key:"getExpenseSummary",value:function(e,t){var n=this,r=this.getParams(t),s=this.findCurrentDataProp();(0,l.get_expense_summary)(r).then(function(e){n.setState(h({},s,a({},n.state[s],{plotData:a({},e.data)})))},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(e,t){var n=this,r=this.getParams(t),s=this.findCurrentDataProp();(0,l.get_expense_data)(r).then(function(e){var t,r=e.data,o=r.expenseList,i=r.incomeList,l=r.standing,u=r.spent,c=r.ww,d=r.yy,f=r.mm,p=r.dd;n.setState((h(t={},s,a({},n.state[s],{expenseList:o,incomeList:i,standing:l,spent:u,ww:c,yy:d,mm:f,dd:p})),h(t,"selectorMM",f),h(t,"selectorWW",c),h(t,"selectorYY",d),t))},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.otherHalfLandingTxt&&(this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")),this.refs.addBtnContainer.classList.toggle("dn")}},{key:"navigateToSignIn",value:function(){this.state.userInfo?(0,l.logoutUser)().then(function(){window.location.href="/login"}):window.location.href="/login"}},{key:"renderLeftMenuBar",value:function(){var e=this.state.userInfo;return o.default.createElement("div",{className:"menuBar"},o.default.createElement("div",{ref:"popup",className:"popup zi2 ",onClick:this.leftMenuClick},o.default.createElement("div",{className:"sideBar in-bl fl"},o.default.createElement("div",{className:"menu-option",onClick:this.navigateToSignIn},e?"Logout":"Sign In"),o.default.createElement("div",{className:"menu-option"},o.default.createElement("a",{style:{color:"#757575c9"},href:"https://dhilipkmr.github.io/materializedResume/",target:"_blank"},"About Me")))))}},{key:"newExpense",value:function(e,t,n){var a=this;t?this.setState({showNewExpense:e,editExpense:void 0!==n?n:this.state.editExpense,weekData:{},monthData:{},yearData:{}},function(){a.getExpense(t),a.getExpenseSummary(t)}):this.setState({showNewExpense:e,editExpense:n})}},{key:"cancelPopup",value:function(){this.setState({showPopup:!1})}},{key:"confirmPopup",value:function(){var e=this;this.setState({showPopup:!1}),(0,l.deleteExpenseDate)({id:this.state.deleteTransactionObj.id}).then(function(t){t&&(e.getExpense(!0,!0),e.getExpenseSummary(!0,!0))})}},{key:"editExpense",value:function(e){this.setState({editExpense:!0,editTransactionObj:e})}},{key:"deleteExpense",value:function(e){this.setState({showPopup:!0,deleteTransactionObj:e})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(e){var t=this;if(!e){for(var n=[],r=0;r<2;r++)n.push(o.default.createElement("div",null,o.default.createElement("div",{key:"transaction_type_"+r,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),o.default.createElement("div",{className:"progressBar bl textCenter mt30"})),o.default.createElement("div",{className:"cardBrdrBtm"})));return n}return this.currentTabData().expenseList.transactionList.map(function(e,n){return t.state.viewMore||t.viewedMore[t.state.activeTab]||!t.state.viewMore&&n<2?(t.state.viewMore&&(t.viewedMore[t.state.activeTab]=!0),o.default.createElement("div",null,o.default.createElement("div",{key:"transaction_type_"+n,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("div",{className:"cat w33 in-bl tl"},e.category),o.default.createElement("div",{className:"cat w33 in-bl tc"},(0,d.formatDate)(e.date)),o.default.createElement("div",{className:"cat w33 in-bl tr"},o.default.createElement("svg",{onClick:function(){return t.editExpense(a({},e))},height:"15px",viewBox:"0 -1 450 400",width:"15px"},o.default.createElement("path",{d:"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0"})))),o.default.createElement("div",{className:"progressBar bl textCenter marginT25"},o.default.createElement("div",{className:"filled",style:{maxWidth:e.percent+"%"}})),o.default.createElement("div",null,o.default.createElement("div",{className:"padR15 padL10 cat w33 in-bl tl"},"₹"+e.amount),o.default.createElement("div",{className:"cat w33 in-bl tc"},e.percent+" %"),o.default.createElement("div",{className:"padR15 cat w33 in-bl tr"},o.default.createElement("svg",{onClick:function(){return t.deleteExpense({id:e.id})},fill:"#a20404",height:"15px",viewBox:"-40 0 450 400",width:"15px"},o.default.createElement("path",{d:"m232.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m114.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m28.398438 127.121094v246.378906c0 14.5625 5.339843 28.238281 14.667968 38.050781 9.285156 9.839844 22.207032 15.425781 35.730469 15.449219h189.203125c13.527344-.023438 26.449219-5.609375 35.730469-15.449219 9.328125-9.8125 14.667969-23.488281 14.667969-38.050781v-246.378906c18.542968-4.921875 30.558593-22.835938 28.078124-41.863282-2.484374-19.023437-18.691406-33.253906-37.878906-33.257812h-51.199218v-12.5c.058593-10.511719-4.097657-20.605469-11.539063-28.03125-7.441406-7.421875-17.550781-11.5546875-28.0625-11.46875h-88.796875c-10.511719-.0859375-20.621094 4.046875-28.0625 11.46875-7.441406 7.425781-11.597656 17.519531-11.539062 28.03125v12.5h-51.199219c-19.1875.003906-35.394531 14.234375-37.878907 33.257812-2.480468 19.027344 9.535157 36.941407 28.078126 41.863282zm239.601562 279.878906h-189.203125c-17.097656 0-30.398437-14.6875-30.398437-33.5v-245.5h250v245.5c0 18.8125-13.300782 33.5-30.398438 33.5zm-158.601562-367.5c-.066407-5.207031 1.980468-10.21875 5.675781-13.894531 3.691406-3.675781 8.714843-5.695313 13.925781-5.605469h88.796875c5.210937-.089844 10.234375 1.929688 13.925781 5.605469 3.695313 3.671875 5.742188 8.6875 5.675782 13.894531v12.5h-128zm-71.199219 32.5h270.398437c9.941406 0 18 8.058594 18 18s-8.058594 18-18 18h-270.398437c-9.941407 0-18-8.058594-18-18s8.058593-18 18-18zm0 0"}),o.default.createElement("path",{d:"m173.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}))))),o.default.createElement("div",{className:"cardBrdrBtm"}))):null})}},{key:"changeFilter",value:function(e){var t=this;"date"===e?this.setState({activeFilter:"date"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)}):"spentRate"===e&&this.setState({activeFilter:"spentRate"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)})}},{key:"getTransactionCard",value:function(){var e=this,t=this.currentTabData(),n=this.state,a=n.activeTab,r=n.viewMore,s=void 0!==r&&r,i=n.userInfo,l=n.activeFilter,c=t.expenseList;return o.default.createElement("div",null,o.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(s?"showAllTransaction":"")},o.default.createElement("div",{className:"textCenter mt5"},o.default.createElement("span",{className:"sortType sortTypeLeft fs14 "+("spentRate"===l?" leftActiveRight ":""),onClick:function(){return e.changeFilter("spentRate")}},"Spent Rate"),o.default.createElement("span",{className:"sortType sortTypeRight fs14 "+("spentRate"===l?" leftActiveLeft ":"rightActiveRight"),onClick:function(){return e.changeFilter("date")}},"Date")),o.default.createElement("div",null,o.default.createElement("div",{className:"transactScroller"},void 0!==c&&0===Object.keys(c).length?o.default.createElement("div",{className:"textCenter padT20 mh10p"},o.default.createElement("div",{className:"tu ",onClick:function(){return e.newExpense(!0)}},"Add Transaction "),!i&&o.default.createElement("div",{className:"padT10 padB20"},o.default.createElement("a",{href:"/login"},o.default.createElement("span",null,"Sign In"))," for Past Transactions")):o.default.createElement("div",null,a===u.WEEK?this.renderInnerTransactioncard(c):null,a===u.MONTH?this.renderInnerTransactioncard(c):null,a===u.YEAR?this.renderInnerTransactioncard(c):null)))),o.default.createElement("div",{className:"viewMoreArrow",onClick:function(){return e.clickViewMore()}},o.default.createElement("svg",{className:s?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),o.default.createElement("div",{className:"posRel"},o.default.createElement("div",{ref:"addBtnContainer",className:"addBtnContainer "},o.default.createElement("div",{className:""},o.default.createElement("span",{className:"addBtn themeBg",onClick:function(){return e.newExpense(!0)}}," + ")))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"getTogglerHeader",value:function(){var e=this.state.activeTab,t=this.currentTabData(),n=t.mm,a=t.yy,r=t.ww,s="",o=!1,i=!1;return e===u.MONTH?(s=void 0!==n?u.MONTHSNAME[n]:"----",o=0===n,i=11===n):e===u.WEEK?(s=r?"Week "+r:"----",o=1===r,i=5===r):(s=a||"----",i=2018===a),{togglerHeader:s,isPrevDisabled:o,isNextDisabled:i}}},{key:"toggleType",value:function(e,t){var n=this,r={};e===u.WEEK?r={selectorWW:t}:e===u.MONTH?r={selectorMM:t}:e===u.YEAR&&(r={selectorYY:t}),this.setState(a({},r),function(){n.getExpense(!0,!0),n.getExpenseSummary(!0,!0)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=(t.viewMore,t.editExpense),s=t.editTransactionObj,l=this.currentTabData(),m=l.standing,h=void 0===m?void 0:m,v=l.spent,y=void 0===v?void 0:v,g=l.plotData,E=void 0===g?void 0:g,b=l.incomeList,w=void 0===b?void 0:b,x=this.getTogglerHeader();x.togglerHeader,x.isPrevDisabled,x.isNextDisabled;return o.default.createElement("div",{className:""},o.default.createElement(p.Prompt,{message:function(){return"Going back will Log you out."}}),o.default.createElement("div",null,o.default.createElement("div",{ref:"backDrop",className:"transition2a zi1 "+(a||r?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),o.default.createElement("div",{ref:"mainContent",className:"mainContent"},o.default.createElement("div",{className:""},o.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 first-half-landing"},o.default.createElement("div",{className:"standing"},o.default.createElement("span",{className:"left-menu-container",onClick:this.leftMenuClick},o.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),o.default.createElement("div",{className:"heading"},o.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),o.default.createElement("div",null,o.default.createElement("span",{className:"f18"},"₹ "),o.default.createElement("span",{className:"standingAmt"},void 0!==h?h:"0")),o.default.createElement("div",{className:"textCenter"},o.default.createElement("div",null,o.default.createElement("span",{className:"f11"},this.getCurrentDate())))),o.default.createElement("div",{className:"expenseDaysBtn w85 m10a"},o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("div",null,o.default.createElement("select",{onChange:function(t){return e.toggleType(u.WEEK,t.target.value)},id:"weekSelector db white",value:this.state.selectorWW},(0,d.renderOptions)("week")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.WEEK)},className:"db white padT10 "+(n===u.WEEK?"dayTypeBtn-active":""),htmlFor:"weekSelector"},"Week"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.WEEK?"w60":"")}))),o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("select",{onChange:function(t){return e.toggleType(u.MONTH,t.target.value)},id:"monthSelector db white",value:this.state.selectorMM},(0,d.renderOptions)("month")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.MONTH)},className:"db white padT10 "+(n===u.MONTH?"dayTypeBtn-active":""),htmlFor:"monthSelector"},"Month"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.MONTH?"w60":"")})),o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("select",{onChange:function(t){return e.toggleType(u.YEAR,t.target.value)},id:"yearSelector db white",value:this.state.selectorYY},(0,d.renderOptions)("year")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.YEAR)},className:"db white padT10 "+(n===u.YEAR?"dayTypeBtn-active":""),htmlFor:"yearSelector"},"Year"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.YEAR?"w60":"")}))),o.default.createElement("div",{className:"spentIncomeSection"},o.default.createElement("div",{className:"in-bl "},o.default.createElement("div",{className:"fl in-bl spentIcon"},o.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==y?y:"0"))),o.default.createElement("div",{className:"in-bl  "},o.default.createElement("div",{className:"fl in-bl incomeIcon "},o.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(w&&void 0!==w.amount?w.amount:"0")))),this.getTransactionCard())),E&&E.perDivisionData&&E.perDivisionData.length>0?o.default.createElement("div",{className:"other-half-landing mt10"},o.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},o.default.createElement("div",{className:"textCenter trSumaryHeading fb"},o.default.createElement("span",null,"Expense Trends")),n===u.WEEK?o.default.createElement(c.default,{plotData:E,tab:n}):null,n===u.MONTH?o.default.createElement(c.default,{plotData:E,tab:n}):null,n===u.YEAR?o.default.createElement(c.default,{plotData:E,tab:n}):null)):null)),a?o.default.createElement("div",null,o.default.createElement(i.default,{newExpense:this.newExpense})):null,r?o.default.createElement("div",null,o.default.createElement(i.default,{newExpense:this.newExpense,editTransactionObj:s})):null,this.state.showPopup&&o.default.createElement(f.default,{cancelCallback:this.cancelPopup,confirmCallback:this.confirmPopup}))}}]),t}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),i=(a=o)&&a.__esModule?a:{default:a},l=n(5),u=n(1),c=n(6);var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n);var a="",r="",s="",o="",i="";if(e.editTransactionObj){a=e.editTransactionObj.amount,r=e.editTransactionObj.category;var l=new Date(e.editTransactionObj.date);s=l.getDate(),o=l.getMonth(),i=l.getFullYear()}return n.state={type:"expense",amount:a,category:r,day:s,month:o,year:i,error:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),s(t,[{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){e&&this.state.error.amount?this.setState({amount:e,error:{}}):this.setState({amount:e})}},{key:"changeCategory",value:function(e){e&&this.state.error.category?this.setState({category:e,error:{}}):this.setState({category:e})}},{key:"removeDateError",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year;new Date(parseInt(a),parseInt(n),parseInt(t))>new Date||this.setState({error:{}})}},{key:"changeDate",value:function(e){var t=this;if(e===u.TODAY){var n=new Date;this.setState({todayTap:!0,yesterdayTap:!1,day:n.getDate(),month:n.getMonth(),year:n.getFullYear()},function(){t.removeDateError()})}else if(e==u.YESTERDAY){var a=new Date,s=new Date(a.setDate(a.getDate()-1));this.setState({todayTap:!1,yesterdayTap:!0,day:s.getDate(),month:s.getMonth(),year:s.getFullYear()},function(){t.removeDateError()})}else this.setState(r({},e),function(){t.removeDateError()})}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return r.test(t)&&r.test(n)&&/^\d{4}$/.test(a)?new Date(parseInt(a),parseInt(n),parseInt(t))>new Date?(this.setState({error:{date:"Please do not Provide Future Date!"}}),!1):(this.date=new Date(parseInt(a),parseInt(n),parseInt(t)),!0):(this.setState({error:{date:"Please provide a Valid Date!"}}),!1)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return!t||t<=0?(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1):n?!!this.isValidDate():(this.setState({error:{category:"Please provide a Valid Category"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category;if(this.setState({disableSubmit:!0}),this.validateParams()){var s=this.date,o=s.getMonth(),i=s.getFullYear(),u=new Date(i,o,1).getDay(),c=Math.ceil((u+s.getDate())/7),d=s.getDay(),f=s.getDate(),p={amount:n,type:a,date:s,mm:o,yy:i,ww:c,dow:d,dd:f,category:r};this.props.editTransactionObj?(p.id=this.props.editTransactionObj.id,(0,l.edit_expense)(p).then(function(t){e.props.newExpense(!1,!0,!1)},function(t){console.log("Unable to Edit Expense",t),e.props.newExpense(!1,!1,!1)})):(0,l.new_expense)(p).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.props.newExpense(!1,!1)})}}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),s=t.error,o=t.disableSubmit;return i.default.createElement("div",{className:"newExpenseContainer zi2"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement("span",{className:"newBtn "+("expense"===n?"selectedType":""),onClick:function(){return e.selectType("expense")}},"Expense"),i.default.createElement("span",{className:"newBtn "+("income"===n?"selectedType":""),onClick:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{className:"padL10 w75 "+(s.amount?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newExpAmt",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),i.default.createElement("span",{className:"requiredAshterix"}," * "),s.amount?i.default.createElement("div",{className:"errorDiv"},s.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{className:"padL10 w75 "+(s.category?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newCategAmt",placeholder:"Category",onChange:function(t){return e.changeCategory(t.target.value)},value:r}),i.default.createElement("span",{className:"requiredAshterix"}," * "),s.category?i.default.createElement("div",{className:"errorDiv"},s.category):null),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",className:"w20 ",onChange:function(t){return e.changeDate({day:t.target.value})},value:this.state.day},(0,c.renderOptions)("day")),i.default.createElement("select",{ref:"month",className:"w25 ",onChange:function(t){return e.changeDate({month:t.target.value})},value:this.state.month},(0,c.renderOptions)("month")),i.default.createElement("select",{ref:"year",className:"w20 ",onChange:function(t){return e.changeDate({year:t.target.value})},value:this.state.year},(0,c.renderOptions)("year")),i.default.createElement("div",{className:"mt20"},i.default.createElement("span",{className:"m10 "+(this.state.todayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClick:function(){return e.changeDate(u.TODAY)}},"Today"),i.default.createElement("span",{className:"m10 "+(this.state.yesterdayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClick:function(){return e.changeDate(u.YESTERDAY)}},"Yesterday")),s.date?i.default.createElement("div",{className:"mt10 errorDiv"},s.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement("div",{className:"submitBtn themeBg "+(o?"disableBtn":""),onClick:this.submitNewExpense},o?"Adding...":"Done")))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=(a=s)&&a.__esModule?a:{default:a},i=n(1),l=n(6);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"renderPoints",value:function(e,t,n){for(var a=[],r=this.props.tab,s=0,u=1;u<e.length-1;u++){var c="";if(r===i.WEEK)c=i.WEEKNAMESHORT[s++].toUpperCase();else if(r===i.YEAR)c=i.MONTHSNAMESHORT[s++].toUpperCase();else if(r===i.MONTH){if(u%2!=0)continue;c=u}a.push(o.default.createElement("g",{key:"group_"+u},o.default.createElement("a",null,o.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:t[u]-5,fontSize:"5",textAnchor:"middle"},(0,l.amountOnGraph)(n[u])),o.default.createElement("circle",{cx:e[u],cy:t[u],stroke:"#0757d0",fill:"#0757d0",r:"0.5",strokeWidth:"1"}),o.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:122,fontSize:"5",textAnchor:"middle"},c))))}return a}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],s=[],l=i.DIVISIONLENGTH[n],u=i.MAXLENGTHPERTAB[n],c=t.maxAmount,d=180/l,f=n===i.MONTH?0:-1,p="";for(a.push(0),r.push(115),s.push(""),t.perDivisionData.forEach(function(e){for(;e.division>f;){var t=a[a.length-1];if(a.push(t+d),e.division===f+1){var n=e.amount/c*100;r.push(115-1.15*n),s.push(e.amount)}else r.push(115),s.push("");f++}});u>f;){var m=a[a.length-1];a.push(m+d),r.push(115),f++,s.push("")}var h=a[a.length-1];a.push(h+d),r.push(115),s.push("");for(var v=0;v<a.length;v++)p+=" "+a[v]+","+r[v]+" ";return p?o.default.createElement("div",null,o.default.createElement("svg",{viewBox:window&&window.screen.width>600?"-50 -10 285 210":"-15 -15 220 150",style:{margin:"10px"}},o.default.createElement("polyline",{points:p,className:"graphPlotLine"}),this.renderPoints(a,r,s))):null}},{key:"render",value:function(){return o.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=(a=s)&&a.__esModule?a:{default:a};var i=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"render",value:function(){var e=this.props,t=e.cancelCallback,n=e.confirmCallback;return o.default.createElement("div",{className:"popupBackDrop"},o.default.createElement("div",{className:"popupContainer whiteBg"},o.default.createElement("div",{className:"popupHeader"},o.default.createElement("div",{className:"fb fs14 padB10 textCenter"},"Do you want to Delete this transaction?"),o.default.createElement("div",{className:"tr"},o.default.createElement("div",{className:"newBtn white themeBg in-bl tr mf5 fs12",onClick:n},"Confirm"),o.default.createElement("div",{className:"newBtn white themeBg in-bl tr mf5 fs12",onClick:t},"Cancel")))))}}]),t}();t.default=i},function(e,t,n){"use strict";var a=n(3);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.editExpense=t.deleteExpenseDate=t.getExpenseSummary=t.getExpenseData=t.newExpense=t.getUserInfo=t.logout=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=u(n(3)),s=(u(n(7)),u(n(10))),o=u(n(11)),i=n(1),l=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}t.signUp=function(e,t){var n=e.body,a=n.username,s=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=(n.emailId,new o.default({_id:r.default.Types.ObjectId(),username:s,password:l}));o.default.find({username:s}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):u.save().then(function(n){e.session.token=n.token,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,s=n.password,i=void 0===s?"":s;n.emailId;console.log(e.session.user),o.default.findOne({username:r}).then(function(n){n?l.default.compare(i,n.password,function(a){a?t.send({error:!0,msg:"Invalid password"}):(e.session.token=n.token,t.send({error:!1,msg:"success"}))}):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.logout=function(e,t){e.session.token=null,t.send({error:!1,msg:"success"})},t.getUserInfo=function(e,t){if(e.session.token){var n=e.session.token;o.default.findOne({token:n}).then(function(e){if(e){var n=e.username;t.send({userInfo:{username:n}})}else t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})}else t.send(200).send({error:!0})},t.newExpense=function(e,t){var n=e.body,r=n.amount,o=n.date,i=e.body,l=i.ww,u=i.dow,c=i.mm,d=i.yy,f=i.dd,p=i.type,m=i.category,h={amount:r=parseInt(r),category:m,date:o=new Date(o),type:p,ww:l,dow:u,mm:c,yy:d,dd:f};new s.default(a({token:e.session.token},h)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session.token?e.session.token:"";function r(n,a){if(n)respond.send(500).send(n);else{var r={},s={};Object.keys(a).map(function(e){"expense"===a[e].type?r=a[e]:"income"===a[e].type&&(s=a[e])});var o=void 0,i=void 0;r&&r.transactionList?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),o=r.amount):o=0,s&&s.transactionList?(s.transactionList.map(function(e){var t=e.amount/(s.amount/100);e.percent=Math.round(100*t)/100}),i=s.amount-o):i=0-o;var l=e.body,u=l.yy,c=l.mm,d=l.ww,f=l.dd;t.send({dd:f,mm:c,yy:u,ww:d,expenseList:r,incomeList:s,spent:o,standing:i})}}var o={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount",date:"$date",id:"$_id"}}}},l={$unwind:"$transactionList"},u={};u="spentRate"===e.body.activeFilter?{$sort:{"transactionList.amount":-1}}:{$sort:{"transactionList.date":-1}};var c={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},d=e.body,f=d.tab,p=d.ww,m=d.mm,h=d.yy;d.dow;f===i.YEAR?s.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},a({},o),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.MONTH?s.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},a({},o),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.WEEK&&s.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},{$match:{ww:parseInt(p)}},a({},o),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var r=e.session.token?e.session.token:"",o=e.body,l=o.tab,u=o.yy,c=o.mm,d=o.ww;l===i.YEAR?s.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.MONTH?s.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.WEEK&&s.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{ww:d}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)},t.deleteExpenseDate=function(e,t){var n=e.body.id;s.default.findOneAndRemove({_id:n}).then(function(e){t.send(e)})},t.editExpense=function(e,t){var n=e.body,a=n.amount,r=n.date,o=e.body,i=o.id,l=o.ww,u=o.dow,c=o.mm,d=o.yy,f=o.dd,p=o.type,m=o.category;a=parseInt(a),r=new Date(r);s.default.findOneAndUpdate({_id:i},{$set:{amount:a,category:m,date:r,type:p,ww:l,dd:f,mm:c,yy:d,dow:u}},{upsert:!0,returnNewDocument:!0}).then(function(e){t.send(e)})}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvY29uc3RhbnRzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXItZG9tXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibW9uZ29vc2VcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1oZWxtZXRcIiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvYXBpQ2FsbHMvQXBpQ2FsbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovLy8uL3NlcnZlci9zZXJ2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvTG9naW4uanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL21vZGVscy9leHBlbnNlTW9kZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL21vZGVscy91c2VyTW9kZWwuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmNyeXB0anNcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiYWJlbC1wb2x5ZmlsbFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcImV4cHJlc3NcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiIiwid2VicGFjazovLy8uL3NyYy9hcHAuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3Qtcm91dGVyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYXhpb3NcIiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvcm91dGVzL3JvdXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvY29tcG9uZW50cy9Ob3RGb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvY29tcG9uZW50cy9Ib21lLmpzIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9jb21wb25lbnRzL05ld0V4cGVuc2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvR3JhcGguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL2RiL21vbmdvb3NlLmpzIiwid2VicGFjazovLy8uL3NlcnZlci9hcGkvYXBpQ2FsbHMuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzcy1zZXNzaW9uXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiY29ubmVjdC1tb25nb1wiIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwicmVxdWlyZSIsIk1PTlRIIiwiWUVBUiIsIldFRUsiLCJESVZJU0lPTkxFTkdUSCIsIm1vbnRoIiwieWVhciIsIndlZWsiLCJNQVhMRU5HVEhQRVJUQUIiLCJNT05USFNOQU1FIiwiTU9OVEhTTkFNRVNIT1JUIiwiV0VFS05BTUVTSE9SVCIsIlRPREFZIiwiWUVTVEVSREFZIiwiX2F4aW9zIiwic2lnbnVwIiwicGFyYW1zIiwiYXhpb3MiLCJwb3N0IiwiX2V4dGVuZHMiLCJzaWduaW4iLCJnZXRVc2VySW5mbyIsImxvZ291dFVzZXIiLCJuZXdfZXhwZW5zZSIsImdldF9leHBlbnNlX2RhdGEiLCJnZXRfZXhwZW5zZV9zdW1tYXJ5IiwiZGVsZXRlRXhwZW5zZURhdGUiLCJlZGl0X2V4cGVuc2UiLCJyZW5kZXJPcHRpb25zIiwidHlwZSIsIm9wdGlvbnMiLCJwdXNoIiwiX3JlYWN0MiIsImRlZmF1bHQiLCJjcmVhdGVFbGVtZW50IiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJfdHlwZW9mIiwiRGF0ZSIsInJlc3VsdCIsImdldERhdGUiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwiYW1vdW50T25HcmFwaCIsInZhbCIsInBhcnNlRmxvYXQiLCJNYXRoIiwicm91bmQiLCJfcmVhY3QiLCJfY29uc3RhbnRzIiwiX2FwaUNhbGxzIiwic2Vzc2lvbiIsIk1vbmdvU3RvcmUiLCJhcHAiLCJfZXhwcmVzczIiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJzZWNyZXQiLCJyZXNhdmUiLCJzdG9yZSIsInVybCIsIk1PTkdPTEFCX1VSSSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZXhwcmVzcyIsInN0YXRpYyIsInNpZ25VcCIsInNpZ25JbiIsImxvZ291dCIsIm5ld0V4cGVuc2UiLCJnZXRFeHBlbnNlRGF0YSIsImdldEV4cGVuc2VTdW1tYXJ5IiwiZWRpdEV4cGVuc2UiLCJyZXEiLCJyZXMiLCJzZW5kIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsIl9BcGlDYWxscyIsIkxvZ2luIiwicHJvcHMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3RoaXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiaGVhZCIsInNpZ25vdXRVc2VyIiwic3RhdGUiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwic2lnbmluVGV4dCIsInNpZ251cFRleHQiLCJjb250aW51ZVRleHQiLCJsb2FkIiwid2luZG93Iiwic2lnbmVkSW4iLCJDb21wb25lbnQiLCJ0aGVuIiwicmVzcCIsImRhdGEiLCJlcnJvciIsImxvY2F0aW9uIiwicmVsb2FkIiwiY2F0Y2giLCJfcmVhY3RIZWxtZXQyIiwiaGlzdG9yeSIsInNldFN0YXRlIiwicmVzZXRCdXR0b25UZXh0IiwibGVuZ3RoIiwibXNnIiwiX3RoaXMyIiwiaXNWYWxpZCIsInN1Y2Nlc3NmdWwiLCJlcnIiLCJ3aXRoVGVzdENyZWRzIiwiX3RoaXMzIiwiX3N0YXRlIiwiX3RoaXM0IiwiX3N0YXRlMiIsImNsYXNzTmFtZSIsImlkIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJvbkNsaWNrIiwiRXhwZW5zZXMiLCJtb25nb29zZSIsIm1vZGVsIiwidG9rZW4iLCJTdHJpbmciLCJyZWYiLCJhbW91bnQiLCJOdW1iZXIiLCJyZXF1aXJlZCIsInRyaW0iLCJjYXRlZ29yeSIsIm5vdyIsImRkIiwid3ciLCJkb3ciLCJtbSIsInl5IiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsIl9pZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJtaW5sZW5ndGgiLCJlbWFpbElkIiwiZXhwZW5zZSIsImdlbmVyYXRlVG9rZW4iLCJ1c2VyRG9jIiwibmV4dCIsImJjcnlwdCIsImdlblNhbHQiLCJzYWx0IiwiaGFzaCIsInRvSGV4U3RyaW5nIiwidG9TdHJpbmciLCJwcmUiLCJpc01vZGlmaWVkIiwiVXNlcnMiLCJBcHAiLCJfcm91dGVzMiIsIl9yZWFjdFJvdXRlckRvbSIsIlN3aXRjaCIsIlJvdXRlIiwicGF0aCIsImV4YWN0IiwicmVuZGVyIiwiX0xvZ2luMiIsIl9Ib21lMiIsIl9Ob3RGb3VuZDIiLCJOb3RGb3VuZCIsIk5hdkxpbmsiLCJ0byIsIl91dGlscyIsIkhvbWUiLCJsZWZ0TWVudUNsaWNrIiwibmF2aWdhdGVUb1NpZ25JbiIsImNhbmNlbFBvcHVwIiwiY29uZmlybVBvcHVwIiwiZGVsZXRlRXhwZW5zZSIsImFjdGl2ZVRhYiIsInNob3dOZXdFeHBlbnNlIiwidmlld01vcmUiLCJ3ZWVrRGF0YSIsIm1vbnRoRGF0YSIsInllYXJEYXRhIiwic2VsZWN0b3JXVyIsInNlbGVjdG9yTU0iLCJzZWxlY3RvcllZIiwiYWN0aXZlRmlsdGVyIiwidmlld2VkTW9yZSIsInVzZXJJbmZvIiwiZ2V0RXhwZW5zZSIsInVwZGF0ZVRvZ2dsZXJDb250ZW50IiwidG9nZ2xlVmFsIiwidGFiIiwiX2N1cnJlbnRUYWJEYXRhIiwiY3VycmVudFRhYkRhdGEiLCJjdXJyRGF0ZSIsImdldERheSIsImZpcnN0RGF5b2ZNb250aCIsImNlaWwiLCJwYXJzZUludCIsImxvYWROZXdTdW1tYXJ5RGF0YSIsImdldFBhcmFtcyIsImFjdGl2ZVRhYkRhdGEiLCJmaW5kQ3VycmVudERhdGFQcm9wIiwiX2RlZmluZVByb3BlcnR5IiwicGxvdERhdGEiLCJsb2FkTmV3RXhwZW5zZURhdGEiLCJfdGhpczQkc2V0U3RhdGUiLCJfcmVzcCRkYXRhIiwiZXhwZW5zZUxpc3QiLCJpbmNvbWVMaXN0Iiwic3RhbmRpbmciLCJzcGVudCIsIl90aGlzNSIsInJlZnMiLCJiYWNrRHJvcCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInBvcHVwIiwib3RoZXJIYWxmTGFuZGluZ1R4dCIsImZpcnN0SGFsZkxhbmRpbmdUeHQiLCJhZGRCdG5Db250YWluZXIiLCJocmVmIiwic3R5bGUiLCJjb2xvciIsInNhdmVTdWNjZXNzIiwiZWRpdEV4cGVuc2VWYWwiLCJfdGhpczYiLCJzaG93UG9wdXAiLCJfdGhpczciLCJkZWxldGVUcmFuc2FjdGlvbk9iaiIsIm9iaiIsImVkaXRUcmFuc2FjdGlvbk9iaiIsInRyYW5zYWN0ZWRDYXJkIiwic2Nyb2xsVG9wIiwiaGFzTGlzdERlZmluZWQiLCJfdGhpczgiLCJsb2FkZXIiLCJ0cmFuc2FjdGlvbkxpc3QiLCJtYXAiLCJ0cmFuc2FjdGlvbiIsImluZGV4IiwiaGVpZ2h0Iiwidmlld0JveCIsIndpZHRoIiwibWF4V2lkdGgiLCJwZXJjZW50IiwiZmlsbCIsIl90aGlzOSIsIl90aGlzMTAiLCJfc3RhdGUyJHZpZXdNb3JlIiwidW5kZWZpbmVkIiwiY2hhbmdlRmlsdGVyIiwia2V5cyIsInJlbmRlcklubmVyVHJhbnNhY3Rpb25jYXJkIiwiY2xpY2tWaWV3TW9yZSIsInhtbG5zIiwiY3Vyck1vbnRoIiwiX2N1cnJlbnRUYWJEYXRhMyIsInRvZ2dsZXJIZWFkZXIiLCJpc1ByZXZEaXNhYmxlZCIsImlzTmV4dERpc2FibGVkIiwiX3RoaXMxMSIsIm9ialRvQ2hhbmdlIiwiX3RoaXMxMiIsIl9zdGF0ZTMiLCJfY3VycmVudFRhYkRhdGE0IiwiX2N1cnJlbnRUYWJEYXRhNCRzdGFuIiwiX2N1cnJlbnRUYWJEYXRhNCRzcGVuIiwiX2N1cnJlbnRUYWJEYXRhNCRwbG90IiwiX2N1cnJlbnRUYWJEYXRhNCRpbmNvIiwiX2dldFRvZ2dsZXJIZWFkZXIiLCJnZXRUb2dnbGVySGVhZGVyIiwiUHJvbXB0IiwibWVzc2FnZSIsInJlbmRlckxlZnRNZW51QmFyIiwic3JjIiwiZ2V0Q3VycmVudERhdGUiLCJ0b2dnbGVUeXBlIiwiY2hhbmdlRXhwZW5zZURheUZvcm1hdCIsImh0bWxGb3IiLCJnZXRUcmFuc2FjdGlvbkNhcmQiLCJwZXJEaXZpc2lvbkRhdGEiLCJfR3JhcGgyIiwiX05ld0V4cGVuc2UyIiwiX1BvcHVwMiIsImNhbmNlbENhbGxiYWNrIiwiY29uZmlybUNhbGxiYWNrIiwiTmV3RXhwZW5zZSIsInNlbGVjdFR5cGUiLCJzdWJtaXROZXdFeHBlbnNlIiwiZGF5IiwidG9kYXlUYXAiLCJ5ZXN0ZXJkYXlUYXAiLCJyZW1vdmVEYXRlRXJyb3IiLCJzZXREYXRlIiwiZGF0ZVJlZyIsInRlc3QiLCJpc1ZhbGlkRGF0ZSIsIl9zdGF0ZTQiLCJkaXNhYmxlU3VibWl0IiwidmFsaWRhdGVQYXJhbXMiLCJyZXNwb25zZSIsIl9zdGF0ZTUiLCJhdXRvLWNvbXBsZXRlIiwiY2hhbmdlQW1vdW50IiwiY2hhbmdlQ2F0ZWdvcnkiLCJjaGFuZ2VEYXRlIiwiR3JhcGgiLCJnZW5lcmF0ZVNWRyIsImFkZEV2ZW50TGlzdGVuZXIiLCJhbGVydCIsInhDb29yZGluYXRlcyIsInlDb29yZGluYXRlcyIsImFtb3VudE9uQ29vcmRpbmF0ZXMiLCJwb2ludHNFbGVtZW50IiwidGV4dEluZGV4IiwicG9pbnRUZXh0IiwidG9VcHBlckNhc2UiLCJ4IiwieSIsImZvbnRTaXplIiwidGV4dEFuY2hvciIsImN4IiwiY3kiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsIkhFSUdIVCIsIl9wcm9wcyIsIm1heExlbmciLCJtYXhBbXQiLCJtYXhBbW91bnQiLCJ4Q29vcmRpbmF0ZURpdkxlbmd0aCIsImxhc3REaXZpc2lvbiIsInN0ciIsImZvckVhY2giLCJlbnRyeSIsImRpdmlzaW9uIiwibGFzdFgiLCJzY3JlZW4iLCJtYXJnaW4iLCJwb2ludHMiLCJyZW5kZXJQb2ludHMiLCJQb3B1cCIsIlByb21pc2UiLCJnbG9iYWwiLCJjb25uZWN0IiwidXNlTW9uZ29DbGllbnQiLCJyZXF1ZXN0IiwiX3JlcXVlc3QkYm9keSIsImJvZHkiLCJfcmVxdWVzdCRib2R5JHVzZXJuYW0iLCJfcmVxdWVzdCRib2R5JHBhc3N3b3IiLCJ1c2VyIiwiZmluZCIsInNhdmUiLCJkb2MiLCJzdGF0dXMiLCJfcmVxdWVzdCRib2R5MiIsIl9yZXF1ZXN0JGJvZHkyJHVzZXJuYSIsIl9yZXF1ZXN0JGJvZHkyJHBhc3N3byIsImZpbmRPbmUiLCJjb21wYXJlIiwiX3JlcXVlc3QkYm9keTMiLCJfcmVxdWVzdCRib2R5NCIsImV4cGVuc2VEYXRlUmVzcG9uZGVyIiwicmVzcG9uZCIsIl9yZXF1ZXN0JGJvZHk1IiwiZ3JvdXAyIiwiJGdyb3VwIiwiJHN1bSIsIiRmaXJzdCIsIiRwdXNoIiwidW53aW5kIiwiJHVud2luZCIsInNvcnQiLCIkc29ydCIsInRyYW5zYWN0aW9uTGlzdC5hbW91bnQiLCJ0cmFuc2FjdGlvbkxpc3QuZGF0ZSIsInJlR3JvdXAiLCJfcmVxdWVzdCRib2R5NiIsImFnZ3JlZ2F0ZSIsIiRtYXRjaCIsIiRwcm9qZWN0IiwiYWxsb3dEaXNrVXNlIiwiZXhlYyIsImV4ZWNTdW1tYXJ5UXVlcnkiLCJNSU5fU0FGRV9JTlRFR0VSIiwiX3JlcXVlc3QkYm9keTciLCJ0b3RhbEFtb3VudCIsImZpbmRPbmVBbmRSZW1vdmUiLCJfcmVxdWVzdCRib2R5OCIsIl9yZXF1ZXN0JGJvZHk5IiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJ1cHNlcnQiLCJyZXR1cm5OZXdEb2N1bWVudCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFBTSxLQUFBTixFQUFBckIsRUFBQVUsRUFBQWUsRUFBQUUsRUFBQSxTQUFBQSxHQUFnSCxPQUFBTixFQUFBTSxJQUFxQkMsS0FBQSxLQUFBRCxJQUNySSxPQUFBRixHQUlBekIsRUFBQTZCLEVBQUEsU0FBQTFCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQXFCLFdBQ0EsV0FBMkIsT0FBQXJCLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFpQixFQUFBQyxHQUFzRCxPQUFBakIsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBdUIsRUFBQUMsSUFHdEQvQixFQUFBa0MsRUFBQSxVQUlBbEMsSUFBQW1DLEVBQUEsbUJDbEZBaEMsRUFBQUQsUUFBQWtDLFFBQUEsd0ZDQWFDLFFBQVEsUUFDUkMsT0FBTyxPQUNQQyxPQUFPLE9BQ1BDLGlCQUFpQixDQUFFQyxNQUFPLEdBQUlDLEtBQU0sR0FBSUMsS0FBTSxHQUM5Q0Msa0JBQWtCLENBQUVILE1BQU8sR0FBSUMsS0FBSyxHQUFJQyxLQUFNLEdBQzlDRSxhQUFhLENBQUMsVUFBVyxXQUFZLFFBQVMsUUFBUyxNQUFPLE9BQVEsT0FBUSxTQUFVLFlBQWEsVUFBVyxXQUFZLFlBQzNIQyxrQkFBa0IsQ0FBQyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sT0FDakdDLGdCQUFnQixDQUFDLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE9BQzNEQyxRQUFRLFFBQ1JDLFlBQVksMkJDVHpCOUMsRUFBQUQsUUFBQWtDLFFBQUEsbUNDQUFqQyxFQUFBRCxRQUFBa0MsUUFBQSwyQkNBQWpDLEVBQUFELFFBQUFrQyxRQUFBLHVaQ0FBYyxFQUFBbEQsRUFBQSx3Q0FFYW1ELFNBQVMsU0FBQ0MsR0FFckIsT0FBT0MsVUFBTUMsS0FERCxXQUNMQyxFQUFBLEdBQW9CSCxLQUdoQkksU0FBUyxTQUFDSixHQUVyQixPQUFPQyxVQUFNQyxLQURELFdBQ0xDLEVBQUEsR0FBb0JILEtBR2hCSyxjQUFjLFdBRXpCLE9BQU9KLFVBQU1DLEtBREQsYUFDVyxLQUdaSSxhQUFhLFdBRXhCLE9BQU9MLFVBQU1DLEtBREQsV0FDVyxLQUdaSyxjQUFjLFNBQUNQLEdBRTFCLE9BQU9DLFVBQU1DLEtBREQsZ0JBQ0xDLEVBQUEsR0FBb0JILEtBR2hCUSxtQkFBbUIsU0FBQ1IsR0FFL0IsT0FBT0MsVUFBTUMsS0FERCxxQkFDV0YsSUFHWlMsc0JBQXNCLFNBQUNULEdBRWxDLE9BQU9DLFVBQU1DLEtBREQsd0JBQ1dGLElBR1pVLG9CQUFvQixTQUFDVixHQUVoQyxPQUFPQyxVQUFNQyxLQURELHdCQUNXRixJQUdaVyxlQUFlLFNBQUNYLEdBRTNCLE9BQU9DLFVBQU1DLEtBREQsaUJBQ1dGLHFTQ3pDVFksY0FBVCxTQUF1QkMsR0FDNUIsSUFBTUMsRUFBVSxHQUNoQixHQUFhLFFBQVRELEVBQWdCLENBQ2xCQyxFQUFRQyxLQUFLQyxFQUFBQyxRQUFBQyxjQUFBLHNCQUNiLElBQUksSUFBSWxFLEVBQUksRUFBR0EsRUFBSSxHQUFLQSxJQUN0QjhELEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsVUFBUTNDLElBQUssT0FBU3ZCLEVBQUdpQixNQUFPakIsR0FBSUEsU0FFOUMsR0FBYSxVQUFUNkQsRUFBa0IsQ0FDM0JDLEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsd0JBQ2IsSUFBSSxJQUFJbEUsRUFBSSxFQUFHQSxFQUFJLEdBQUtBLElBQ3RCOEQsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSxVQUFRM0MsSUFBSyxTQUFXdkIsRUFBR2lCLE1BQU9qQixHQUFJMEMsa0JBQWdCMUMsVUFFaEUsR0FBYSxTQUFUNkQsRUFBaUIsQ0FDMUJDLEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsdUJBQ2IsSUFBSSxJQUFJbEUsRUFBSSxLQUFNQSxFQUFJLElBQU9BLElBQzNCOEQsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSxVQUFRM0MsSUFBSyxRQUFVdkIsRUFBSWlCLE1BQU9qQixHQUFJQSxTQUVoRCxHQUFhLFNBQVQ2RCxFQUFpQixDQUMxQkMsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSx1QkFDYixJQUFJLElBQUlsRSxFQUFJLEVBQUdBLEVBQUksRUFBSUEsSUFDckI4RCxFQUFRQyxLQUFLQyxFQUFBQyxRQUFBQyxjQUFBLFVBQVEzQyxJQUFLLFFBQVV2QixFQUFHaUIsTUFBT2pCLEdBQUlBLElBR3RELE9BQU84RCxLQUdPSyxXQUFULFNBQW9CN0QsR0FDekIsSUFBSThELFNBRUZBLEVBRGdCLGlCQUFkLElBQU85RCxFQUFQLFlBQUErRCxFQUFPL0QsSUFDRixJQUFJZ0UsS0FBS2hFLEdBRVRBLEVBRVQsSUFBSWlFLEVBQVMsR0FFYixPQURBQSxHQUFVSCxFQUFLSSxVQUFZLElBQU85QixrQkFBZ0IwQixFQUFLSyxZQUFjLElBQU1MLEVBQUtNLGlCQUlsRUMsY0FBVCxTQUF1QkMsR0FDNUIsR0FBWSxLQUFSQSxFQUNGLE1BQU8sR0FFT0MsV0FBV0QsRUFBSyxJQUM5QixPQUFJQSxFQUFNLElBQ0RFLEtBQUtDLE1BQWlDLEdBQTNCRixXQUFXRCxFQUFJLElBQU0sS0FBWSxHQUFLLElBRWpEQSxHQWpEYixNQUFBSSxFQUFBcEYsRUFBQSx1Q0FDQXFGLEVBQUFyRixFQUFBLGtGQ0FBQSxFQUFBLE1BQ0FBLEVBQUEsWUFDQUEsRUFBQSxTQUNBQSxFQUFBLE9BR0FBLEVBQUEsS0FDQUEsRUFBQSxJQUNBLElBQUFzRixFQUFBdEYsRUFBQSx1REFUQW9DLEVBQVEsR0FLUixJQUFJbUQsRUFBVW5ELEVBQVEsSUFNaEJvRCxFQUFhcEQsRUFBUSxHQUFSQSxDQUF5Qm1ELEdBQ3RDRSxHQUFNLEVBQUFDLEVBQUFyQixXQUNOc0IsRUFBT0MsUUFBUUMsSUFBSUMsS0FFekJMLEVBQUlNLElBQUlSLEVBQVEsQ0FDWlMsT0FBUSxNQUNSQyxRQUFRLEVBQ1JDLE1BQU8sSUFBSVYsRUFBVyxDQUNsQlcsSUFBS1AsUUFBUUMsSUFBSU8sa0JBR3pCWCxFQUFJTSxJQUFJTSxVQUFXQyxXQUFXLENBQUVDLFVBQVUsS0FDMUNkLEVBQUlNLElBQUlNLFVBQVdHLFFBQ25CZixFQUFJTSxJQUFJVSxVQUFRQyxPQUFPLGlCQUN2QmpCLEVBQUlNLElBQUksVUFBV1UsVUFBUUMsT0FBTyxxQkFDbENqQixFQUFJTSxJQUFJVSxVQUFRQyxPQUFPLHFCQUd2QmpCLEVBQUluQyxLQUFLLFVBQVdxRCxVQUNwQmxCLEVBQUluQyxLQUFLLFVBQVdzRCxVQUNwQm5CLEVBQUluQyxLQUFLLFVBQVd1RCxVQUNwQnBCLEVBQUluQyxLQUFLLFlBQWFHLGVBQ3RCZ0MsRUFBSW5DLEtBQUssZUFBZ0J3RCxjQUN6QnJCLEVBQUluQyxLQUFLLG9CQUFxQnlELGtCQUM5QnRCLEVBQUluQyxLQUFLLHVCQUF3QjBELHFCQUNqQ3ZCLEVBQUluQyxLQUFLLHVCQUF3QlEscUJBQ2pDMkIsRUFBSW5DLEtBQUssZ0JBQWlCMkQsZUE2QjFCeEIsRUFBSXhFLElBQUksSUFBSyxTQUFDaUcsRUFBS0MsR0FFZkEsRUFBSUMsS0EzQkosaTRDQThCSjNCLEVBQUk0QixPQUFPMUIsRUFBTSxXQUNiMkIsUUFBUUMsSUFBSSwyQkFBNEI1QixlQUc3QkYsNGdCQzNFZkwsRUFBQXBGLEVBQUEsY0FDQUEsRUFBQSxJQUNBd0gsRUFBQXhILEVBQUEsMERBRU15SCxjQUNKLFNBQUFBLEVBQVlDLGdHQUFPQyxDQUFBQyxLQUFBSCxHQUFBLElBQUFJLG1LQUFBQyxDQUFBRixNQUFBSCxFQUFBTSxXQUFBakgsT0FBQWtILGVBQUFQLElBQUFsSCxLQUFBcUgsS0FDWEYsSUFEVyxPQUVqQkcsRUFBS0ksS0FBT0osRUFBS0ksS0FBS3JHLEtBQVZpRyxHQUNaQSxFQUFLbEIsT0FBU2tCLEVBQUtsQixPQUFPL0UsS0FBWmlHLEdBQ2RBLEVBQUtqQixPQUFTaUIsRUFBS2pCLE9BQU9oRixLQUFaaUcsR0FDZEEsRUFBS0ssWUFBY0wsRUFBS0ssWUFBWXRHLEtBQWpCaUcsR0FDbkJBLEVBQUtNLE1BQVEsQ0FDWEMsU0FBVSxHQUNWQyxTQUFVLEdBQ1ZDLFdBQVksVUFDWkMsV0FBWSxVQUNaQyxhQUFjLDJCQUNkQyxNQUFPQyxPQUFPQyxVQUVaRCxPQUFPQyxVQUNUZCxFQUFLSyxjQWZVTCxxVUFERGUsdURBcUJoQixFQUFBcEIsRUFBQTlELGNBQWFtRixLQUFLLFNBQUNDLEdBQ2pCLElBQU1BLEVBQUtDLEtBQUtDLE1BSWQsT0FIQU4sT0FBT0MsVUFBVyxFQUNsQnJCLFFBQVFDLElBQUksNEJBQ1ptQixPQUFPTyxTQUFTQyxTQUdsQjVCLFFBQVFDLElBQUksMEJBQ1ptQixPQUFPTyxTQUFTQyxXQUNmQyxNQUFNLFdBQ1A3QixRQUFRQyxJQUFJLDBCQUNabUIsT0FBT08sU0FBU0MsMENBS2xCLE9BQ0U5RSxFQUFBQyxRQUFBQyxjQUFDOEUsRUFBQS9FLFFBQUQsS0FDRUQsRUFBQUMsUUFBQUMsY0FBQSxrRUFLS3dFLEdBQ0xBLEVBQUtDLE9BQVNELEVBQUtDLEtBQUtDLE9BQzFCcEIsS0FBS0YsTUFBTTJCLFFBQVFsRixLQUFLLFFBQVMsSUFDVixvQkFBWnVFLFNBQ1RBLE9BQU9DLFVBQVcsSUFHcEJmLEtBQUswQixTQUFML0YsRUFBQSxHQUFrQnVGLEVBQUtDLE9BRXJCRCxFQUFLQyxNQUFRRCxFQUFLQyxLQUFLQyxPQUN6QnBCLEtBQUsyQixvREFLUCxPQUFJM0IsS0FBS08sTUFBTUMsU0FBU29CLE9BQVMsR0FDL0I1QixLQUFLMEIsU0FBUyxDQUFDTixPQUFPLEVBQU1TLElBQUssZ0RBQzFCLEtBRUw3QixLQUFLTyxNQUFNRSxTQUFTbUIsT0FBUyxLQUMvQjVCLEtBQUswQixTQUFTLENBQUNOLE9BQU8sRUFBTVMsSUFBSyxnREFDMUIsNkNBTVQ3QixLQUFLMEIsU0FBUyxDQUNaaEIsV0FBWSxVQUNaQyxXQUFZLFVBQ1pDLGFBQWMsOERBSVQsSUFBQWtCLEVBQUE5QixLQUNIQSxLQUFLK0IsWUFDUC9CLEtBQUswQixTQUFTLENBQUNmLFdBQVksbUJBQzNCLEVBQUFmLEVBQUFyRSxRQUFPLENBQUNpRixTQUFVUixLQUFLTyxNQUFNQyxTQUFVQyxTQUFVVCxLQUFLTyxNQUFNRSxXQUMzRFEsS0FBSyxTQUFDQyxHQUNMWSxFQUFLRSxXQUFXZCxLQUVqQkssTUFBTSxTQUFDVSxHQUNOSCxFQUFLSCxrQkFDTGpDLFFBQVFDLElBQUksc0RBS1h1QyxHQUFlLElBQUFDLEVBQUFuQyxLQUFBb0MsRUFDT3BDLEtBQUtPLE1BQTNCQyxFQURlNEIsRUFDZjVCLFNBQVVDLEVBREsyQixFQUNMM0IsU0FDWHlCLElBQ0YxQixFQUFXLFNBQ1hDLEVBQVcsaUJBRVR5QixHQUFpQmxDLEtBQUsrQixhQUNwQkcsRUFDRmxDLEtBQUswQixTQUFTLENBQUNkLGFBQWMsa0NBRTdCWixLQUFLMEIsU0FBUyxDQUFDaEIsV0FBWSxtQkFFN0IsRUFBQWQsRUFBQWhFLFFBQU8sQ0FBQzRFLFNBQVVBLEVBQVVDLFNBQVVBLElBQVdRLEtBQUssU0FBQ0MsR0FDckRpQixFQUFLSCxXQUFXZCxLQUNmSyxNQUFNLFNBQUNVLEdBQ1JFLEVBQUtSLGtCQUNMakMsUUFBUUMsSUFBSSxtQkFBb0JzQyx1Q0FLN0IsSUFBQUksRUFBQXJDLEtBQUFzQyxFQUN3Q3RDLEtBQUtPLE1BQTdDRyxFQURBNEIsRUFDQTVCLFdBQVlDLEVBRFoyQixFQUNZM0IsV0FBWUMsRUFEeEIwQixFQUN3QjFCLGFBQy9CLE9BQ0VwRSxFQUFBQyxRQUFBQyxjQUFBLFdBQ0dzRCxLQUFLSyxPQUNMTCxLQUFLTyxNQUFNTSxNQUNackUsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLElBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGFBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFlBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLFNBQU82RixVQUFVLGNBQWNDLEdBQUcsZ0JBQWdCQyxZQUFZLFdBQVdoSixNQUFPdUcsS0FBS08sTUFBTUMsU0FBVWtDLFNBQVksU0FBQ0MsR0FBRCxPQUFPTixFQUFLWCxTQUFTLENBQUNsQixTQUFVbUMsRUFBRUMsT0FBT25KLFNBQVM0QyxLQUFLLFVBRTFLRyxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLG1CQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxTQUFPNkYsVUFBVSxjQUFjQyxHQUFHLFdBQVdDLFlBQVksV0FBV2hKLE1BQU91RyxLQUFLTyxNQUFNRSxTQUFVaUMsU0FBWSxTQUFDQyxHQUFELE9BQU9OLEVBQUtYLFNBQVMsQ0FBQ2pCLFNBQVVrQyxFQUFFQyxPQUFPbkosU0FBUzRDLEtBQUssZUFHdEsyRCxLQUFLTyxNQUFNYSxPQUFTNUUsRUFBQUMsUUFBQUMsY0FBQSxPQUFLOEYsR0FBRyxXQUFXRCxVQUFVLG1CQUFtQnZDLEtBQUtPLE1BQU1zQixLQUNoRnJGLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUscUJBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFVBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFVLDJCQUEwQk0sUUFBUyxrQkFBTVIsRUFBS3JELFFBQU8sS0FBUzBCLElBRWhGbEUsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxVQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSwyQkFBMkJNLFFBQVM3QyxLQUFLakIsUUFBUzRCLEtBR3RFbkUsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxxQkFDYi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsT0FDYi9GLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTZGLFVBQVUscUNBQXFDTSxRQUFTLGtCQUFNUixFQUFLckQsUUFBTyxLQUFRNEIsMkJBVXpGZixpRkMxSmYsUUFBQXpILEVBQUEsTUFDQUEsRUFBQSx3REFFQSxJQUFNMEssRUFBV0MsVUFBU0MsTUFBTSxXQUFZLENBQzFDQyxNQUFPLENBQ0w1RyxLQUFNNkcsT0FDTkMsSUFBSyxTQUVQQyxPQUFRLENBQ0ovRyxLQUFNZ0gsT0FDTkMsVUFBVSxFQUNWQyxNQUFNLEdBRVZDLFNBQVUsQ0FDTm5ILEtBQU02RyxPQUNOSSxVQUFVLEVBQ1ZDLE1BQU0sRUFDTjlHLFFBQVMsVUFFYkosS0FBTSxDQUNKQSxLQUFNNkcsT0FDTkksVUFBVSxFQUNWQyxNQUFNLEVBQ045RyxRQUFTLFdBRVhHLEtBQU0sQ0FDSlAsS0FBTVMsS0FDTndHLFVBQVUsRUFDVkMsTUFBTSxFQUNOOUcsUUFBU0ssS0FBSzJHLE9BRWhCQyxHQUFJLENBQ0ZySCxLQUFNZ0gsT0FDTkMsVUFBVSxFQUNWQyxNQUFNLEdBRVJJLEdBQUksQ0FDRnRILEtBQU1nSCxPQUNOQyxVQUFVLEVBQ1ZDLE1BQU0sR0FFUkssSUFBSyxDQUNIdkgsS0FBTWdILE9BQ05DLFVBQVUsRUFDVkMsTUFBTSxHQUVSTSxHQUFJLENBQ0Z4SCxLQUFNZ0gsT0FDTkMsVUFBVSxFQUNWQyxNQUFNLEdBRVJPLEdBQUksQ0FDRnpILEtBQU1nSCxPQUNOQyxVQUFVLEVBQ1ZDLE1BQU0sZUFHS1QsaUZDekRmLFFBQUExSyxFQUFBLFNBQ0FBLEVBQUEsT0FDQUEsRUFBQSx5REFFQSxJQUFNMkwsRUFBYSxJQUFJaEIsVUFBU2lCLE9BQU8sQ0FDbkNDLElBQUtsQixVQUFTaUIsT0FBT0UsTUFBTUMsU0FDM0IzRCxTQUFVLENBQ05uRSxLQUFNNkcsT0FDTkksVUFBVSxFQUNWYyxVQUFXLEVBQ1hiLE1BQU0sR0FFVmMsUUFBUyxDQUNMaEksS0FBTTZHLE9BQ05JLFVBQVUsRUFDVkMsTUFBTSxHQUVWOUMsU0FBVSxDQUNOcEUsS0FBTTZHLE9BQ05JLFVBQVUsRUFDVmMsVUFBVyxFQUNYYixNQUFNLEdBRVZOLE1BQU8sQ0FDSDVHLEtBQU02RyxPQUNOSSxVQUFVLEdBRWRnQixRQUFTLENBQ0wsQ0FDSWpJLEtBQU0wRyxVQUFTaUIsT0FBT0UsTUFBTUMsU0FDNUJoQixJQUFLLGVBS2pCLFNBQVNvQixFQUFjQyxFQUFTQyxHQUM1QkMsVUFBT0MsUUFBUSxHQUFJLFNBQVMxQyxFQUFLMkMsR0FDekIzQyxFQUNBdkMsUUFBUUMsSUFBSSxvQ0FBcUNzQyxHQUVqRHlDLFVBQU9HLEtBQUtMLEVBQVFQLElBQUlhLGNBQWdCTixFQUFRL0QsU0FBU3NFLFdBQVlILEVBQU0sU0FBUzNDLEVBQUs0QyxHQUNqRjVDLEVBQ0F2QyxRQUFRQyxJQUFJLG9DQUFxQ3NDLElBRWpEdUMsRUFBUXZCLE1BQVE0QixFQUNoQkosU0FRcEJWLEVBQVdpQixJQUFJLE9BQVEsU0FBU1AsR0FDNUIsSUFBSUQsRUFBVXhFLEtBQ1Z3RSxFQUFRUyxXQUFXLFlBQ25CUCxVQUFPQyxRQUFRLEdBQUksU0FBUzFDLEVBQUsyQyxHQUN6QjNDLEVBQ0F2QyxRQUFRQyxJQUFJLDBCQUEyQnNDLEdBRXZDeUMsVUFBT0csS0FBS0wsRUFBUS9ELFNBQVVtRSxFQUFNLFNBQVMzQyxFQUFLNEMsR0FDMUM1QyxFQUNBdkMsUUFBUUMsSUFBSSwwQkFBMkJzQyxJQUV2Q3VDLEVBQVEvRCxTQUFXb0UsRUFDbkJOLEVBQWNDLEVBQVNDLFFBTXZDRixFQUFjQyxFQUFTQyxLQUkvQixJQUFNUyxFQUFRbkMsVUFBU0MsTUFBTSxRQUFTZSxhQUN2Qm1CLGlCQzVFZjNNLEVBQUFELFFBQUFrQyxRQUFBLDJCQ0FBakMsRUFBQUQsUUFBQWtDLFFBQUEsaUNDQUFqQyxFQUFBRCxRQUFBa0MsUUFBQSwwQkNBQWpDLEVBQUFELFFBQUFrQyxRQUFBLHVWQ0FBZ0QsRUFBQXBGLEVBQUEsYUFDQUEsRUFBQSxNQUNBQSxFQUFBLE1BQ0FBLEVBQUEsTUFDQUEsRUFBQSwwREFFcUIrTSxnckJBQVluRSxpREFFekIsT0FDSXhFLEVBQUFDLFFBQUFDLGNBQUMwSSxFQUFBM0ksUUFBRCx5QkFIUzBJLGlCQ05yQjVNLEVBQUFELFFBQUFrQyxRQUFBLCtCQ0FBakMsRUFBQUQsUUFBQWtDLFFBQUEsd0ZDQUEsUUFBQXBDLEVBQUEsSUFDQWlOLEVBQUFqTixFQUFBLE9BQ0FBLEVBQUEsUUFDQUEsRUFBQSxTQUNBQSxFQUFBLGtFQUVlLFdBQ1gsT0FDSW9FLEVBQUFDLFFBQUFDLGNBQUMySSxFQUFBQyxPQUFELEtBQ0k5SSxFQUFBQyxRQUFBQyxjQUFDMkksRUFBQUUsTUFBRCxDQUFPQyxLQUFLLFNBQVNDLE9BQUEsRUFBTUMsT0FBUSxTQUFDNUYsR0FBRCxPQUFXdEQsRUFBQUMsUUFBQUMsY0FBQ2lKLEVBQUFsSixRQUFVcUQsTUFDekR0RCxFQUFBQyxRQUFBQyxjQUFDMkksRUFBQUUsTUFBRCxDQUFPQyxLQUFLLElBQUlDLE9BQUEsRUFBTUMsT0FBUSxTQUFDNUYsR0FBRCxPQUFXdEQsRUFBQUMsUUFBQUMsY0FBQ2lKLEVBQUFsSixRQUFVcUQsTUFDcER0RCxFQUFBQyxRQUFBQyxjQUFDMkksRUFBQUUsTUFBRCxDQUFPQyxLQUFLLFFBQVFDLE9BQUEsRUFBTUMsT0FBUSxTQUFDNUYsR0FBRCxPQUFXdEQsRUFBQUMsUUFBQUMsY0FBQ2tKLEVBQUFuSixRQUFTcUQsTUFDdkR0RCxFQUFBQyxRQUFBQyxjQUFDMkksRUFBQUUsTUFBRCxDQUFPQyxLQUFLLElBQUlFLE9BQVEsU0FBQzVGLEdBQUQsT0FBV3RELEVBQUFDLFFBQUFDLGNBQUNtSixFQUFBcEosUUFBYXFELGdWQ1o3RHRDLEVBQUFwRixFQUFBLGNBQ0FBLEVBQUEsSUFDQWlOLEVBQUFqTixFQUFBLDBEQUVNME4sY0FDSixTQUFBQSxFQUFZaEcsZ0dBQU9DLENBQUFDLEtBQUE4RixHQUFBLElBQUE3RixtS0FBQUMsQ0FBQUYsTUFBQThGLEVBQUEzRixXQUFBakgsT0FBQWtILGVBQUEwRixJQUFBbk4sS0FBQXFILEtBQ1hGLElBRFcsT0FFakJHLEVBQUtJLEtBQU9KLEVBQUtJLEtBQUtyRyxLQUFWaUcsR0FGS0EscVVBREVlLCtDQU9uQixPQUNFeEUsRUFBQUMsUUFBQUMsY0FBQzhFLEVBQUEvRSxRQUFELEtBQ0VELEVBQUFDLFFBQUFDLGNBQUEsaUVBTUosT0FDRUYsRUFBQUMsUUFBQUMsY0FBQSxXQUNHc0QsS0FBS0ssT0FDTjdELEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUscUJBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE1BQUk2RixVQUFVLDhCQUFkLHFDQUVGL0YsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE1BQUk2RixVQUFVLHlCQUNaL0YsRUFBQUMsUUFBQUMsY0FBQSxVQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFdBQ2YvRixFQUFBQyxRQUFBQyxjQUFDMkksRUFBQVUsUUFBRCxDQUFTQyxHQUFHLFNBQVN6RCxVQUFVLFNBQS9CLG1DQVNDdUQsOGVDdENmdEksRUFBQXBGLEVBQUEsZUFDQUEsRUFBQSxNQUNBQSxFQUFBLE1BQ0F3SCxFQUFBeEgsRUFBQSxHQUNBcUYsRUFBQXJGLEVBQUEsT0FDQUEsRUFBQSxLQUNBNk4sRUFBQTdOLEVBQUEsT0FDQUEsRUFBQSxLQUNBaU4sRUFBQWpOLEVBQUEsa0xBRXFCOE4sY0FDbkIsU0FBQUEsRUFBWXBHLGdHQUFPQyxDQUFBQyxLQUFBa0csR0FBQSxJQUFBakcsbUtBQUFDLENBQUFGLE1BQUFrRyxFQUFBL0YsV0FBQWpILE9BQUFrSCxlQUFBOEYsSUFBQXZOLEtBQUFxSCxLQUNYRixJQURXLE9BRWpCRyxFQUFLa0csY0FBZ0JsRyxFQUFLa0csY0FBY25NLEtBQW5CaUcsR0FDckJBLEVBQUtmLFdBQWFlLEVBQUtmLFdBQVdsRixLQUFoQmlHLEdBQ2xCQSxFQUFLbUcsaUJBQW1CbkcsRUFBS21HLGlCQUFpQnBNLEtBQXRCaUcsR0FDeEJBLEVBQUtvRyxZQUFjcEcsRUFBS29HLFlBQVlyTSxLQUFqQmlHLEdBQ25CQSxFQUFLcUcsYUFBZXJHLEVBQUtxRyxhQUFhdE0sS0FBbEJpRyxHQUNwQkEsRUFBS3NHLGNBQWdCdEcsRUFBS3NHLGNBQWN2TSxLQUFuQmlHLEdBQ3JCQSxFQUFLWixZQUFjWSxFQUFLWixZQUFZckYsS0FBakJpRyxHQUNuQkEsRUFBS00sTUFBUSxDQUNYaUcsVUFBVy9MLFFBQ1hnTSxnQkFBZ0IsRUFDaEJDLFVBQVUsRUFDVkMsU0FBVSxHQUNWQyxVQUFXLEdBQ1hDLFNBQVUsR0FDVkMsV0FBWSxHQUNaQyxXQUFZLEdBQ1pDLFdBQVksR0FDWkMsYUFBYyxhQUVoQmhILEVBQUtpSCxXQUFhLEdBQ2xCakgsRUFBS2tILFdBdEJZbEgscVVBRGFlLDREQTJCOUJoQixLQUFLb0gsYUFDTHBILEtBQUtaLG9CQUNMWSxLQUFLcUgsc0VBR2dCLElBQ2RiLEVBQWF4RyxLQUFLTyxNQUFsQmlHLFVBQ1AsT0FBSUEsSUFBYzdMLE9BQ1RxRixLQUFLTyxNQUFNb0csU0FDVEgsSUFBYy9MLFFBQ2hCdUYsS0FBS08sTUFBTXFHLFVBQ1RKLElBQWM5TCxPQUNoQnNGLEtBQUtPLE1BQU1zRyxjQURiLDJDQU1RLElBQ1JMLEVBQWF4RyxLQUFLTyxNQUFsQmlHLFVBQ1AsT0FBSUEsSUFBYzdMLE9BQ1RxRixLQUFLTyxNQUFNb0csU0FDVEgsSUFBYy9MLFFBQ2hCdUYsS0FBS08sTUFBTXFHLFVBQ1RKLElBQWM5TCxPQUNoQnNGLEtBQUtPLE1BQU1zRyxjQURiLGdEQUthLElBQ2JMLEVBQWF4RyxLQUFLTyxNQUFsQmlHLFVBQ1AsT0FBSUEsSUFBYzdMLE9BQ1QsV0FDRTZMLElBQWMvTCxRQUNoQixZQUNFK0wsSUFBYzlMLE9BQ2hCLGdCQURGLG9DQUtDNE0sR0FBVyxJQUFBbEYsRUFDb0JwQyxLQUFLTyxNQUExQmdILEVBRENuRixFQUNab0UsVUFBZ0JTLEVBREo3RSxFQUNJNkUsYUFESk8sRUFFSXhILEtBQUt5SCxpQkFBdkIvRCxFQUZjOEQsRUFFZDlELEdBQUlHLEVBRlUyRCxFQUVWM0QsR0FBSUMsRUFGTTBELEVBRU4xRCxHQUFJSCxFQUZFNkQsRUFFRjdELEdBRVgrRCxFQUFZNUQsUUFBcUIsSUFBUkQsR0FBdUJILEVBQU0sSUFBSTVHLEtBQUtnSCxFQUFJRCxFQUFJSCxHQUFNLElBQUk1RyxLQUNuRmpDLEVBQVE2TSxFQUFTekssV0FDakIyRyxFQUFNOEQsRUFBU0MsU0FDZi9LLEVBQU84SyxFQUFTMUssVUFDaEJsQyxFQUFPNE0sRUFBU3hLLGNBRXBCLElBQUt5RyxFQUFJLENBQ1AsSUFBTWlFLEVBQWtCLElBQUk5SyxLQUFLaEMsRUFBTUQsRUFBTyxHQUFHOE0sU0FDakRoRSxFQUFLckcsS0FBS3VLLE1BQU1ELEVBQWtCRixFQUFTMUssV0FBYSxHQVMxRCxPQU5JZ0QsS0FBS08sTUFBTXVHLGlCQUFnRCxJQUEzQjlHLEtBQUtPLE1BQU13RyxZQUErQi9HLEtBQUtPLE1BQU15RyxhQUN2RmxNLEVBQU9nTixTQUFTOUgsS0FBS08sTUFBTXlHLFlBQzNCbk0sRUFBUWlOLFNBQVM5SCxLQUFLTyxNQUFNd0csWUFDNUJwRCxFQUFLbUUsU0FBUzlILEtBQUtPLE1BQU11RyxhQUVaLENBQUNTLE1BQUsxRCxHQUFJaEosRUFBTytJLE1BQUtELEtBQUlHLEdBQUdoSixFQUFNNEksR0FBRzlHLEVBQU1xSyxtREFJbEQsSUFBQW5GLEVBQUE5QixNQUNULEVBQUFKLEVBQUEvRCxlQUFjb0YsS0FBSyxTQUFDMUIsR0FDZEEsRUFBSTRCLE1BQVE1QixFQUFJNEIsS0FBS2dHLFNBQ3ZCckYsRUFBS0osU0FBUyxDQUFFeUYsU0FBVTVILEVBQUk0QixLQUFLZ0csV0FFbkNyRixFQUFLc0UscUJBR1I3RSxNQUFNLFdBQ0xPLEVBQUtzRSwrREFJUzJCLEVBQW9CVCxHQUFXLElBQUFuRixFQUFBbkMsS0FDekN4RSxFQUFTd0UsS0FBS2dJLFVBQVVWLEdBQ3hCVyxFQUFnQmpJLEtBQUtrSSx1QkFHekIsRUFBQXRJLEVBQUEzRCxxQkFBb0JULEdBQVF5RixLQUFLLFNBQUNDLEdBQ2hDaUIsRUFBS1QsU0FBTHlHLEVBQUEsR0FBZ0JGLEVBQWhCdE0sRUFBQSxHQUFxQ3dHLEVBQUs1QixNQUFNMEgsR0FBaEQsQ0FBZ0VHLGNBQWNsSCxFQUFLQyxXQUNsRixTQUFDYyxHQUNGdkMsUUFBUUMsSUFBSSx3Q0FBeUNzQyx3Q0FLaERvRyxFQUFvQmYsR0FBVyxJQUFBakYsRUFBQXJDLEtBQ2xDeEUsRUFBU3dFLEtBQUtnSSxVQUFVVixHQUN4QlcsRUFBZ0JqSSxLQUFLa0ksdUJBR3pCLEVBQUF0SSxFQUFBNUQsa0JBQWlCUixHQUFReUYsS0FBSyxTQUFDQyxHQUFTLElBQUFvSCxFQUFBQyxFQUM2QnJILEVBQUtDLEtBQWpFcUgsRUFEK0JELEVBQy9CQyxZQUFhQyxFQURrQkYsRUFDbEJFLFdBQVlDLEVBRE1ILEVBQ05HLFNBQVVDLEVBREpKLEVBQ0lJLE1BQU9oRixFQURYNEUsRUFDVzVFLEdBQUlHLEVBRGZ5RSxFQUNlekUsR0FBSUQsRUFEbkIwRSxFQUNtQjFFLEdBQUlILEVBRHZCNkUsRUFDdUI3RSxHQUM3RHJCLEVBQUtYLFVBQUx5RyxFQUFBRyxFQUFBLEdBQWdCTCxFQUFoQnRNLEVBQUEsR0FBcUMwRyxFQUFLOUIsTUFBTTBILEdBQWhELENBQWdFTyxjQUFhQyxhQUFZQyxXQUFVQyxRQUFPaEYsS0FBSUcsS0FBSUQsS0FBR0gsUUFBckh5RSxFQUFBRyxFQUFBLGFBQXFJekUsR0FBcklzRSxFQUFBRyxFQUFBLGFBQXFKM0UsR0FBckp3RSxFQUFBRyxFQUFBLGFBQXFLeEUsR0FBckt3RSxLQUNFLFNBQUNyRyxHQUNGdkMsUUFBUUMsSUFBSSxnQ0FBaUNzQyxvREFLN0J1RSxHQUFXLElBQUFvQyxFQUFBNUksS0FDaENBLEtBQUswQixTQUFTLENBQUM4RSxVQUFXQSxFQUFXRSxVQUFVLEdBQVEsV0FDckRrQyxFQUFLeEIsYUFDTHdCLEVBQUt4Siw4REFLUFksS0FBSzZJLEtBQUtDLFNBQVNDLFVBQVVDLE9BQU8sWUFDcENoSixLQUFLNkksS0FBS0ksTUFBTUYsVUFBVUMsT0FBTyxVQUM3QmhKLEtBQUs2SSxLQUFLSyxzQkFDWmxKLEtBQUs2SSxLQUFLTSxvQkFBb0JKLFVBQVVDLE9BQU8sV0FDL0NoSixLQUFLNkksS0FBS0ssb0JBQW9CSCxVQUFVQyxPQUFPLFlBRWpEaEosS0FBSzZJLEtBQUtPLGdCQUFnQkwsVUFBVUMsT0FBTyxpREFLdkNoSixLQUFLTyxNQUFNNEcsVUFDYixFQUFBdkgsRUFBQTlELGNBQWFtRixLQUFLLFdBQ2pCSCxPQUFPTyxTQUFTZ0ksS0FBTyxXQUd4QnZJLE9BQU9PLFNBQVNnSSxLQUFPLHFEQUlQLElBQ1hsQyxFQUFZbkgsS0FBS08sTUFBakI0RyxTQUNQLE9BQ0UzSyxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFdBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUt5RyxJQUFJLFFBQU9aLFVBQVUsYUFBYU0sUUFBUzdDLEtBQUttRyxlQUNuRDNKLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsb0JBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGNBQWNNLFFBQVM3QyxLQUFLb0csa0JBQXFCZSxFQUF1QixTQUFaLFdBQzNFM0ssRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxlQUFjL0YsRUFBQUMsUUFBQUMsY0FBQSxLQUFHNE0sTUFBTyxDQUFDQyxNQUFPLGFBQWNGLEtBQUssa0RBQWtEekcsT0FBTyxVQUE5RixtREFPNUJ4RixFQUFLb00sRUFBYUMsR0FBZ0IsSUFBQUMsRUFBQTFKLEtBQ3ZDd0osRUFDRnhKLEtBQUswQixTQUFTLENBQUMrRSxlQUFnQnJKLEVBQUtpQyxpQkFBd0MsSUFBcEJvSyxFQUFrQ0EsRUFBaUJ6SixLQUFLTyxNQUFNbEIsWUFBYXNILFNBQVUsR0FBSUMsVUFBVyxHQUFJQyxTQUFVLElBQUssV0FDN0s2QyxFQUFLdEMsV0FBV29DLEdBQ2hCRSxFQUFLdEssa0JBQWtCb0ssS0FHekJ4SixLQUFLMEIsU0FBUyxDQUFDK0UsZUFBZ0JySixFQUFLaUMsWUFBYW9LLDBDQUtuRHpKLEtBQUswQixTQUFTLENBQUNpSSxXQUFXLDJDQUdiLElBQUFDLEVBQUE1SixLQUNiQSxLQUFLMEIsU0FBUyxDQUFDaUksV0FBVyxLQUMxQixFQUFBL0osRUFBQTFELG1CQUFrQixDQUFDc0csR0FBSXhDLEtBQUtPLE1BQU1zSixxQkFBcUJySCxLQUFLdkIsS0FBSyxTQUFDMUIsR0FDNURBLElBQ0ZxSyxFQUFLeEMsWUFBVyxHQUFNLEdBQ3RCd0MsRUFBS3hLLG1CQUFrQixHQUFNLDBDQUt2QjBLLEdBQ1Y5SixLQUFLMEIsU0FBUyxDQUFDckMsYUFBYSxFQUFNMEssbUJBQW1CRCwwQ0FHekNBLEdBQ1o5SixLQUFLMEIsU0FBUyxDQUFDaUksV0FBVyxFQUFNRSxxQkFBcUJDLDRDQUlyRDlKLEtBQUswQixTQUFTLENBQUNnRixVQUFXMUcsS0FBS08sTUFBTW1HLFdBQ3JDMUcsS0FBSzZJLEtBQUttQixlQUFlQyxVQUFZLHFEQUdaQyxHQUFnQixJQUFBQyxFQUFBbkssS0FDekMsSUFBS2tLLEVBQWdCLENBRW5CLElBREEsSUFBTUUsRUFBUyxHQUNQNVIsRUFBSSxFQUFHQSxFQUFJLEVBQUdBLElBQ3BCNFIsRUFBTzdOLEtBQ0xDLEVBQUFDLFFBQUFDLGNBQUEsV0FDRUYsRUFBQUMsUUFBQUMsY0FBQSxPQUFLM0MsSUFBSyxvQkFBc0J2QixFQUFHK0osVUFBVSx1QkFDM0MvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLG9CQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSx3Q0FFbEIvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLG9DQUdqQi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsa0JBSXJCLE9BQU82SCxFQUlULE9BRHNCcEssS0FBS3lILGlCQUFwQmUsWUFFTzZCLGdCQUFnQkMsSUFBSSxTQUFDQyxFQUFhQyxHQUM1QyxPQUFJTCxFQUFLNUosTUFBTW1HLFVBQVl5RCxFQUFLakQsV0FBV2lELEVBQUs1SixNQUFNaUcsYUFBZTJELEVBQUs1SixNQUFNbUcsVUFBWThELEVBQVEsR0FDOUZMLEVBQUs1SixNQUFNbUcsV0FDYnlELEVBQUtqRCxXQUFXaUQsRUFBSzVKLE1BQU1pRyxZQUFhLEdBR3hDaEssRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUszQyxJQUFLLG9CQUFzQnlRLEVBQU9qSSxVQUFVLHVCQUMvQy9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsb0JBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLG9CQUFvQmdJLEVBQVkvRyxVQUMvQ2hILEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUscUJBQW9CLEVBQUEwRCxFQUFBdEosWUFBVzROLEVBQVkzTixPQUMxREosRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxvQkFDYi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBS21HLFFBQVMsa0JBQU1zSCxFQUFLOUssWUFBTDFELEVBQUEsR0FBcUI0TyxLQUFlRSxPQUFPLE9BQU9DLFFBQVEsZUFBZUMsTUFBTSxRQUNqR25PLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTVELEVBQUUsc2VBQ1IwRCxFQUFBQyxRQUFBQyxjQUFBLFFBQU01RCxFQUFFLHN3QkFJZDBELEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsdUNBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFNBQVMrRyxNQUFRLENBQUNzQixTQUFVTCxFQUFZTSxRQUFVLFFBR25Fck8sRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGtDQUFrQyxJQUFJZ0ksRUFBWW5ILFFBRWpFNUcsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxvQkFDWmdJLEVBQVlNLFFBQVUsTUFFekJyTyxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLDJCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLbUcsUUFBUyxrQkFBTXNILEVBQUs1RCxjQUFjLENBQUMvRCxHQUFJK0gsRUFBWS9ILE1BQU1zSSxLQUFLLFVBQVVMLE9BQU8sT0FBT0MsUUFBUSxnQkFBZ0JDLE1BQU0sUUFDdkhuTyxFQUFBQyxRQUFBQyxjQUFBLFFBQU01RCxFQUFFLDhKQUNSMEQsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNUQsRUFBRSw4SkFDUjBELEVBQUFDLFFBQUFDLGNBQUEsUUFBTTVELEVBQUUscXlDQUNSMEQsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNUQsRUFBRSxrS0FLaEIwRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGtCQUlaLDRDQU1GbEcsR0FBTSxJQUFBME8sRUFBQS9LLEtBQ0osU0FBVDNELEVBQ0YyRCxLQUFLMEIsU0FBUyxDQUFDdUYsYUFBYyxRQUFTLFdBQ3BDOEQsRUFBSzNELFlBQVcsR0FBTSxHQUN0QjJELEVBQUszTCxtQkFBa0IsR0FBTSxLQUViLGNBQVQvQyxHQUNUMkQsS0FBSzBCLFNBQVMsQ0FBQ3VGLGFBQWMsYUFBYyxXQUN6QzhELEVBQUszRCxZQUFXLEdBQU0sR0FDdEIyRCxFQUFLM0wsbUJBQWtCLEdBQU0sa0RBS2QsSUFBQTRMLEVBQUFoTCxLQUNieUgsRUFBaUJ6SCxLQUFLeUgsaUJBRFRuRixFQUUyQ3RDLEtBQUtPLE1BQTVEaUcsRUFGWWxFLEVBRVprRSxVQUZZeUUsRUFBQTNJLEVBRURvRSxnQkFGQ3dFLElBQUFELEtBRWlCOUQsRUFGakI3RSxFQUVpQjZFLFNBQVVGLEVBRjNCM0UsRUFFMkIyRSxhQUV4Q2lELEVBQWlCekMsRUFBZWUsWUFDcEMsT0FDRWhNLEVBQUFDLFFBQUFDLGNBQUEsV0FLRUYsRUFBQUMsUUFBQUMsY0FBQSxPQUFLeUcsSUFBSSxpQkFBaUJaLFVBQVcsZ0NBQWtDbUUsRUFBVyxxQkFBdUIsS0FDdkdsSyxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGtCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVywrQkFBa0QsY0FBakIwRSxFQUErQixvQkFBc0IsSUFBS3BFLFFBQVMsa0JBQU1tSSxFQUFLRyxhQUFhLGVBQTdJLGNBQ0EzTyxFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFXLGdDQUFtRCxjQUFqQjBFLEVBQStCLG1CQUFxQixvQkFBcUJwRSxRQUFTLGtCQUFNbUksRUFBS0csYUFBYSxVQUE3SixTQUVGM08sRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLHlCQUNhLElBQXBCMkgsR0FBMEUsSUFBdkNoUixPQUFPa1MsS0FBS2xCLEdBQWdCdEksT0FDckVwRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLDJCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxNQUFNTSxRQUFTLGtCQUFNbUksRUFBSzlMLFlBQVcsS0FBcEQscUJBQ0VpSSxHQUFZM0ssRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxpQkFBZ0IvRixFQUFBQyxRQUFBQyxjQUFBLEtBQUcyTSxLQUFLLFVBQVM3TSxFQUFBQyxRQUFBQyxjQUFBLHdCQUFoRCwyQkFFaEJGLEVBQUFDLFFBQUFDLGNBQUEsV0FDSThKLElBQWM3TCxPQUFPcUYsS0FBS3FMLDJCQUEyQm5CLEdBQWtCLEtBQ3hFMUQsSUFBYy9MLFFBQVF1RixLQUFLcUwsMkJBQTJCbkIsR0FBa0IsS0FDeEUxRCxJQUFjOUwsT0FBT3NGLEtBQUtxTCwyQkFBMkJuQixHQUFrQixTQU1oRjFOLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsZ0JBQWdCTSxRQUFTLGtCQUFNbUksRUFBS00sa0JBQ2pEOU8sRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBV21FLEVBQVcsaUJBQW1CLEdBQUl2RCxJQUFJLGNBQWNvSSxNQUFNLDZCQUE2QlosTUFBTSxLQUFLRixPQUFPLEtBQUtDLFFBQVEsYUFDcElsTyxFQUFBQyxRQUFBQyxjQUFBLFFBQU01RCxFQUFFLHNEQUdaMEQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxVQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLeUcsSUFBSSxrQkFBa0JaLFVBQVcsb0JBQ3BDL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxJQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSxpQkFBaUJNLFFBQVMsa0JBQU1tSSxFQUFLOUwsWUFBVyxLQUFoRSxvREFRWixJQUFNdEMsRUFBTyxJQUFJRSxLQUNYME8sRUFBWXZRLGFBQVcyQixFQUFLSyxZQUVsQyxPQURpQkwsRUFBS0ksVUFDSixJQUFNd08sRUFBWSxJQUFNNU8sRUFBS00seURBRTlCLElBQ1ZzSixFQUFheEcsS0FBS08sTUFBbEJpRyxVQURVaUYsRUFFS3pMLEtBQUt5SCxpQkFBcEI1RCxFQUZVNEgsRUFFVjVILEdBQUlDLEVBRk0ySCxFQUVOM0gsR0FBS0gsRUFGQzhILEVBRUQ5SCxHQUNaK0gsRUFBZ0IsR0FDaEJDLEdBQWlCLEVBQ2pCQyxHQUFpQixFQWVyQixPQWJJcEYsSUFBYy9MLFNBQ2hCaVIsT0FBZ0MsSUFBUjdILEVBQXNCNUksYUFBVzRJLEdBQU0sT0FDL0Q4SCxFQUF3QixJQUFQOUgsRUFDakIrSCxFQUF3QixLQUFQL0gsR0FDUjJDLElBQWM3TCxRQUN2QitRLEVBQWlCL0gsRUFBTSxRQUFXQSxFQUFNLE9BQ3hDZ0ksRUFBd0IsSUFBUGhJLEVBQ2pCaUksRUFBd0IsSUFBUGpJLElBRWpCK0gsRUFBZ0I1SCxHQUFVLE9BQzFCOEgsRUFBd0IsT0FBUDlILEdBR1osQ0FBQzRILGdCQUFlQyxpQkFBZ0JDLHFEQUc5QnZQLEVBQU1lLEdBQUssSUFBQXlPLEVBQUE3TCxLQUNoQjhMLEVBQWMsR0FDZHpQLElBQVMxQixPQUNYbVIsRUFBYyxDQUFDaEYsV0FBWTFKLEdBQ2xCZixJQUFTNUIsUUFDbEJxUixFQUFjLENBQUMvRSxXQUFZM0osR0FDbEJmLElBQVMzQixTQUNsQm9SLEVBQWMsQ0FBQzlFLFdBQVk1SixJQUU3QjRDLEtBQUswQixTQUFML0YsRUFBQSxHQUFrQm1RLEdBQWMsV0FDOUJELEVBQUt6RSxZQUFXLEdBQU0sR0FDdEJ5RSxFQUFLek0sbUJBQWtCLEdBQU0sc0NBSXhCLElBQUEyTSxFQUFBL0wsS0FBQWdNLEVBQ2dGaE0sS0FBS08sTUFBckZpRyxFQURBd0YsRUFDQXhGLFVBQVdDLEVBRFh1RixFQUNXdkYsZUFBa0NwSCxHQUQ3QzJNLEVBQzJCdEYsU0FEM0JzRixFQUM2QzNNLGFBQWEwSyxFQUQxRGlDLEVBQzBEakMsbUJBRDFEa0MsRUFFeUZqTSxLQUFLeUgsaUJBRjlGeUUsRUFBQUQsRUFFQXZELGdCQUZBd0MsSUFBQWdCLE9BRVdoQixFQUZYZ0IsRUFBQUMsRUFBQUYsRUFFc0J0RCxhQUZ0QnVDLElBQUFpQixPQUU4QmpCLEVBRjlCaUIsRUFBQUMsRUFBQUgsRUFFeUM3RCxnQkFGekM4QyxJQUFBa0IsT0FFb0RsQixFQUZwRGtCLEVBQUFDLEVBQUFKLEVBRStEeEQsa0JBRi9EeUMsSUFBQW1CLE9BRTRFbkIsRUFGNUVtQixFQUFBQyxFQUdpRHRNLEtBQUt1TSxtQkFIdERELEVBR0FaLGNBSEFZLEVBR2VYLGVBSGZXLEVBRytCVixlQUN0QyxPQUNFcFAsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxJQUNiL0YsRUFBQUMsUUFBQUMsY0FBQzJJLEVBQUFtSCxPQUFELENBQVFDLFFBQVMsaUJBQU0sa0NBQ3ZCalEsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUt5RyxJQUFJLFdBQVdaLFVBQVcscUJBQXdCa0UsR0FBa0JwSCxFQUFlLFdBQWEsSUFBS3dELFFBQVMsa0JBQU1rSixFQUFLN00sWUFBVyxNQUN4SWMsS0FBSzBNLG9CQUNObFEsRUFBQUMsUUFBQUMsY0FBQSxPQUFLeUcsSUFBSSxjQUFjWixVQUFVLGVBQy9CL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxJQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLeUcsSUFBSSxzQkFBc0JaLFVBQVUsb0NBQ3ZDL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxZQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSxzQkFBc0JNLFFBQVM3QyxLQUFLbUcsZUFBZTNKLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsWUFBWW9LLElBQUksb0JBRXBHblEsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxXQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxVQUFmLG1CQUNBL0YsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFVLE9BQWhCLE1BQ0EvRixFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFVLG9CQUFxQyxJQUFkbUcsRUFBNEJBLEVBQVcsTUFFaEZsTSxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGNBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLFdBQUtGLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTZGLFVBQVUsT0FBT3ZDLEtBQUs0TSxxQkFJckNwUSxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLDJCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxhQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLFVBQVFnRyxTQUFVLFNBQUNDLEdBQUQsT0FBT29KLEVBQUtjLFdBQVdsUyxPQUFNZ0ksRUFBRUMsT0FBT25KLFFBQVErSSxHQUFHLHdCQUF3Qi9JLE1BQU91RyxLQUFLTyxNQUFNdUcsYUFDMUcsRUFBQWIsRUFBQTdKLGVBQWMsU0FFakJJLEVBQUFDLFFBQUFDLGNBQUEsU0FBT21HLFFBQVMsa0JBQU1rSixFQUFLZSx1QkFBdUJuUyxTQUFRNEgsVUFBVyxvQkFBc0JpRSxJQUFjN0wsT0FBTyxvQkFBc0IsSUFBS29TLFFBQVEsZ0JBQW5KLFFBQ0F2USxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFXLGdCQUFrQmlFLElBQWM3TCxPQUFPLE1BQU8sUUFHbEU2QixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGFBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLFVBQVFnRyxTQUFVLFNBQUNDLEdBQUQsT0FBT29KLEVBQUtjLFdBQVdwUyxRQUFPa0ksRUFBRUMsT0FBT25KLFFBQVErSSxHQUFHLHlCQUF5Qi9JLE1BQU91RyxLQUFLTyxNQUFNd0csYUFDNUcsRUFBQWQsRUFBQTdKLGVBQWMsVUFFakJJLEVBQUFDLFFBQUFDLGNBQUEsU0FBT21HLFFBQVMsa0JBQU1rSixFQUFLZSx1QkFBdUJyUyxVQUFTOEgsVUFBVyxvQkFBc0JpRSxJQUFjL0wsUUFBUSxvQkFBc0IsSUFBS3NTLFFBQVEsaUJBQXJKLFNBQ0F2USxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFXLGdCQUFrQmlFLElBQWMvTCxRQUFRLE1BQU8sT0FFakUrQixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGFBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLFVBQVFnRyxTQUFVLFNBQUNDLEdBQUQsT0FBT29KLEVBQUtjLFdBQVduUyxPQUFNaUksRUFBRUMsT0FBT25KLFFBQVErSSxHQUFHLHdCQUF3Qi9JLE1BQU91RyxLQUFLTyxNQUFNeUcsYUFDNUcsRUFBQWYsRUFBQTdKLGVBQWMsU0FFZkksRUFBQUMsUUFBQUMsY0FBQSxTQUFPbUcsUUFBUyxrQkFBTWtKLEVBQUtlLHVCQUF1QnBTLFNBQU82SCxVQUFXLG9CQUFzQmlFLElBQWM5TCxPQUFPLG9CQUFzQixJQUFLcVMsUUFBUSxnQkFBbEosUUFDQXZRLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVcsZ0JBQWtCaUUsSUFBYzlMLE9BQU8sTUFBTyxRQUdsRThCLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsc0JBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFVBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLHNCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFNaU8sTUFBTSxLQUFLRixPQUFPLEtBQUtDLFFBQVEsYUFBWWxPLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTVELEVBQUUsOEdBRTNEMEQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxvQkFBb0Isa0JBQWlDLElBQVhvRyxFQUF3QkEsRUFBTyxPQUcxRm5NLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsV0FDYi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsd0JBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFdBQVdvSSxNQUFNLEtBQUtGLE9BQU8sS0FBS0MsUUFBUSxhQUFZbE8sRUFBQUMsUUFBQUMsY0FBQSxRQUFNNUQsRUFBRSw2R0FFL0UwRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLG9CQUFvQixjQUFnQmtHLFFBQTRDLElBQXZCQSxFQUFXckYsT0FBMEJxRixFQUFXckYsT0FBUyxRQUdwSXBELEtBQUtnTix1QkFHVDVFLEdBQVlBLEVBQVM2RSxpQkFBb0I3RSxFQUFTNkUsZ0JBQWdCckwsT0FBUyxFQUMxRXBGLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsMkJBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUt5RyxJQUFJLHNCQUFzQlosVUFBVSxrQkFDdkMvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGlDQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxZQUFPLG1CQUVSOEosSUFBYzdMLE9BQVE2QixFQUFBQyxRQUFBQyxjQUFDd1EsRUFBQXpRLFFBQUQsQ0FBTzJMLFNBQVVBLEVBQVViLElBQUtmLElBQWUsS0FDckVBLElBQWMvTCxRQUFTK0IsRUFBQUMsUUFBQUMsY0FBQ3dRLEVBQUF6USxRQUFELENBQU8yTCxTQUFVQSxFQUFVYixJQUFLZixJQUFlLEtBQ3RFQSxJQUFjOUwsT0FBUThCLEVBQUFDLFFBQUFDLGNBQUN3USxFQUFBelEsUUFBRCxDQUFPMkwsU0FBVUEsRUFBVWIsSUFBS2YsSUFBZSxPQUVqRSxPQUdkQyxFQUNDakssRUFBQUMsUUFBQUMsY0FBQSxXQUNHRixFQUFBQyxRQUFBQyxjQUFDeVEsRUFBQTFRLFFBQUQsQ0FBWXlDLFdBQVljLEtBQUtkLGNBQ3ZCLEtBQ1ZHLEVBQ0M3QyxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUN5USxFQUFBMVEsUUFBRCxDQUFZeUMsV0FBWWMsS0FBS2QsV0FBWTZLLG1CQUFvQkEsS0FDdEQsS0FDVi9KLEtBQUtPLE1BQU1vSixXQUFhbk4sRUFBQUMsUUFBQUMsY0FBQzBRLEVBQUEzUSxRQUFELENBQU80USxlQUFnQnJOLEtBQUtxRyxZQUFhaUgsZ0JBQWlCdE4sS0FBS3NHLG1DQTVkM0VKLGdmQ1ZyQjFJLEVBQUFwRixFQUFBLHVDQUNBd0gsRUFBQXhILEVBQUEsR0FDQXFGLEVBQUFyRixFQUFBLEdBQ0E2TixFQUFBN04sRUFBQSxPQUVxQm1WLGNBQ25CLFNBQUFBLEVBQVl6TixnR0FBT0MsQ0FBQUMsS0FBQXVOLEdBQUEsSUFBQXROLG1LQUFBQyxDQUFBRixNQUFBdU4sRUFBQXBOLFdBQUFqSCxPQUFBa0gsZUFBQW1OLElBQUE1VSxLQUFBcUgsS0FDWEYsSUFDTkcsRUFBS3VOLFdBQWF2TixFQUFLdU4sV0FBV3hULEtBQWhCaUcsR0FDbEJBLEVBQUt3TixpQkFBbUJ4TixFQUFLd04saUJBQWlCelQsS0FBdEJpRyxHQUN4QixJQUFLbUQsRUFBUyxHQUNUSSxFQUFXLEdBQ1hrSyxFQUFNLEdBQ043UyxFQUFRLEdBQ1JDLEVBQU8sR0FDWixHQUFJZ0YsRUFBTWlLLG1CQUFvQixDQUM1QjNHLEVBQVN0RCxFQUFNaUssbUJBQW1CM0csT0FDbENJLEVBQVcxRCxFQUFNaUssbUJBQW1CdkcsU0FDcEMsSUFBSTVHLEVBQU8sSUFBSUUsS0FBS2dELEVBQU1pSyxtQkFBbUJuTixNQUM3QzhRLEVBQU05USxFQUFLSSxVQUNYbkMsRUFBUStCLEVBQUtLLFdBQ2JuQyxFQUFPOEIsRUFBS00sY0FmRyxPQWlCakIrQyxFQUFLTSxNQUFRLENBQ1hsRSxLQUFNLFVBQ04rRyxPQUFRQSxFQUNSSSxTQUFVQSxFQUNWa0ssSUFBS0EsRUFDTDdTLE1BQU9BLEVBQ1BDLEtBQU1BLEVBQ05zRyxNQUFPLElBeEJRbkIscVVBRG1CZSxtREE2QjNCM0UsR0FDVDJELEtBQUswQixTQUFTLENBQUNyRixLQUFNQSx5Q0FHVmUsR0FDUEEsR0FBTzRDLEtBQUtPLE1BQU1hLE1BQU1nQyxPQUMxQnBELEtBQUswQixTQUFTLENBQUMwQixPQUFRaEcsRUFBS2dFLE1BQU0sS0FFbENwQixLQUFLMEIsU0FBUyxDQUFDMEIsT0FBUWhHLDJDQUlaQSxHQUNUQSxHQUFPNEMsS0FBS08sTUFBTWEsTUFBTW9DLFNBQzFCeEQsS0FBSzBCLFNBQVMsQ0FBQzhCLFNBQVVwRyxFQUFLZ0UsTUFBTSxLQUVwQ3BCLEtBQUswQixTQUFTLENBQUM4QixTQUFVcEcsOENBSVgsSUFBQWdGLEVBQ1dwQyxLQUFLTyxNQUF6Qm1OLEVBRFN0TCxFQUNUc0wsSUFBSzdTLEVBREl1SCxFQUNKdkgsTUFBT0MsRUFESHNILEVBQ0d0SCxLQUNiLElBQUlnQyxLQUFLZ0wsU0FBU2hOLEdBQU9nTixTQUFTak4sR0FBUWlOLFNBQVM0RixJQUFRLElBQUk1USxNQUNuRWtELEtBQUswQixTQUFTLENBQUNOLE1BQU0sd0NBSWRoRSxHQUFLLElBQUEwRSxFQUFBOUIsS0FDZCxHQUFJNUMsSUFBUWhDLFFBQU8sQ0FDakIsSUFBTXdCLEVBQU8sSUFBSUUsS0FDakJrRCxLQUFLMEIsU0FBUyxDQUFFaU0sVUFBUyxFQUFNQyxjQUFjLEVBQU9GLElBQUs5USxFQUFLSSxVQUFXbkMsTUFBTytCLEVBQUtLLFdBQVluQyxLQUFNOEIsRUFBS00sZUFBZ0IsV0FDMUg0RSxFQUFLK0wseUJBRUYsR0FBSXpRLEdBQU8vQixZQUFXLENBQzNCLElBQUlxTSxFQUFXLElBQUk1SyxLQUNmRixFQUFPLElBQUlFLEtBQUs0SyxFQUFTb0csUUFBUXBHLEVBQVMxSyxVQUFZLElBQzFEZ0QsS0FBSzBCLFNBQVMsQ0FBRWlNLFVBQVUsRUFBT0MsY0FBYyxFQUFNRixJQUFLOVEsRUFBS0ksVUFBV25DLE1BQU8rQixFQUFLSyxXQUFZbkMsS0FBTThCLEVBQUtNLGVBQWdCLFdBQzNINEUsRUFBSytMLHlCQUdQN04sS0FBSzBCLFNBQUwvRixFQUFBLEdBQWtCeUIsR0FBTSxXQUN0QjBFLEVBQUsrTCwwREFLRyxJQUFBdkwsRUFDZXRDLEtBQUtPLE1BQXpCbU4sRUFES3BMLEVBQ0xvTCxJQUFLN1MsRUFEQXlILEVBQ0F6SCxNQUFPQyxFQURQd0gsRUFDT3hILEtBQ2JpVCxFQUFVLFlBRWhCLE9BQUtBLEVBQVFDLEtBQUtOLElBQVNLLEVBQVFDLEtBQUtuVCxJQURwQixVQUMyQ21ULEtBQUtsVCxHQUkzRCxJQUFJZ0MsS0FBS2dMLFNBQVNoTixHQUFPZ04sU0FBU2pOLEdBQVFpTixTQUFTNEYsSUFBUSxJQUFJNVEsTUFDdEVrRCxLQUFLMEIsU0FBUyxDQUFDTixNQUFPLENBQUN4RSxLQUFNLHlDQUN0QixJQUdQb0QsS0FBS3BELEtBQU8sSUFBSUUsS0FBS2dMLFNBQVNoTixHQUFPZ04sU0FBU2pOLEdBQVFpTixTQUFTNEYsS0FDeEQsSUFUUDFOLEtBQUswQixTQUFTLENBQUNOLE1BQU8sQ0FBQ3hFLEtBQU0sbUNBQ3RCLDRDQVlULElBRGVvUCxFQUVZaE0sS0FBS08sTUFBekI2QyxFQUZRNEksRUFFUjVJLE9BQVFJLEVBRkF3SSxFQUVBeEksU0FDZixPQUFLSixHQUFVQSxHQUFVLEdBQ3ZCcEQsS0FBSzBCLFNBQVMsQ0FBQ04sTUFBTyxDQUFDZ0MsT0FBUSxvQ0FDeEIsR0FFSkksSUFJQXhELEtBQUtpTyxlQUhSak8sS0FBSzBCLFNBQVMsQ0FBQ04sTUFBTyxDQUFDb0MsU0FBVSxzQ0FDMUIsOENBT1EsSUFBQXJCLEVBQUFuQyxLQUFBa08sRUFDa0NsTyxLQUFLTyxNQUFqRDZDLEVBRFU4SyxFQUNWOUssT0FBMEIvRyxHQURoQjZSLEVBQ0ZSLElBREVRLEVBQ0dyVCxNQURIcVQsRUFDVXBULEtBRFZvVCxFQUNnQjdSLE1BQU1tSCxFQUR0QjBLLEVBQ3NCMUssU0FHdkMsR0FGQXhELEtBQUswQixTQUFTLENBQUN5TSxlQUFlLElBQ0ZuTyxLQUFLb08saUJBQ1IsQ0FDdkIsSUFBTXhSLEVBQU9vRCxLQUFLcEQsS0FDWmlILEVBQUtqSCxFQUFLSyxXQUNWNkcsRUFBS2xILEVBQUtNLGNBQ1YwSyxFQUFrQixJQUFJOUssS0FBS2dILEVBQUlELEVBQUksR0FBRzhELFNBQ3RDaEUsRUFBS3JHLEtBQUt1SyxNQUFNRCxFQUFrQmhMLEVBQUtJLFdBQWEsR0FDcEQ0RyxFQUFNaEgsRUFBSytLLFNBQ1hqRSxFQUFLOUcsRUFBS0ksVUFDVnhCLEVBQVMsQ0FBRTRILFNBQVEvRyxPQUFNTyxPQUFNaUgsS0FBSUMsS0FBSUgsS0FBSUMsTUFBS0YsS0FBSUYsWUFDdER4RCxLQUFLRixNQUFNaUssb0JBQ2J2TyxFQUFPZ0gsR0FBS3hDLEtBQUtGLE1BQU1pSyxtQkFBbUJ2SCxJQUMxQyxFQUFBNUMsRUFBQXpELGNBQWFYLEdBQVF5RixLQUFLLFNBQUNDLEdBQ3pCaUIsRUFBS3JDLE1BQU1aLFlBQVcsR0FBTyxHQUFNLElBQ2xDLFNBQUMrQyxHQUNGdkMsUUFBUUMsSUFBSSx5QkFBeUJzQyxHQUNyQ0UsRUFBS3JDLE1BQU1aLFlBQVcsR0FBTyxHQUFPLE9BR3RDLEVBQUFVLEVBQUE3RCxhQUFZUCxHQUFReUYsS0FBSyxTQUFDb04sR0FDeEJsTSxFQUFLckMsTUFBTVosWUFBVyxHQUFPLElBQzVCLFNBQUMrQyxHQUNGdkMsUUFBUUMsSUFBSSwrQkFBK0JzQyxHQUMzQ0UsRUFBS3JDLE1BQU1aLFlBQVcsR0FBTyx1Q0FNNUIsSUFBQW1ELEVBQUFyQyxLQUFBc08sRUFDa0V0TyxLQUFLTyxNQUF2RWxFLEVBREFpUyxFQUNBalMsS0FBTStHLEVBRE5rTCxFQUNNbEwsT0FBMEJJLEdBRGhDOEssRUFDY1osSUFEZFksRUFDbUJ6VCxNQURuQnlULEVBQzBCeFQsS0FEMUJ3VCxFQUNnQzlLLFVBQVVwQyxFQUQxQ2tOLEVBQzBDbE4sTUFBTytNLEVBRGpERyxFQUNpREgsY0FDeEQsT0FDRTNSLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsMkJBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLDhCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVyxXQUFzQixZQUFUbEcsRUFBcUIsZUFBaUIsSUFBTXdHLFFBQVMsa0JBQU1SLEVBQUttTCxXQUFXLGFBQXpHLFdBQ0FoUixFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFXLFdBQXNCLFdBQVRsRyxFQUFvQixlQUFpQixJQUFLd0csUUFBUyxrQkFBTVIsRUFBS21MLFdBQVcsWUFBdkcsV0FFRmhSLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUscUJBQ2IvRixFQUFBQyxRQUFBQyxjQUFBLGlCQUNBRixFQUFBQyxRQUFBQyxjQUFBLFNBQU82RixVQUFXLGVBQWlCbkIsRUFBTWdDLE9BQVMsYUFBZSxJQUFLbUwsZ0JBQWMsTUFBTWxTLEtBQUssT0FBT21HLEdBQUcsWUFBWUMsWUFBWSxTQUFTQyxTQUFVLFNBQUNDLEdBQUQsT0FBT04sRUFBS21NLGFBQWE3TCxFQUFFQyxPQUFPbkosUUFBUUEsTUFBTzJKLElBQ3JNNUcsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSxvQkFBaEIsT0FDQ25CLEVBQU1nQyxPQUFTNUcsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxZQUFZbkIsRUFBTWdDLFFBQWdCLE1BRW5FNUcsRUFBQUMsUUFBQUMsY0FBQSxPQUFNNkYsVUFBVSx1QkFDZC9GLEVBQUFDLFFBQUFDLGNBQUEsU0FBTzZGLFVBQVcsZUFBaUJuQixFQUFNb0MsU0FBVyxhQUFlLElBQUsrSyxnQkFBYyxNQUFPbFMsS0FBSyxPQUFPbUcsR0FBRyxjQUFjQyxZQUFZLFdBQVdDLFNBQVUsU0FBQ0MsR0FBRCxPQUFPTixFQUFLb00sZUFBZTlMLEVBQUVDLE9BQU9uSixRQUFRQSxNQUFPK0osSUFDOU1oSCxFQUFBQyxRQUFBQyxjQUFBLFFBQU02RixVQUFVLG9CQUFoQixPQUNDbkIsRUFBTW9DLFNBQVdoSCxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLFlBQVluQixFQUFNb0MsVUFBa0IsTUFFdkVoSCxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGtCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxVQUFReUcsSUFBSSxNQUFNWixVQUFVLE9BQU9HLFNBQVUsU0FBQ0MsR0FBRCxPQUFPTixFQUFLcU0sV0FBVyxDQUFDaEIsSUFBSy9LLEVBQUVDLE9BQU9uSixTQUFTQSxNQUFPdUcsS0FBS08sTUFBTW1OLE1BQU0sRUFBQXpILEVBQUE3SixlQUFjLFFBQ2xJSSxFQUFBQyxRQUFBQyxjQUFBLFVBQVF5RyxJQUFJLFFBQVFaLFVBQVUsT0FBT0csU0FBVSxTQUFDQyxHQUFELE9BQU9OLEVBQUtxTSxXQUFXLENBQUM3VCxNQUFPOEgsRUFBRUMsT0FBT25KLFNBQVNBLE1BQU91RyxLQUFLTyxNQUFNMUYsUUFBUSxFQUFBb0wsRUFBQTdKLGVBQWMsVUFDeElJLEVBQUFDLFFBQUFDLGNBQUEsVUFBUXlHLElBQUksT0FBT1osVUFBVSxPQUFPRyxTQUFVLFNBQUNDLEdBQUQsT0FBT04sRUFBS3FNLFdBQVcsQ0FBQzVULEtBQU02SCxFQUFFQyxPQUFPbkosU0FBU0EsTUFBT3VHLEtBQUtPLE1BQU16RixPQUFPLEVBQUFtTCxFQUFBN0osZUFBYyxTQUNySUksRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxRQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVyxRQUFVdkMsS0FBS08sTUFBTW9OLFNBQVcsMEJBQTJCLHVCQUF3QjlLLFFBQVMsa0JBQU1SLEVBQUtxTSxXQUFXdFQsV0FBbkksU0FDQW9CLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTZGLFVBQVcsUUFBVXZDLEtBQUtPLE1BQU1xTixhQUFlLDBCQUEyQix1QkFBeUIvSyxRQUFTLGtCQUFNUixFQUFLcU0sV0FBV3JULGVBQXhJLGNBRUQrRixFQUFNeEUsS0FBT0osRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxpQkFBaUJuQixFQUFNeEUsTUFBYyxNQUVwRUosRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSxjQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVyxzQkFBd0I0TCxFQUFnQixhQUFlLElBQUt0TCxRQUFTN0MsS0FBS3lOLGtCQUFtQlUsRUFBZ0IsWUFBYyw2QkExS2hJWiw0VUNEckIvUCxFQUFBcEYsRUFBQSx1Q0FDQXFGLEVBQUFyRixFQUFBLEdBQ0E2TixFQUFBN04sRUFBQSxHQUxBLElBT3FCdVcsY0FDbkIsU0FBQUEsRUFBWTdPLGdHQUFPQyxDQUFBQyxLQUFBMk8sR0FBQSxJQUFBMU8sbUtBQUFDLENBQUFGLE1BQUEyTyxFQUFBeE8sV0FBQWpILE9BQUFrSCxlQUFBdU8sSUFBQWhXLEtBQUFxSCxLQUNYRixJQURXLE9BRWpCRyxFQUFLMk8sWUFBYzNPLEVBQUsyTyxZQUFZNVUsS0FBakJpRyxHQUZGQSxxVUFEY2UsNERBTzNCRixRQUFVQSxPQUFPK04sa0JBQ25CL04sT0FBTytOLGlCQUFpQixXQUFZLFdBQ2xDQyxNQUFNLCtEQUtDQyxFQUFjQyxFQUFjQyxHQUl2QyxJQUhBLElBQU1DLEVBQWdCLEdBQ2hCM0gsRUFBTXZILEtBQUtGLE1BQU15SCxJQUNuQjRILEVBQVksRUFDUjNFLEVBQVEsRUFBR0EsRUFBUXVFLEVBQWFuTixPQUFTLEVBQUc0SSxJQUFTLENBQzNELElBQUk0RSxFQUFZLEdBQ2hCLEdBQUk3SCxJQUFRNU0sT0FDVnlVLEVBQVlqVSxnQkFBY2dVLEtBQWFFLG1CQUNsQyxHQUFJOUgsSUFBUTdNLE9BQ2pCMFUsRUFBWWxVLGtCQUFnQmlVLEtBQWFFLG1CQUNwQyxHQUFJOUgsSUFBUTlNLFFBQVEsQ0FDekIsR0FBSStQLEVBQVEsR0FBTSxFQUNoQixTQUVGNEUsRUFBWTVFLEVBRWQwRSxFQUFjM1MsS0FDWkMsRUFBQUMsUUFBQUMsY0FBQSxLQUFHM0MsSUFBSyxTQUFXeVEsR0FDakJoTyxFQUFBQyxRQUFBQyxjQUFBLFNBQ0FGLEVBQUFDLFFBQUFDLGNBQUEsUUFBTTZGLFVBQVUsS0FBSytNLEVBQUdQLEVBQWF2RSxHQUFRTSxLQUFLLFVBQVV5RSxFQUFHUCxFQUFheEUsR0FBUyxFQUFHZ0YsU0FBUyxJQUFJQyxXQUFXLFdBQVUsRUFBQXhKLEVBQUE5SSxlQUFjOFIsRUFBb0J6RSxLQUM1SmhPLEVBQUFDLFFBQUFDLGNBQUEsVUFBUWdULEdBQUlYLEVBQWF2RSxHQUFRbUYsR0FBSVgsRUFBYXhFLEdBQVFvRixPQUFPLFVBQVU5RSxLQUFLLFVBQVV4UixFQUFFLE1BQU11VyxZQUFZLE1BQzlHclQsRUFBQUMsUUFBQUMsY0FBQSxRQUFNNkYsVUFBVSxLQUFLK00sRUFBR1AsRUFBYXZFLEdBQVFNLEtBQUssVUFBVXlFLEVBQUdPLElBQVlOLFNBQVMsSUFBSUMsV0FBVyxVQUFVTCxNQUtuSCxPQUFPRix3Q0FHSyxJQUFBYSxFQUNZL1AsS0FBS0YsTUFBdEJzSSxFQURLMkgsRUFDTDNILFNBQVViLEVBREx3SSxFQUNLeEksSUFDWHdILEVBQWUsR0FDZkMsRUFBZSxHQUNmQyxFQUFzQixHQUN0QnJOLEVBQVNoSCxpQkFBZTJNLEdBQ3hCeUksRUFBVWhWLGtCQUFnQnVNLEdBQzFCMEksRUFBUzdILEVBQVM4SCxVQUNsQkMsRUExREksSUEwRDRCdk8sRUFDbEN3TyxFQUFlN0ksSUFBUTlNLFFBQVEsR0FBSyxFQUVwQzRWLEVBQU0sR0FzQlYsSUFuQkF0QixFQUFheFMsS0FBSyxHQUNsQnlTLEVBQWF6UyxLQWhFRixLQWlFWDBTLEVBQW9CMVMsS0FBSyxJQUN6QjZMLEVBQVM2RSxnQkFBZ0JxRCxRQUFRLFNBQUNDLEdBQ2hDLEtBQU9BLEVBQU1DLFNBQVdKLEdBQWMsQ0FDcEMsSUFBTUssRUFBUTFCLEVBQWFBLEVBQWFuTixPQUFTLEdBRWpELEdBREFtTixFQUFheFMsS0FBTWtVLEVBQVFOLEdBQ3ZCSSxFQUFNQyxXQUFhSixFQUFlLEVBQUcsQ0FDdkMsSUFBTXZGLEVBQVkwRixFQUFNbk4sT0FBUzZNLEVBQVUsSUFDM0NqQixFQUFhelMsS0F4RVIsSUF3RXdCdVQsS0FBZ0JqRixHQUM3Q29FLEVBQW9CMVMsS0FBS2dVLEVBQU1uTixhQUUvQjRMLEVBQWF6UyxLQTNFUixLQTRFTDBTLEVBQW9CMVMsS0FBSyxJQUUzQjZULE9BSUVKLEVBQVVJLEdBQWMsQ0FDNUIsSUFBTUssRUFBUTFCLEVBQWFBLEVBQWFuTixPQUFTLEdBQ2pEbU4sRUFBYXhTLEtBQU1rVSxFQUFRTixHQUMzQm5CLEVBQWF6UyxLQXJGSixLQXNGVDZULElBQ0FuQixFQUFvQjFTLEtBQUssSUFFM0IsSUFBTWtVLEVBQVExQixFQUFhQSxFQUFhbk4sT0FBUyxHQUNqRG1OLEVBQWF4UyxLQUFNa1UsRUFBUU4sR0FDM0JuQixFQUFhelMsS0EzRkYsS0E0RlgwUyxFQUFvQjFTLEtBQUssSUFFekIsSUFBSyxJQUFJL0QsRUFBSSxFQUFHQSxFQUFJdVcsRUFBYW5OLE9BQVFwSixJQUN2QzZYLEdBQU8sSUFBTXRCLEVBQWF2VyxHQUFLLElBQU13VyxFQUFheFcsR0FBSyxJQUV6RCxPQUFJNlgsRUFFQTdULEVBQUFDLFFBQUFDLGNBQUEsV0FFRUYsRUFBQUMsUUFBQUMsY0FBQSxPQUFLZ08sUUFBVTVKLFFBQVVBLE9BQU80UCxPQUFPL0YsTUFBUSxJQUFNLGtCQUFxQixrQkFBcUJyQixNQUFPLENBQUNxSCxPQUFRLFNBQzdHblUsRUFBQUMsUUFBQUMsY0FBQSxZQUFVa1UsT0FBUVAsRUFBSzlOLFVBQVUsa0JBQ2hDdkMsS0FBSzZRLGFBQWE5QixFQUFjQyxFQUFjQyxLQUtoRCxzQ0FJUCxPQUNFelMsRUFBQUMsUUFBQUMsY0FBQSxXQUNHc0QsS0FBSzRPLGtDQTVHT0QsNFVDUnJCblIsRUFBQXBGLEVBQUEsMkNBRXFCMFksY0FDbkIsU0FBQUEsRUFBWWhSLEdBQU8sbUdBQUFDLENBQUFDLEtBQUE4USxvS0FBQTVRLENBQUFGLE1BQUE4USxFQUFBM1EsV0FBQWpILE9BQUFrSCxlQUFBMFEsSUFBQW5ZLEtBQUFxSCxLQUNYRix1VUFGeUJrQixpREFJeEIsSUFBQStPLEVBQ21DL1AsS0FBS0YsTUFBeEN1TixFQURBMEMsRUFDQTFDLGVBQWdCQyxFQURoQnlDLEVBQ2dCekMsZ0JBQ3ZCLE9BQ0U5USxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLGlCQUNiL0YsRUFBQUMsUUFBQUMsY0FBQSxPQUFLNkYsVUFBVSwwQkFDYi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsZUFDYi9GLEVBQUFDLFFBQUFDLGNBQUEsT0FBSzZGLFVBQVUsNkJBQWYsMkNBR0EvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLE1BQ2IvRixFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLHlDQUF5Q00sUUFBU3lLLEdBQWpFLFdBQ0E5USxFQUFBQyxRQUFBQyxjQUFBLE9BQUs2RixVQUFVLHlDQUF5Q00sUUFBU3dLLEdBQWpFLGlDQWZPeUQsZ0NDRnJCLElBQUkvTixFQUFXdkksRUFBUSxHQUN2QnVJLEVBQVNnTyxRQUFVQyxPQUFPRCxRQUMxQmhPLEVBQVNrTyxRQUFRalQsUUFBUUMsSUFBSU8sYUFBYyxDQUFFMFMsZ0JBQWdCLElBQVFqUSxLQUFLLFdBQ3RFdkIsUUFBUUMsSUFBSSxvQkFDZCxTQUFDZ0QsR0FDQ2pELFFBQVFDLElBQUlnRCxLQUVoQnBLLEVBQU9ELFFBQVUsQ0FBQ3lLLDJZQ1BsQjNLLEVBQUEsU0FDQUEsRUFBQSxNQUNBQSxFQUFBLFVBQ0FBLEVBQUEsS0FDQXFGLEVBQUFyRixFQUFBLE9BQ0FBLEVBQUEsd0RBRWEyRyxTQUFTLFNBQUNvUyxFQUFTOUMsR0FBYSxJQUFBK0MsRUFDY0QsRUFBUUUsS0FEdEJDLEVBQUFGLEVBQ2pDNVEsZ0JBRGlDMEssSUFBQW9HLEVBQ3RCLEdBRHNCQSxFQUFBQyxFQUFBSCxFQUNsQjNRLGdCQURrQnlLLElBQUFxRyxFQUNQLEdBRE9BLEVBRXJDQyxHQUZxQ0osRUFDSC9NLFFBQzNCLElBQUlhLFVBQU0sQ0FDakJqQixJQUFLbEIsVUFBU21CLE1BQU1DLFdBQ3BCM0QsU0FBVUEsRUFDVkMsU0FBVUEsS0FFZHlFLFVBQU11TSxLQUFLLENBQUVqUixTQUFVQSxJQUFZUyxLQUFLLFNBQUMxQixHQUNqQ0EsRUFBSXFDLE9BQVMsRUFDYnlNLEVBQVM3TyxLQUFLLENBQUU0QixPQUFPLEVBQU1TLElBQUssNEJBRWxDMlAsRUFBS0UsT0FBT3pRLEtBQUssU0FBQzBRLEdBQ2RSLEVBQVF4VCxRQUFRc0YsTUFBUTBPLEVBQUkxTyxNQUM1Qm9MLEVBQVM3TyxLQUFLLENBQUU0QixPQUFPLEVBQU9TLElBQUssd0JBQ3BDLFNBQUNjLEdBQ0EwTCxFQUFTdUQsT0FBTyxLQUFLcFMsS0FBS21ELE1BR25DLFNBQUNBLEdBQ0EwTCxFQUFTN08sS0FBS21ELEdBQ2RqRCxRQUFRQyxJQUFJZ0QsTUFJUDNELFNBQVMsU0FBQ21TLEVBQVM5QyxHQUFhLElBQUF3RCxFQUNjVixFQUFRRSxLQUR0QlMsRUFBQUQsRUFDakNyUixnQkFEaUMwSyxJQUFBNEcsRUFDdEIsR0FEc0JBLEVBQUFDLEVBQUFGLEVBQ2xCcFIsZ0JBRGtCeUssSUFBQTZHLEVBQ1AsR0FET0EsRUFBQUYsRUFDSHhOLFFBQ3RDM0UsUUFBUUMsSUFBSXdSLEVBQVF4VCxRQUFRNlQsTUFDNUJ0TSxVQUFNOE0sUUFBUSxDQUFFeFIsU0FBVUEsSUFBWVMsS0FBSyxTQUFDMFEsR0FDcENBLEVBQ0FqTixVQUFPdU4sUUFBUXhSLEVBQVVrUixFQUFJbFIsU0FBVSxTQUFTd0IsR0FDdkNBLEVBSURvTSxFQUFTN08sS0FBSyxDQUFFNEIsT0FBTyxFQUFNUyxJQUFLLHNCQUhsQ3NQLEVBQVF4VCxRQUFRc0YsTUFBUTBPLEVBQUkxTyxNQUM1Qm9MLEVBQVM3TyxLQUFLLENBQUU0QixPQUFPLEVBQU9TLElBQUssZUFNM0N3TSxFQUFTN08sS0FBSyxDQUFFNEIsT0FBTyxFQUFNUyxJQUFLLDJCQUV2QyxTQUFDYyxHQUNBMEwsRUFBUzdPLEtBQUttRCxHQUNkakQsUUFBUUMsSUFBSWdELE1BSVAxRCxTQUFTLFNBQUNrUyxFQUFTOUMsR0FDNUI4QyxFQUFReFQsUUFBUXNGLE1BQVEsS0FDeEJvTCxFQUFTN08sS0FBSyxDQUFFNEIsT0FBTyxFQUFPUyxJQUFLLGFBRzFCaEcsY0FBYyxTQUFDc1YsRUFBUzlDLEdBQ2pDLEdBQUk4QyxFQUFReFQsUUFBUXNGLE1BQU8sQ0FDdkIsSUFBTUEsRUFBUWtPLEVBQVF4VCxRQUFRc0YsTUFDOUJpQyxVQUFNOE0sUUFBUSxDQUFFL08sTUFBT0EsSUFBUWhDLEtBQUssU0FBQzFCLEdBQ2pDLEdBQUlBLEVBQUssQ0FDTCxJQUFNaUIsRUFBV2pCLEVBQUlpQixTQUNyQjZOLEVBQVM3TyxLQUFLLENBQUUySCxTQUFVLENBQUMzRyxTQUFVQSxVQUVyQzZOLEVBQVM3TyxLQUFLLENBQUU0QixPQUFPLEVBQU1TLElBQUssMkJBRXZDLFNBQUNjLEdBQ0EwTCxFQUFTN08sS0FBS21ELEdBQ2RqRCxRQUFRQyxJQUFJZ0QsVUFHaEIwTCxFQUFTN08sS0FBSyxLQUFLQSxLQUFLLENBQUM0QixPQUFPLEtBTTNCbEMsYUFBYSxTQUFDaVMsRUFBUzlDLEdBQWEsSUFBQTZELEVBQ3RCZixFQUFRRSxLQUF6QmpPLEVBRHVDOE8sRUFDdkM5TyxPQUFReEcsRUFEK0JzVixFQUMvQnRWLEtBRCtCdVYsRUFFSWhCLEVBQVFFLEtBQWhEMU4sRUFGb0N3TyxFQUVwQ3hPLEdBQUlDLEVBRmdDdU8sRUFFaEN2TyxJQUFLQyxFQUYyQnNPLEVBRTNCdE8sR0FBSUMsRUFGdUJxTyxFQUV2QnJPLEdBQUlKLEVBRm1CeU8sRUFFbkJ6TyxHQUFJckgsRUFGZThWLEVBRWY5VixLQUFNbUgsRUFGUzJPLEVBRVQzTyxTQUc5QnRFLEVBQWEsQ0FBRWtFLE9BRnJCQSxFQUFTMEUsU0FBUzFFLEdBRVdJLFdBQVU1RyxLQUR2Q0EsRUFBTyxJQUFJRSxLQUFLRixHQUM2QlAsT0FBTXNILEtBQUlDLE1BQUtDLEtBQUlDLEtBQUlKLE1BQzNDLElBQUlaLFVBQUpuSCxFQUFBLENBQ3JCc0gsTUFBT2tPLEVBQVF4VCxRQUFRc0YsT0FDcEIvRCxJQUVZd1MsT0FBT3pRLEtBQUssU0FBQzBRLEdBQzVCdEQsRUFBUzdPLEtBQUttUyxJQUNmLFNBQUMxUCxHQUNBdkMsUUFBUUMsSUFBSSw2QkFBOEJzQyxHQUMxQ29NLEVBQVN1RCxPQUFPLEtBQUtwUyxLQUFLeUMsTUFJckI5QyxpQkFBaUIsU0FBQ2dTLEVBQVM5QyxHQUNwQyxJQUFNcEwsRUFBUWtPLEVBQVF4VCxRQUFRc0YsTUFBUWtPLEVBQVF4VCxRQUFRc0YsTUFBUSxHQUU5RCxTQUFTbVAsRUFBcUJuUSxFQUFLZCxHQUMvQixHQUFJYyxFQUNBb1EsUUFBUTdTLEtBQUssS0FBS0EsS0FBS3lDLE9BQ3BCLENBQ0gsSUFBSXVHLEVBQWMsR0FBSUMsRUFBVyxHQUNqQ3ZQLE9BQU9rUyxLQUFLakssR0FBTW1KLElBQUksU0FBQ3ZRLEdBQ0ksWUFBbkJvSCxFQUFLcEgsR0FBS3NDLEtBQ1ZtTSxFQUFjckgsRUFBS3BILEdBQ08sV0FBbkJvSCxFQUFLcEgsR0FBS3NDLE9BQ2pCb00sRUFBYXRILEVBQUtwSCxNQUcxQixJQUFJNE8sU0FBT0QsU0FDUEYsR0FBZUEsRUFBWTZCLGlCQUMzQjdCLEVBQVk2QixnQkFBZ0JDLElBQUksU0FBQ0MsR0FDN0IsSUFBSU0sRUFBVU4sRUFBWW5ILFFBQVVvRixFQUFZcEYsT0FBUyxLQUN6RG1ILEVBQVlNLFFBQVV2TixLQUFLQyxNQUFnQixJQUFWc04sR0FBaUIsTUFFdERsQyxFQUFRSCxFQUFZcEYsUUFFcEJ1RixFQUFRLEVBRVJGLEdBQWNBLEVBQVc0QixpQkFDekI1QixFQUFXNEIsZ0JBQWdCQyxJQUFJLFNBQUNDLEdBQzVCLElBQUlNLEVBQVVOLEVBQVluSCxRQUFVcUYsRUFBV3JGLE9BQVMsS0FDeERtSCxFQUFZTSxRQUFVdk4sS0FBS0MsTUFBZ0IsSUFBVnNOLEdBQWlCLE1BRXREbkMsRUFBV0QsRUFBV3JGLE9BQVN1RixHQUUvQkQsRUFBVyxFQUFJQyxFQTFCaEIsSUFBQTJKLEVBNEJ1Qm5CLEVBQVFFLEtBQTFCdk4sRUE1Qkx3TyxFQTRCS3hPLEdBQUlELEVBNUJUeU8sRUE0QlN6TyxHQUFJRixFQTVCYjJPLEVBNEJhM08sR0FBSUQsRUE1QmpCNE8sRUE0QmlCNU8sR0FDcEIySyxFQUFTN08sS0FBSyxDQUFFa0UsR0FBR0EsRUFBSUcsR0FBSUEsRUFBSUMsR0FBSUEsRUFBSUgsR0FBSUEsRUFBSTZFLFlBQWFBLEVBQWFDLFdBQVlBLEVBQVlFLE1BQU9BLEVBQU9ELFNBQVVBLEtBS2pJLElBU002SixFQUFTLENBQ1hDLE9BQVEsQ0FDSnZPLElBQUssQ0FBRTVILEtBQU0sU0FDYitHLE9BQVEsQ0FBRXFQLEtBQU0sV0FDaEJwVyxLQUFNLENBQUVxVyxPQUFVLFNBQ2xCckksZ0JBQWlCLENBQUVzSSxNQUFPLENBQUVuUCxTQUFVLFlBQWFKLE9BQVEsVUFBV3hHLEtBQU0sUUFBUzRGLEdBQUksV0FHM0ZvUSxFQUFTLENBQUVDLFFBQVMsb0JBQ3RCQyxFQUFPLEdBRVBBLEVBRGlCLGNBekRFM0IsRUFBUUUsS0FBeEJwSyxhQTBESSxDQUFFOEwsTUFBTyxDQUFFQywwQkFBMkIsSUFFdEMsQ0FBRUQsTUFBTyxDQUFFRSx3QkFBeUIsSUFFL0MsSUFBTUMsRUFBVSxDQUNaVixPQUFRLENBQ0p2TyxJQUFLLENBQUU1SCxLQUFNLFNBQ2IrRyxPQUFRLENBQUVzUCxPQUFVLFdBQ3BCclcsS0FBTSxDQUFFcVcsT0FBVSxTQUNsQnJJLGdCQUFpQixDQUFFc0ksTUFBTyxzQkFyRWVRLEVBMEVoQmhDLEVBQVFFLEtBQWpDOUosRUExRXlDNEwsRUEwRXpDNUwsSUFBSzVELEVBMUVvQ3dQLEVBMEVwQ3hQLEdBQUlFLEVBMUVnQ3NQLEVBMEVoQ3RQLEdBQUlDLEVBMUU0QnFQLEVBMEU1QnJQLEdBMUU0QnFQLEVBMEV4QnZQLElBQ3JCMkQsSUFBUTdNLE9BQ1JvSSxVQUFTc1EsVUFBVSxDQUNmLENBQUVDLE9BQVEsQ0FBRXBRLE1BQU9BLElBQ25CLENBQUVvUSxPQUFRLENBQUV2UCxHQUFJZ0UsU0FBU2hFLEtBRlZuSSxFQUFBLEdBR1Y0VyxHQUhVNVcsRUFBQSxHQUlWaVgsR0FKVWpYLEVBQUEsR0FJSW1YLEdBSkpuWCxFQUFBLEdBSWdCdVgsR0FDL0IsQ0FBRUksU0FBVSxDQUFFclAsSUFBSyxFQUFHYixPQUFRLEVBQUcvRyxLQUFNLEVBQUdnTyxnQkFBaUIsTUFDNURrSixjQUFhLEdBQU1DLEtBQUtwQixHQUNwQjdLLElBQVE5TSxRQUNmcUksVUFBU3NRLFVBQVUsQ0FDZixDQUFFQyxPQUFRLENBQUVwUSxNQUFPQSxJQUNuQixDQUFFb1EsT0FBUSxDQUFFdlAsR0FBSWdFLFNBQVNoRSxLQUFRLENBQUV1UCxPQUFRLENBQUV4UCxHQUFJaUUsU0FBU2pFLEtBRjNDbEksRUFBQSxHQUdWNFcsR0FIVTVXLEVBQUEsR0FJVmlYLEdBSlVqWCxFQUFBLEdBSUltWCxHQUpKblgsRUFBQSxHQUlnQnVYLEdBQy9CLENBQUVJLFNBQVUsQ0FBRXJQLElBQUssRUFBR2IsT0FBUSxFQUFHL0csS0FBTSxFQUFHZ08sZ0JBQWlCLE1BQzVEa0osY0FBYSxHQUFNQyxLQUFLcEIsR0FDcEI3SyxJQUFRNU0sUUFDZm1JLFVBQVNzUSxVQUFVLENBQ2YsQ0FBRUMsT0FBUSxDQUFFcFEsTUFBT0EsSUFDbkIsQ0FBRW9RLE9BQVEsQ0FBRXZQLEdBQUlnRSxTQUFTaEUsS0FBUSxDQUFFdVAsT0FBUSxDQUFFeFAsR0FBSWlFLFNBQVNqRSxLQUFRLENBQUV3UCxPQUFRLENBQUUxUCxHQUFJbUUsU0FBU25FLEtBRjVFaEksRUFBQSxHQUdWNFcsR0FIVTVXLEVBQUEsR0FJVmlYLEdBSlVqWCxFQUFBLEdBSUltWCxHQUpKblgsRUFBQSxHQUlnQnVYLEdBQy9CLENBQUVJLFNBQVUsQ0FBRXJQLElBQUssRUFBR2IsT0FBUSxFQUFHL0csS0FBTSxFQUFHZ08sZ0JBQWlCLE1BQzVEa0osY0FBYSxHQUFNQyxLQUFLcEIsSUFJdEJoVCxvQkFBb0IsU0FBQytSLEVBQVM5QyxHQUN2QyxTQUFTb0YsRUFBaUJ4UixFQUFLZCxHQUMzQixHQUFJYyxFQUNBb1EsUUFBUTdTLEtBQUssS0FBS0EsS0FBS3lDLFFBRXZCLEdBQUlkLEdBQVFBLEVBQUssSUFBTUEsRUFBSyxHQUFHOEwsZ0JBQWlCLENBQzVDLElBQUlpRCxFQUFZN00sT0FBT3FRLGlCQUN2QnZTLEVBQUssR0FBRzhMLGdCQUFnQnFELFFBQVEsU0FBQUMsR0FDeEJMLEVBQVlLLEVBQU1uTixTQUNsQjhNLEVBQVlLLEVBQU1uTixVQUcxQmpDLEVBQUssR0FBRytPLFVBQVlBLEVBQ3BCN0IsRUFBUzdPLEtBQVQ3RCxFQUFBLEdBQWtCd0YsRUFBSyxVQUV2QmtOLEVBQVM3TyxLQUFLLElBSTFCLElBQU15RCxFQUFRa08sRUFBUXhULFFBQVFzRixNQUFRa08sRUFBUXhULFFBQVFzRixNQUFRLEdBbkJWMFEsRUFvQjFCeEMsRUFBUUUsS0FBM0I5SixFQXBCNkNvTSxFQW9CN0NwTSxJQUFLekQsRUFwQndDNlAsRUFvQnhDN1AsR0FBSUQsRUFwQm9DOFAsRUFvQnBDOVAsR0FBSUYsRUFwQmdDZ1EsRUFvQmhDaFEsR0FDaEI0RCxJQUFRN00sT0FDUm9JLFVBQVNzUSxVQUFVLENBQ2YsQ0FBQ0MsT0FBUSxDQUFFcFEsTUFBT0EsSUFDbEIsQ0FBQ29RLE9BQVEsQ0FBRXZQLEdBQUlBLElBQ2YsQ0FBQ3VQLE9BQVEsQ0FBRWhYLEtBQU0sWUFDakIsQ0FBQ21XLE9BQVEsQ0FBRXZPLElBQUssQ0FBRUosR0FBSSxPQUFRVCxPQUFRLENBQUNxUCxLQUFNLFdBQVk1WCxNQUFPLENBQUM2WCxPQUFVLFNBQzNFLENBQUNLLE1BQU8sQ0FBRWxZLE1BQU8sSUFDakIsQ0FBQzJYLE9BQVEsQ0FBQ3ZPLElBQUssS0FBTTJQLFlBQWEsQ0FBQ25CLEtBQVEsV0FBWXhGLGdCQUFpQixDQUFDMEYsTUFBUSxDQUFFdlAsT0FBUSxVQUFXb04sU0FBVSxhQUNoSCxDQUFDOEMsU0FBVSxDQUFDclAsSUFBSyxNQUNkc1AsY0FBYSxHQUFNQyxLQUFLQyxHQUN4QmxNLElBQVE5TSxRQUNmcUksVUFBU3NRLFVBQVUsQ0FDZixDQUFDQyxPQUFRLENBQUVwUSxNQUFPQSxJQUNsQixDQUFDb1EsT0FBUSxDQUFFdlAsR0FBSUEsSUFDZixDQUFDdVAsT0FBUSxDQUFFeFAsR0FBSUEsSUFDZixDQUFDd1AsT0FBUSxDQUFFaFgsS0FBTSxZQUNqQixDQUFDbVcsT0FBUSxDQUFFdk8sSUFBSyxDQUFDUCxHQUFJLE9BQVFOLE9BQVEsQ0FBQ3FQLEtBQVEsV0FBWS9PLEdBQUksQ0FBQ2dQLE9BQVUsU0FDekUsQ0FBQ0ssTUFBTyxDQUFDclAsR0FBSSxJQUNiLENBQUM4TyxPQUFRLENBQUN2TyxJQUFLLEtBQU0yUCxZQUFhLENBQUNuQixLQUFRLFdBQVl4RixnQkFBaUIsQ0FBQzBGLE1BQU8sQ0FBQ3ZQLE9BQVEsVUFBV29OLFNBQVUsVUFDOUcsQ0FBQzhDLFNBQVUsQ0FBQ3JQLElBQUksTUFDYnNQLGNBQWEsR0FBTUMsS0FBS0MsR0FDeEJsTSxJQUFRNU0sUUFDZm1JLFVBQVNzUSxVQUFVLENBQ2YsQ0FBQ0MsT0FBUSxDQUFFcFEsTUFBT0EsSUFDbEIsQ0FBQ29RLE9BQVEsQ0FBRXZQLEdBQUlBLElBQ2YsQ0FBQ3VQLE9BQVEsQ0FBRXhQLEdBQUlBLElBQ2YsQ0FBQ3dQLE9BQVEsQ0FBRTFQLEdBQUlBLElBQ2YsQ0FBQzBQLE9BQVEsQ0FBRWhYLEtBQU0sWUFDakIsQ0FBQ21XLE9BQVEsQ0FBRXZPLElBQUssQ0FBQ0wsSUFBSyxRQUFTUixPQUFRLENBQUNxUCxLQUFNLFdBQVk3TyxJQUFLLENBQUM4TyxPQUFVLFVBQzFFLENBQUNLLE1BQU8sQ0FBRW5QLElBQUssSUFDZixDQUFDNE8sT0FBUSxDQUFFdk8sSUFBSyxLQUFNMlAsWUFBYSxDQUFDbkIsS0FBTSxXQUFheEYsZ0JBQWlCLENBQUMwRixNQUFPLENBQUN2UCxPQUFRLFVBQVdvTixTQUFVLFdBQzlHLENBQUM4QyxTQUFVLENBQUNyUCxJQUFLLE1BQ2RzUCxjQUFhLEdBQU1DLEtBQUtDLElBSTFCdlgsb0JBQW9CLFNBQUNpVixFQUFTOUMsR0FBYSxJQUM3QzdMLEVBQU0yTyxFQUFRRSxLQUFkN08sR0FDUE0sVUFBUytRLGlCQUFpQixDQUFDNVAsSUFBS3pCLElBQUt2QixLQUFLLFNBQUMwUSxHQUN2Q3RELEVBQVM3TyxLQUFLbVMsTUFJVHRTLGNBQWMsU0FBQzhSLEVBQVM5QyxHQUFhLElBQUF5RixFQUN6QjNDLEVBQVFFLEtBQXhCak8sRUFEeUMwUSxFQUN6QzFRLE9BQVF4RyxFQURpQ2tYLEVBQ2pDbFgsS0FEaUNtWCxFQUVPNUMsRUFBUUUsS0FBcEQ3TyxFQUZxQ3VSLEVBRXJDdlIsR0FBSW1CLEVBRmlDb1EsRUFFakNwUSxHQUFJQyxFQUY2Qm1RLEVBRTdCblEsSUFBS0MsRUFGd0JrUSxFQUV4QmxRLEdBQUlDLEVBRm9CaVEsRUFFcEJqUSxHQUFJSixFQUZnQnFRLEVBRWhCclEsR0FBSXJILEVBRlkwWCxFQUVaMVgsS0FBTW1ILEVBRk11USxFQUVOdlEsU0FDeENKLEVBQVMwRSxTQUFTMUUsR0FDbEJ4RyxFQUFPLElBQUlFLEtBQUtGLEdBRWhCa0csVUFBU2tSLGlCQUNMLENBQUMvUCxJQUFLekIsR0FDTixDQUFDeVIsS0FBTSxDQUFDN1EsT0FBVUEsRUFBUUksU0FBWUEsRUFBVTVHLEtBQVFBLEVBQU1QLEtBQVFBLEVBQU1zSCxHQUFNQSxFQUFJRCxHQUFNQSxFQUFJRyxHQUFNQSxFQUFJQyxHQUFNQSxFQUFJRixJQUFPQSxJQUMzSCxDQUFDc1EsUUFBTyxFQUFNQyxtQkFBb0IsSUFDcENsVCxLQUFLLFNBQUMwUSxHQUNKdEQsRUFBUzdPLEtBQUttUyxxQkNsUnRCcFosRUFBQUQsUUFBQWtDLFFBQUEsa0NDQUFqQyxFQUFBRCxRQUFBa0MsUUFBQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9idWlsZC9cIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDcpO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3RcIik7IiwiZXhwb3J0IGNvbnN0IE1PTlRIID0gJ21vbnRoJztcbmV4cG9ydCBjb25zdCBZRUFSID0gJ3llYXInO1xuZXhwb3J0IGNvbnN0IFdFRUsgPSAnd2Vlayc7XG5leHBvcnQgY29uc3QgRElWSVNJT05MRU5HVEggPSB7IG1vbnRoOiAzMSwgeWVhcjogMTIsIHdlZWs6IDd9OyBcbmV4cG9ydCBjb25zdCBNQVhMRU5HVEhQRVJUQUIgPSB7IG1vbnRoOiAzMSwgeWVhcjoxMSwgd2VlazogNn07XG5leHBvcnQgY29uc3QgTU9OVEhTTkFNRSA9IFsnSmFudWFyeScsICdGZWJydWFyeScsICdNYXJjaCcsICdBcHJpbCcsICdNYXknLCAnSnVuZScsICdKdWx5JywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2N0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddO1xuZXhwb3J0IGNvbnN0ICBNT05USFNOQU1FU0hPUlQgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywgJ09jdCcsICdOb3YnLCAnRGVjJ107XG5leHBvcnQgY29uc3QgV0VFS05BTUVTSE9SVCA9IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J107XG5leHBvcnQgY29uc3QgVE9EQVkgPSAndG9kYXknO1xuZXhwb3J0IGNvbnN0IFlFU1RFUkRBWSA9ICd5ZXN0ZXJkYXknO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3Qtcm91dGVyLWRvbVwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdC1oZWxtZXRcIik7IiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuZXhwb3J0IGNvbnN0IHNpZ251cCA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9zaWdudXAvJztcbiAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCB7Li4ucGFyYW1zfSk7XG59XG5cbmV4cG9ydCBjb25zdCBzaWduaW4gPSAocGFyYW1zKSA9PiB7XG4gIGNvbnN0IHVybCA9ICcvc2lnbmluLyc7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgey4uLnBhcmFtc30pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0VXNlckluZm8gPSAoKSA9PiB7XG4gIGNvbnN0IHVybCA9ICcvdXNlcmluZm8vJztcbiAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCB7fSk7XG59XG5cbmV4cG9ydCBjb25zdCBsb2dvdXRVc2VyID0gKCkgPT4ge1xuICBjb25zdCB1cmwgPSAnL2xvZ291dC8nO1xuICByZXR1cm4gYXhpb3MucG9zdCh1cmwsIHt9KTtcbn1cblxuZXhwb3J0IGNvbnN0IG5ld19leHBlbnNlID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL25ld19leHBlbnNlLyc7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgey4uLnBhcmFtc30pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0X2V4cGVuc2VfZGF0YSA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9nZXRfZXhwZW5zZV9kYXRhLycgO1xuICByZXR1cm4gYXhpb3MucG9zdCh1cmwsIHBhcmFtcyk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRfZXhwZW5zZV9zdW1tYXJ5ID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL2dldF9leHBlbnNlX3N1bW1hcnkvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUV4cGVuc2VEYXRlID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL2RlbGV0ZV9leHBlbnNlX2RhdGUvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGNvbnN0IGVkaXRfZXhwZW5zZSA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9lZGl0X2V4cGVuc2UvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge01PTlRIU05BTUVTSE9SVH0gZnJvbSAnLi4vY29uc3RhbnRzL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJPcHRpb25zKHR5cGUpIHtcbiAgY29uc3Qgb3B0aW9ucyA9IFtdO1xuICBpZiAodHlwZSA9PT0gJ2RheScpIHtcbiAgICBvcHRpb25zLnB1c2goPG9wdGlvbj5EYXk8L29wdGlvbj4pO1xuICAgIGZvcihsZXQgaSA9IDE7IGkgPCAzMiA7IGkrKykge1xuICAgICAgb3B0aW9ucy5wdXNoKDxvcHRpb24ga2V5PXsnZGF5XycgKyBpfSB2YWx1ZT17aX0+e2l9PC9vcHRpb24+KTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ21vbnRoJykge1xuICAgIG9wdGlvbnMucHVzaCg8b3B0aW9uPk1vbnRoPC9vcHRpb24+KTtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMTIgOyBpKyspIHtcbiAgICAgIG9wdGlvbnMucHVzaCg8b3B0aW9uIGtleT17J21vbnRoXycgKyBpfSB2YWx1ZT17aX0+e01PTlRIU05BTUVTSE9SVFtpXX08L29wdGlvbj4pO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlID09PSAneWVhcicpIHtcbiAgICBvcHRpb25zLnB1c2goPG9wdGlvbj5ZZWFyPC9vcHRpb24+KTtcbiAgICBmb3IobGV0IGkgPSAyMDIwOyBpID4gMjAwMCA7IGktLSkge1xuICAgICAgb3B0aW9ucy5wdXNoKDxvcHRpb24ga2V5PXsneWVhcl8nICsgaX0gIHZhbHVlPXtpfT57aX08L29wdGlvbj4pO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlID09PSAnd2VlaycpIHtcbiAgICBvcHRpb25zLnB1c2goPG9wdGlvbj5XZWVrPC9vcHRpb24+KTtcbiAgICBmb3IobGV0IGkgPSAxOyBpIDwgNiA7IGkrKykge1xuICAgICAgb3B0aW9ucy5wdXNoKDxvcHRpb24ga2V5PXsnd2Vla18nICsgaX0gdmFsdWU9e2l9PntpfTwvb3B0aW9uPik7XG4gICAgfVxuICB9XG4gIHJldHVybiBvcHRpb25zO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RGF0ZShkKSB7XG4gIGxldCBkYXRlO1xuICBpZiAodHlwZW9mKGQpICE9PSAnb2JqZWN0Jykge1xuICAgIGRhdGUgPSBuZXcgRGF0ZShkKTtcbiAgfSBlbHNlIHtcbiAgICBkYXRlID0gZDtcbiAgfVxuICBsZXQgcmVzdWx0ID0gJyc7XG4gIHJlc3VsdCArPSBkYXRlLmdldERhdGUoKSArICcgJyArICBNT05USFNOQU1FU0hPUlRbZGF0ZS5nZXRNb250aCgpXSArICcgJyArIGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFtb3VudE9uR3JhcGgodmFsKSB7XG4gIGlmICh2YWwgPT09ICcnKSB7XG4gICAgcmV0dXJuICcnO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHZhbHVlID0gcGFyc2VGbG9hdCh2YWwsIDEwKTtcbiAgICBpZiAodmFsID4gMTAwMCkge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdCh2YWwvMTAwMCwgMTApICogMTApIC8gMTAgKyAnSyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICB9XG59XG4iLCJyZXF1aXJlKCcuL2NvbmZpZy9jb25maWcnKTtcbmltcG9ydCAnYmFiZWwtcG9seWZpbGwnO1xuaW1wb3J0IGVudiBmcm9tICcuL2NvbmZpZy9jb25maWcnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG52YXIgc2Vzc2lvbiA9IHJlcXVpcmUoJ2V4cHJlc3Mtc2Vzc2lvbicpO1xuXG5pbXBvcnQgQXBwIGZyb20gJy4uL3NyYy9hcHAnXG5pbXBvcnQgJy4vZGIvbW9uZ29vc2UnO1xuaW1wb3J0IHtzaWduVXAsIHNpZ25JbiwgbmV3RXhwZW5zZSwgZ2V0RXhwZW5zZURhdGEsIGdldEV4cGVuc2VTdW1tYXJ5LCBkZWxldGVFeHBlbnNlRGF0ZSwgbG9nb3V0LCBnZXRVc2VySW5mbywgZWRpdEV4cGVuc2V9IGZyb20gJy4vYXBpL2FwaUNhbGxzJztcblxuY29uc3QgTW9uZ29TdG9yZSA9IHJlcXVpcmUoJ2Nvbm5lY3QtbW9uZ28nKShzZXNzaW9uKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUO1xuXG5hcHAudXNlKHNlc3Npb24oe1xuICAgIHNlY3JldDogJ2ZvbycsXG4gICAgcmVzYXZlOiB0cnVlLFxuICAgIHN0b3JlOiBuZXcgTW9uZ29TdG9yZSh7XG4gICAgICAgIHVybDogcHJvY2Vzcy5lbnYuTU9OR09MQUJfVVJJXG4gICAgfSlcbn0pKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYygnYnVpbGQvcHVibGljJykpO1xuYXBwLnVzZSgnL3N0eWxlcycsIGV4cHJlc3Muc3RhdGljKCdzcmMvcGFnZXMvc3R5bGVzJykpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYygnc3JjL3BhZ2VzL3N0YXRpYycpKTtcblxuLy8gQVBJIENhbGxzXG5hcHAucG9zdCgnL3NpZ251cCcsIHNpZ25VcCk7XG5hcHAucG9zdCgnL3NpZ25pbicsIHNpZ25Jbik7XG5hcHAucG9zdCgnL2xvZ291dCcsIGxvZ291dCk7XG5hcHAucG9zdCgnL3VzZXJpbmZvJywgZ2V0VXNlckluZm8pO1xuYXBwLnBvc3QoJy9uZXdfZXhwZW5zZScsIG5ld0V4cGVuc2UpO1xuYXBwLnBvc3QoJy9nZXRfZXhwZW5zZV9kYXRhJywgZ2V0RXhwZW5zZURhdGEpO1xuYXBwLnBvc3QoJy9nZXRfZXhwZW5zZV9zdW1tYXJ5JywgZ2V0RXhwZW5zZVN1bW1hcnkpO1xuYXBwLnBvc3QoJy9kZWxldGVfZXhwZW5zZV9kYXRlJywgZGVsZXRlRXhwZW5zZURhdGUpO1xuYXBwLnBvc3QoJy9lZGl0X2V4cGVuc2UnLCBlZGl0RXhwZW5zZSk7XG5cblxuY29uc3QgbG9hZEh0bWwgPSAoY29udGVudCkgPT4ge1xuICAgIHJldHVybiAoYFxuICAgICAgICA8aHRtbD5cbiAgICAgICAgICAgIDxoZWFkPlxuICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwibWFuaWZlc3RcIiBocmVmPVwiL21hbmlmZXN0Lmpzb25cIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9pbWcvYnVkZ2V0NjQucG5nXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy90d2l0dGVyLWJvb3RzdHJhcC80LjEuMy9jc3MvYm9vdHN0cmFwLm1pbi5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3R3aXR0ZXItYm9vdHN0cmFwLzQuMS4zL2pzL2Jvb3RzdHJhcC5idW5kbGUubWluLmpzXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIvc3R5bGVzL2NvbW1vbi5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvaG9tZS5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvbG9naW4uY3NzXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIvc3R5bGVzL25ld19leHBlbnNlLmNzc1wiPlxuICAgICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiB0eXBlPVwidGV4dC9jc3NcIiBocmVmPVwiL3N0eWxlcy9ub3Rmb3VuZC5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvcG9wdXAuY3NzXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnNcIiByZWw9XCJzdHlsZXNoZWV0XCI+XG4gICAgICAgICAgICA8L2hlYWQ+XG4gICAgICAgICAgICA8Ym9keT5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwicm9vdFwiPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxzY3JpcHQgc3JjID0gXCIvc3dSZWdpc3RlcmVyLmpzXCI+XG4gICAgICAgICAgICAgICAgPC9zY3JpcHQ+XG4gICAgICAgICAgICAgICAgPHNjcmlwdCBzcmM9XCJjbGllbnRfYnVuZGxlLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgICAgICA8L2JvZHk+XG4gICAgICAgIDwvaHRtbD5gKTtcbn07XG5cbmFwcC5nZXQoJyonLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGxvYWRIdG1sKCk7XG4gICAgcmVzLnNlbmQodGVtcGxhdGUpO1xufSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXIgU3RhcnRlZCBvbiBQb3J0OiAnLCBwb3J0KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWxtZXQgZnJvbSAncmVhY3QtaGVsbWV0JztcbmltcG9ydCB7c2lnbnVwLCBzaWduaW4sIGxvZ291dFVzZXJ9IGZyb20gJy4uL2FwaUNhbGxzL0FwaUNhbGxzJztcblxuY2xhc3MgTG9naW4gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhlYWQgPSB0aGlzLmhlYWQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNpZ25VcCA9IHRoaXMuc2lnblVwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zaWduSW4gPSB0aGlzLnNpZ25Jbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2lnbm91dFVzZXIgPSB0aGlzLnNpZ25vdXRVc2VyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHVzZXJuYW1lOiAnJyxcbiAgICAgIHBhc3N3b3JkOiAnJyxcbiAgICAgIHNpZ25pblRleHQ6ICdTaWduIEluJyxcbiAgICAgIHNpZ251cFRleHQ6ICdTaWduIFVwJyxcbiAgICAgIGNvbnRpbnVlVGV4dDogJ0NvbnRpbnVlIHdpdGggVGVzdCBMb2dpbicsXG4gICAgICBsb2FkOiAhd2luZG93LnNpZ25lZEluXG4gICAgfVxuICAgIGlmICh3aW5kb3cuc2lnbmVkSW4pIHtcbiAgICAgIHRoaXMuc2lnbm91dFVzZXIoKTtcbiAgICB9XG4gIH1cblxuICBzaWdub3V0VXNlcigpIHtcbiAgICBsb2dvdXRVc2VyKCkudGhlbigocmVzcCkgPT4ge1xuICAgICAgaWYgKCEocmVzcC5kYXRhLmVycm9yKSkge1xuICAgICAgICB3aW5kb3cuc2lnbmVkSW4gPSBmYWxzZTtcbiAgICAgICAgY29uc29sZS5sb2coJ1NpZ25pbmcgb3V0IHN1Y2Nlc3MnKTtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZygndW5hYmxlIHRvIHNpZ25vdXQgdXNlcicpO1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH0pLmNhdGNoKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCd1bmFibGUgdG8gc2lnbm91dCB1c2VyJyk7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSlcbiAgfVxuXG4gIGhlYWQoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxIZWxtZXQ+XG4gICAgICAgIDx0aXRsZT5FeHBlbnNlIExvZ2luPC90aXRsZT5cbiAgICAgIDwvSGVsbWV0PlxuICAgICk7XG4gIH1cblxuICBzdWNjZXNzZnVsKHJlc3ApIHtcbiAgICBpZiAocmVzcC5kYXRhICYmICFyZXNwLmRhdGEuZXJyb3IpIHtcbiAgICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKCcvaG9tZScsIHt9KTtcbiAgICAgIGlmICh0eXBlb2Yod2luZG93KSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2luZG93LnNpZ25lZEluID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7Li4ucmVzcC5kYXRhfSk7XG4gICAgfVxuICAgIGlmIChyZXNwLmRhdGEgJiYgcmVzcC5kYXRhLmVycm9yKSB7XG4gICAgICB0aGlzLnJlc2V0QnV0dG9uVGV4dCgpO1xuICAgIH1cbiAgfVxuXG4gIGlzVmFsaWQoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUudXNlcm5hbWUubGVuZ3RoIDwgNSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXJyb3I6IHRydWUsIG1zZzogJ1VzZXJuYW1lIG11c3QgYmUgZ3JlYXRlciB0aGFuIDQgQ2hhcmFjdGVycyd9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RhdGUucGFzc3dvcmQubGVuZ3RoIDwgOCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXJyb3I6IHRydWUsIG1zZzogJ1Bhc3N3b3JkIG11c3QgYmUgZ3JlYXRlciB0aGFuIDcgQ2hhcmFjdGVycyd9KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXNldEJ1dHRvblRleHQoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaWduaW5UZXh0OiAnU2lnbiBJbicsXG4gICAgICBzaWdudXBUZXh0OiAnU2lnbiBVcCcsXG4gICAgICBjb250aW51ZVRleHQ6ICdDb250aW51ZSB3aXRoIFRlc3QgTG9naW4nXG4gICAgfSk7XG4gIH1cblxuICBzaWduVXAoKSB7XG4gICAgaWYgKHRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtzaWdudXBUZXh0OiAnU2lnbmluZyB1cC4uLid9KTtcbiAgICAgIHNpZ251cCh7dXNlcm5hbWU6IHRoaXMuc3RhdGUudXNlcm5hbWUsIHBhc3N3b3JkOiB0aGlzLnN0YXRlLnBhc3N3b3JkfSlcbiAgICAgIC50aGVuKChyZXNwKSA9PiB7XG4gICAgICAgIHRoaXMuc3VjY2Vzc2Z1bChyZXNwKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICB0aGlzLnJlc2V0QnV0dG9uVGV4dCgpO1xuICAgICAgICBjb25zb2xlLmxvZygnRmFpbGVkIHRvIFNpZ251cCcpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgc2lnbkluKHdpdGhUZXN0Q3JlZHMpIHtcbiAgICBsZXQge3VzZXJuYW1lLCBwYXNzd29yZH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmICh3aXRoVGVzdENyZWRzKSB7XG4gICAgICB1c2VybmFtZSA9ICdkaGlsaXAnO1xuICAgICAgcGFzc3dvcmQgPSAnZGhpbGlwZGhpbGlwJztcbiAgICB9XG4gICAgaWYgKHdpdGhUZXN0Q3JlZHMgfHwgdGhpcy5pc1ZhbGlkKCkpIHtcbiAgICAgIGlmICh3aXRoVGVzdENyZWRzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2NvbnRpbnVlVGV4dDogJ0NvbnRpbnVpbmcgd2l0aCBUZXN0IExvZ2luLi4uJ30pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2lnbmluVGV4dDogJ1NpZ25pbmcgaW4uLi4nfSk7XG4gICAgICB9XG4gICAgICBzaWduaW4oe3VzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkfSkudGhlbigocmVzcCkgPT4ge1xuICAgICAgICB0aGlzLnN1Y2Nlc3NmdWwocmVzcCk7XG4gICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIHRoaXMucmVzZXRCdXR0b25UZXh0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gU2lnbkluJywgZXJyKTtcbiAgICAgIH0pOyBcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge3NpZ25pblRleHQsIHNpZ251cFRleHQsIGNvbnRpbnVlVGV4dH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5oZWFkKCl9XG4gICAgICAgIHt0aGlzLnN0YXRlLmxvYWQgJiZcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWVsZHNEaXZcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VybmFtZVwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJsb2dpbklucHV0IFwiIGlkPVwibG9naW5Vc2VybmFtZVwiIHBsYWNlaG9sZGVyPSdVc2VybmFtZScgdmFsdWU9e3RoaXMuc3RhdGUudXNlcm5hbWV9IG9uQ2hhbmdlID0geyhlKSA9PiB0aGlzLnNldFN0YXRlKHt1c2VybmFtZTogZS50YXJnZXQudmFsdWV9KX0gdHlwZT1cInRleHRcIi8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhc3N3b3JkIHBhZFQxMFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJsb2dpbklucHV0IFwiIGlkPVwibG9naW5Qd2RcIiBwbGFjZWhvbGRlcj0nUGFzc3dvcmQnIHZhbHVlPXt0aGlzLnN0YXRlLnBhc3N3b3JkfSBvbkNoYW5nZSA9IHsoZSkgPT4gdGhpcy5zZXRTdGF0ZSh7cGFzc3dvcmQ6IGUudGFyZ2V0LnZhbHVlfSl9IHR5cGU9XCJwYXNzd29yZFwiLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHt0aGlzLnN0YXRlLmVycm9yICYmIDxkaXYgaWQ9XCJlcnJvckRpdlwiIGNsYXNzTmFtZT1cInRleHRDZW50ZXIgcmVkIFwiPnt0aGlzLnN0YXRlLm1zZ308L2Rpdj59XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXIgcGFkVDIwXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmV3IGRpXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmV3QnRuIGxvZ2luQnRucyB0aGVtZUJnXCJvbkNsaWNrPXsoKSA9PiB0aGlzLnNpZ25JbihmYWxzZSl9PntzaWduaW5UZXh0fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmV3IGRpXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmV3QnRuIGxvZ2luQnRucyB0aGVtZUJnXCIgb25DbGljaz17dGhpcy5zaWduVXB9PntzaWdudXBUZXh0fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dENlbnRlciBwYWRUMjBcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuZXdcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuZXdCdG4gbG9naW5CdG5zIHRlc3RMb2dpbiB0aGVtZUJnXCIgb25DbGljaz17KCkgPT4gdGhpcy5zaWduSW4odHJ1ZSl9Pntjb250aW51ZVRleHR9PC9zcGFuPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2Pn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IExvZ2luOyIsImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgVXNlcnMgZnJvbSAnLi91c2VyTW9kZWwnO1xuXG5jb25zdCBFeHBlbnNlcyA9IG1vbmdvb3NlLm1vZGVsKCdFeHBlbnNlcycsIHtcbiAgdG9rZW46IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVmOiAnVXNlcnMnXG4gIH0sXG4gIGFtb3VudDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICB0cmltOiB0cnVlXG4gIH0sXG4gIGNhdGVnb3J5OiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgIHRyaW06IHRydWUsXG4gICAgICBkZWZhdWx0OiAnb3RoZXJzJ1xuICB9LFxuICB0eXBlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICB0cmltOiB0cnVlLFxuICAgIGRlZmF1bHQ6ICdleHBlbnNlJ1xuICB9LFxuICBkYXRlOiB7XG4gICAgdHlwZTogRGF0ZSxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZSxcbiAgICBkZWZhdWx0OiBEYXRlLm5vdygpXG4gIH0sXG4gIGRkOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICB0cmltOiB0cnVlXG4gIH0sXG4gIHd3OiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICB0cmltOiB0cnVlXG4gIH0sXG4gIGRvdzoge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICBtbToge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICB5eToge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZVxuICB9XG59KTtcbmV4cG9ydCBkZWZhdWx0IEV4cGVuc2VzOyIsImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgRXhwZW5zZXMgZnJvbSAnLi9leHBlbnNlTW9kZWwnO1xuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XG5cbmNvbnN0IFVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICB1c2VybmFtZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICBtaW5sZW5ndGg6IDUsXG4gICAgICAgIHRyaW06IHRydWVcbiAgICB9LFxuICAgIGVtYWlsSWQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgICAgIHRyaW06IHRydWVcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIG1pbmxlbmd0aDogOCxcbiAgICAgICAgdHJpbTogdHJ1ZVxuICAgIH0sXG4gICAgdG9rZW46IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIGV4cGVuc2U6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCBcbiAgICAgICAgICAgIHJlZjogJ0V4cGVuc2VzJ1xuICAgICAgICB9XG4gICAgXVxufSk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVG9rZW4odXNlckRvYywgbmV4dCkge1xuICAgIGJjcnlwdC5nZW5TYWx0KDEwLCBmdW5jdGlvbihlcnIsIHNhbHQpe1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGdlbmVyYXRlIFNhbHQgZm9yIFRva2VuJywgZXJyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJjcnlwdC5oYXNoKHVzZXJEb2MuX2lkLnRvSGV4U3RyaW5nKCkgKyB1c2VyRG9jLnBhc3N3b3JkLnRvU3RyaW5nKCksIHNhbHQsIGZ1bmN0aW9uKGVyciwgaGFzaCkge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZW5lcmF0ZSBIYXNoIGZvciBUb2tlbicsIGVycik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdXNlckRvYy50b2tlbiA9IGhhc2g7XG4gICAgICAgICAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG4vLyBTcGVjaWZpYyB0byBhbGwgZW50cmllcyBpbiBkb2N1bWVudCwgJ3RoaXMnIHJlZmVycyB0byBhIGRvY3VtZW50XG5Vc2VyU2NoZW1hLnByZSgnc2F2ZScsIGZ1bmN0aW9uKG5leHQpIHtcbiAgICB2YXIgdXNlckRvYyA9IHRoaXM7XG4gICAgaWYgKHVzZXJEb2MuaXNNb2RpZmllZCgncGFzc3dvcmQnKSkge1xuICAgICAgICBiY3J5cHQuZ2VuU2FsdCgxMCwgZnVuY3Rpb24oZXJyLCBzYWx0KXtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGdlbmVyYXRlIFNhbHQnLCBlcnIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBiY3J5cHQuaGFzaCh1c2VyRG9jLnBhc3N3b3JkLCBzYWx0LCBmdW5jdGlvbihlcnIsIGhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZW5lcmF0ZSBIYXNoJywgZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJEb2MucGFzc3dvcmQgPSBoYXNoO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVUb2tlbih1c2VyRG9jLCBuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBnZW5lcmF0ZVRva2VuKHVzZXJEb2MsIG5leHQpO1xuICAgIH1cbn0pO1xuXG5jb25zdCBVc2VycyA9IG1vbmdvb3NlLm1vZGVsKCdVc2VycycsIFVzZXJTY2hlbWEpO1xuZXhwb3J0IGRlZmF1bHQgVXNlcnM7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmNyeXB0anNcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmFiZWwtcG9seWZpbGxcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN3aXRjaCwgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IEhvbWUgZnJvbSAnLi9wYWdlcy9jb21wb25lbnRzL0xvZ2luJztcbmltcG9ydCBSb3V0ZXMgZnJvbSAnLi9wYWdlcy9yb3V0ZXMvcm91dGVzJztcbmltcG9ydCB7U2VydmVyUm91dGVyfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Um91dGVzLz5cbiAgICAgICAgKTtcbiAgICB9XG59IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3Qtcm91dGVyXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImF4aW9zXCIpOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0Jyb3dzZXJSb3V0ZXIsIFN3aXRjaCwgUm91dGV9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IExvZ2luIGZyb20gJy4uL2NvbXBvbmVudHMvTG9naW4nO1xuaW1wb3J0IE5vdEZvdW5kIGZyb20gJy4uL2NvbXBvbmVudHMvTm90Rm91bmQnXG5pbXBvcnQgSG9tZSBmcm9tICcuLi9jb21wb25lbnRzL0hvbWUnO1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPScvbG9naW4nIGV4YWN0IHJlbmRlcj17KHByb3BzKSA9PiA8TG9naW4gey4uLnByb3BzfS8+fS8+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD0nLycgZXhhY3QgcmVuZGVyPXsocHJvcHMpID0+IDxMb2dpbiB7Li4ucHJvcHN9Lz59Lz5cbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPScvaG9tZScgZXhhY3QgcmVuZGVyPXsocHJvcHMpID0+IDxIb21lIHsuLi5wcm9wc30vPn0vPlxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9JyonIHJlbmRlcj17KHByb3BzKSA9PiA8Tm90Rm91bmQgey4uLnByb3BzfS8+fS8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICk7XG59IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVsbWV0IGZyb20gJ3JlYWN0LWhlbG1ldCc7XG5pbXBvcnQge05hdkxpbmt9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5jbGFzcyBOb3RGb3VuZCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGVhZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhlbG1ldD5cbiAgICAgICAgPHRpdGxlPlBhZ2UgTm90IEZvdW5kPC90aXRsZT5cbiAgICAgIDwvSGVsbWV0PlxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHt0aGlzLmhlYWQoKX1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJub3Rmb3VuZENvbnRhaW5lclwiPlxuICAgICAgICAgIDxoNSBjbGFzc05hbWU9XCJub3RGb3VuZFRleHQgZmIgdGV4dENlbnRlclwiPlNvcnJ5LCB0aGlzIHBhZ2UgZG9lcyBub3QgZXhpc3QhPC9oNT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPHVsIGNsYXNzTmFtZT1cIm5vdGZvdW5kVUwgdGV4dENlbnRlclwiPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJsdWVCdG5cIj5cbiAgICAgICAgICAgICAgPE5hdkxpbmsgdG89Jy9sb2dpbicgY2xhc3NOYW1lPVwid2hpdGVcIj4gTG9naW4gPC9OYXZMaW5rPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBOb3RGb3VuZDsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWxtZXQgZnJvbSAncmVhY3QtaGVsbWV0JztcbmltcG9ydCBOZXdFeHBlbnNlIGZyb20gJy4vTmV3RXhwZW5zZSc7XG5pbXBvcnQge2dldF9leHBlbnNlX2RhdGEsIGdldF9leHBlbnNlX3N1bW1hcnksIGdldFVzZXJJbmZvLCBsb2dvdXRVc2VyLCBkZWxldGVFeHBlbnNlRGF0ZX0gZnJvbSAnLi4vYXBpQ2FsbHMvQXBpQ2FsbHMnO1xuaW1wb3J0IHtNT05USCwgWUVBUiwgV0VFSywgTU9OVEhTTkFNRSwgTU9OVEhTTkFNRVNIT1JUfSBmcm9tICcuLi9jb25zdGFudHMvY29uc3RhbnRzJztcbmltcG9ydCBHcmFwaCBmcm9tICcuL0dyYXBoJztcbmltcG9ydCB7cmVuZGVyT3B0aW9ucywgZm9ybWF0RGF0ZX0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAnO1xuaW1wb3J0IHtQcm9tcHR9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb21lIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5sZWZ0TWVudUNsaWNrID0gdGhpcy5sZWZ0TWVudUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5uZXdFeHBlbnNlID0gdGhpcy5uZXdFeHBlbnNlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5uYXZpZ2F0ZVRvU2lnbkluID0gdGhpcy5uYXZpZ2F0ZVRvU2lnbkluLmJpbmQodGhpcyk7XG4gICAgdGhpcy5jYW5jZWxQb3B1cCA9IHRoaXMuY2FuY2VsUG9wdXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNvbmZpcm1Qb3B1cCA9IHRoaXMuY29uZmlybVBvcHVwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5kZWxldGVFeHBlbnNlID0gdGhpcy5kZWxldGVFeHBlbnNlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5lZGl0RXhwZW5zZSA9IHRoaXMuZWRpdEV4cGVuc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgYWN0aXZlVGFiOiBNT05USCxcbiAgICAgIHNob3dOZXdFeHBlbnNlOiBmYWxzZSxcbiAgICAgIHZpZXdNb3JlOiBmYWxzZSxcbiAgICAgIHdlZWtEYXRhOiB7fSxcbiAgICAgIG1vbnRoRGF0YToge30sXG4gICAgICB5ZWFyRGF0YToge30sXG4gICAgICBzZWxlY3RvcldXOiAnJyxcbiAgICAgIHNlbGVjdG9yTU06ICcnLFxuICAgICAgc2VsZWN0b3JZWTogJycsXG4gICAgICBhY3RpdmVGaWx0ZXI6ICdzcGVudFJhdGUnXG4gICAgfVxuICAgIHRoaXMudmlld2VkTW9yZSA9IHt9O1xuICAgIHRoaXMudXNlckluZm8oKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZ2V0RXhwZW5zZSgpO1xuICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkoKTtcbiAgICB0aGlzLnVwZGF0ZVRvZ2dsZXJDb250ZW50KCk7XG4gIH1cblxuICB1cGRhdGVUb2dnbGVyQ29udGVudCgpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFifSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gV0VFSykge1xuICAgICAgcmV0dXJuIHRoaXMuc3RhdGUud2Vla0RhdGE7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IE1PTlRIKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGF0ZS5tb250aERhdGE7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IFlFQVIpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLnllYXJEYXRhO1xuICAgIH1cbiAgfVxuXG4gIC8vIFRvIGdpdmUgdGhlIHByb3AgaW4gdGhlIHN0YXRlIHRvIGNoZWNrIGF2YWlsYWJpbGl0eSBvZiBkYXRhXG4gIGN1cnJlbnRUYWJEYXRhKCkge1xuICAgIGNvbnN0IHthY3RpdmVUYWJ9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAoYWN0aXZlVGFiID09PSBXRUVLKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGF0ZS53ZWVrRGF0YTtcbiAgICB9IGVsc2UgaWYgKGFjdGl2ZVRhYiA9PT0gTU9OVEgpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLm1vbnRoRGF0YTtcbiAgICB9IGVsc2UgaWYgKGFjdGl2ZVRhYiA9PT0gWUVBUikge1xuICAgICAgcmV0dXJuIHRoaXMuc3RhdGUueWVhckRhdGE7XG4gICAgfVxuICB9XG5cbiAgZmluZEN1cnJlbnREYXRhUHJvcCgpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFifSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gV0VFSykge1xuICAgICAgcmV0dXJuICd3ZWVrRGF0YSc7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IE1PTlRIKSB7XG4gICAgICByZXR1cm4gJ21vbnRoRGF0YSc7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IFlFQVIpIHtcbiAgICAgIHJldHVybiAneWVhckRhdGEnO1xuICAgIH1cbiAgfVxuXG4gIGdldFBhcmFtcyh0b2dnbGVWYWwpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFiOiB0YWIsIGFjdGl2ZUZpbHRlcn0gPSB0aGlzLnN0YXRlO1xuICAgIGxldCB7ZGQsIG1tLCB5eSwgd3d9ID0gdGhpcy5jdXJyZW50VGFiRGF0YSgpO1xuXG4gICAgY29uc3QgY3VyckRhdGUgPSAoeXkgJiYgdHlwZW9mKG1tKSAhPT0gJ3VuZGVmaW5lZCcgJiYgZGQpID8gbmV3IERhdGUoeXksIG1tLCBkZCkgOiBuZXcgRGF0ZSgpO1xuICAgIGxldCBtb250aCA9IGN1cnJEYXRlLmdldE1vbnRoKCk7XG4gICAgbGV0IGRvdyA9IGN1cnJEYXRlLmdldERheSgpO1xuICAgIGxldCBkYXRlID0gY3VyckRhdGUuZ2V0RGF0ZSgpO1xuICAgIGxldCB5ZWFyID0gY3VyckRhdGUuZ2V0RnVsbFllYXIoKTtcblxuICAgIGlmICghd3cpIHtcbiAgICAgIGNvbnN0IGZpcnN0RGF5b2ZNb250aCA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKS5nZXREYXkoKTtcbiAgICAgIHd3ID0gTWF0aC5jZWlsKChmaXJzdERheW9mTW9udGggKyBjdXJyRGF0ZS5nZXREYXRlKCkpIC8gNyk7XG4gICAgfVxuICAgIFxuICAgIGlmICh0aGlzLnN0YXRlLnNlbGVjdG9yV1cgJiYgdHlwZW9mKHRoaXMuc3RhdGUuc2VsZWN0b3JNTSkgIT09ICd1bmRlZmluZWQnICYmIHRoaXMuc3RhdGUuc2VsZWN0b3JZWSkge1xuICAgICAgeWVhciA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JZWSk7XG4gICAgICBtb250aCA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JNTSk7XG4gICAgICB3dyA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JXVyk7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHt0YWIsIG1tOiBtb250aCwgZG93LCB3dywgeXk6eWVhciwgZGQ6ZGF0ZSwgYWN0aXZlRmlsdGVyfTtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG5cbiAgdXNlckluZm8oKSB7XG4gICAgZ2V0VXNlckluZm8oKS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMuZGF0YSAmJiByZXMuZGF0YS51c2VySW5mbykge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXNlckluZm86IHJlcy5kYXRhLnVzZXJJbmZvfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm5hdmlnYXRlVG9TaWduSW4oKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLm5hdmlnYXRlVG9TaWduSW4oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldEV4cGVuc2VTdW1tYXJ5KGxvYWROZXdTdW1tYXJ5RGF0YSwgdG9nZ2xlVmFsKSB7XG4gICAgY29uc3QgcGFyYW1zID0gdGhpcy5nZXRQYXJhbXModG9nZ2xlVmFsKTtcbiAgICBjb25zdCBhY3RpdmVUYWJEYXRhID0gdGhpcy5maW5kQ3VycmVudERhdGFQcm9wKCk7XG5cbiAgICAvLyBpZiAoT2JqZWN0LmtleXModGhpcy5zdGF0ZVthY3RpdmVUYWJEYXRhXSkubGVuZ3RoID09PSAwIHx8IGxvYWROZXdTdW1tYXJ5RGF0YSkge1xuICAgICAgZ2V0X2V4cGVuc2Vfc3VtbWFyeShwYXJhbXMpLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7W2FjdGl2ZVRhYkRhdGFdIDogey4uLnRoaXMuc3RhdGVbYWN0aXZlVGFiRGF0YV0sIHBsb3REYXRhOiB7Li4ucmVzcC5kYXRhfX19KTtcbiAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBHZXQgRXhwZW5zZSBTdW1tYXJ5IERldGFpbHMnLCBlcnIpO1xuICAgICAgfSk7XG4gICAgLy8gfVxuICB9XG5cbiAgZ2V0RXhwZW5zZShsb2FkTmV3RXhwZW5zZURhdGEsIHRvZ2dsZVZhbCkge1xuICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuZ2V0UGFyYW1zKHRvZ2dsZVZhbCk7XG4gICAgY29uc3QgYWN0aXZlVGFiRGF0YSA9IHRoaXMuZmluZEN1cnJlbnREYXRhUHJvcCgpO1xuICAgIFxuICAgIC8vIGlmIChPYmplY3Qua2V5cyh0aGlzLnN0YXRlW2FjdGl2ZVRhYkRhdGFdKS5sZW5ndGggPT09IDAgfHwgbG9hZE5ld0V4cGVuc2VEYXRhKSB7XG4gICAgICBnZXRfZXhwZW5zZV9kYXRhKHBhcmFtcykudGhlbigocmVzcCkgPT4ge1xuICAgICAgICBjb25zdCB7ZXhwZW5zZUxpc3QsIGluY29tZUxpc3QsIHN0YW5kaW5nLCBzcGVudCwgd3csIHl5LCBtbSwgZGR9ID0gcmVzcC5kYXRhO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtbYWN0aXZlVGFiRGF0YV0gOiB7Li4udGhpcy5zdGF0ZVthY3RpdmVUYWJEYXRhXSwgZXhwZW5zZUxpc3QsIGluY29tZUxpc3QsIHN0YW5kaW5nLCBzcGVudCwgd3csIHl5LCBtbSxkZH0sIHNlbGVjdG9yTU06bW0sIHNlbGVjdG9yV1c6IHd3LCBzZWxlY3RvcllZOiB5eX0pO1xuICAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gR2V0IEV4cGVuc2UgRGV0YWlscycsIGVycik7XG4gICAgICAgfSk7XG4gICAgLy8gfVxuICB9XG5cbiAgY2hhbmdlRXhwZW5zZURheUZvcm1hdChhY3RpdmVUYWIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHthY3RpdmVUYWI6IGFjdGl2ZVRhYiwgdmlld01vcmU6IGZhbHNlfSwgKCkgPT4ge1xuICAgICAgdGhpcy5nZXRFeHBlbnNlKCk7XG4gICAgICB0aGlzLmdldEV4cGVuc2VTdW1tYXJ5KCk7XG4gICAgfSk7XG4gIH1cblxuICBsZWZ0TWVudUNsaWNrKCkge1xuICAgIHRoaXMucmVmcy5iYWNrRHJvcC5jbGFzc0xpc3QudG9nZ2xlKCdiYWNrRHJvcCcpO1xuICAgIHRoaXMucmVmcy5wb3B1cC5jbGFzc0xpc3QudG9nZ2xlKCdyaWdodDAnKTtcbiAgICBpZiAodGhpcy5yZWZzLm90aGVySGFsZkxhbmRpbmdUeHQpIHtcbiAgICAgIHRoaXMucmVmcy5maXJzdEhhbGZMYW5kaW5nVHh0LmNsYXNzTGlzdC50b2dnbGUoJ3NjYWxlOTAnKTtcbiAgICAgIHRoaXMucmVmcy5vdGhlckhhbGZMYW5kaW5nVHh0LmNsYXNzTGlzdC50b2dnbGUoJ3NjYWxlOTAnKTtcbiAgICB9XG4gICAgdGhpcy5yZWZzLmFkZEJ0bkNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdkbicpO1xuICAgIFxuICB9XG5cbiAgbmF2aWdhdGVUb1NpZ25JbigpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS51c2VySW5mbykge1xuICAgICAgbG9nb3V0VXNlcigpLnRoZW4oKCkgPT4ge1xuICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9sb2dpbic7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9sb2dpbic7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyTGVmdE1lbnVCYXIoKSB7XG4gICAgY29uc3Qge3VzZXJJbmZvfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZW51QmFyXCI+XG4gICAgICAgIDxkaXYgcmVmPVwicG9wdXBcImNsYXNzTmFtZT1cInBvcHVwIHppMiBcIiBvbkNsaWNrPXt0aGlzLmxlZnRNZW51Q2xpY2t9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZUJhciBpbi1ibCBmbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZW51LW9wdGlvblwiIG9uQ2xpY2s9e3RoaXMubmF2aWdhdGVUb1NpZ25Jbn0+eyghdXNlckluZm8gPyAnU2lnbiBJbicgOiAnTG9nb3V0Jyl9PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnUtb3B0aW9uXCI+PGEgc3R5bGU9e3tjb2xvcjogJyM3NTc1NzVjOSd9fSBocmVmPVwiaHR0cHM6Ly9kaGlsaXBrbXIuZ2l0aHViLmlvL21hdGVyaWFsaXplZFJlc3VtZS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5BYm91dCBNZTwvYT48L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgbmV3RXhwZW5zZSh2YWwsIHNhdmVTdWNjZXNzLCBlZGl0RXhwZW5zZVZhbCkge1xuICAgIGlmIChzYXZlU3VjY2Vzcykge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd05ld0V4cGVuc2U6IHZhbCwgZWRpdEV4cGVuc2U6IHR5cGVvZihlZGl0RXhwZW5zZVZhbCkgIT09ICd1bmRlZmluZWQnID8gZWRpdEV4cGVuc2VWYWwgOiB0aGlzLnN0YXRlLmVkaXRFeHBlbnNlLCB3ZWVrRGF0YToge30sIG1vbnRoRGF0YToge30sIHllYXJEYXRhOiB7fX0sICgpID0+IHtcbiAgICAgICAgdGhpcy5nZXRFeHBlbnNlKHNhdmVTdWNjZXNzKTtcbiAgICAgICAgdGhpcy5nZXRFeHBlbnNlU3VtbWFyeShzYXZlU3VjY2Vzcyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd05ld0V4cGVuc2U6IHZhbCwgZWRpdEV4cGVuc2U6IGVkaXRFeHBlbnNlVmFsfSk7XG4gICAgfVxuICB9XG5cbiAgY2FuY2VsUG9wdXAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1BvcHVwOiBmYWxzZSB9KTtcbiAgfVxuXG4gIGNvbmZpcm1Qb3B1cCgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtzaG93UG9wdXA6IGZhbHNlfSk7XG4gICAgZGVsZXRlRXhwZW5zZURhdGUoe2lkOiB0aGlzLnN0YXRlLmRlbGV0ZVRyYW5zYWN0aW9uT2JqLmlkfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzKSB7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZSh0cnVlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5nZXRFeHBlbnNlU3VtbWFyeSh0cnVlLCB0cnVlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGVkaXRFeHBlbnNlKG9iaikge1xuICAgIHRoaXMuc2V0U3RhdGUoe2VkaXRFeHBlbnNlOiB0cnVlLCBlZGl0VHJhbnNhY3Rpb25PYmo6b2JqfSk7XG4gIH1cblxuICBkZWxldGVFeHBlbnNlKG9iaikge1xuICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dQb3B1cDogdHJ1ZSwgZGVsZXRlVHJhbnNhY3Rpb25PYmo6b2JqfSk7XG4gIH1cblxuICBjbGlja1ZpZXdNb3JlKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe3ZpZXdNb3JlOiAhdGhpcy5zdGF0ZS52aWV3TW9yZX0pO1xuICAgIHRoaXMucmVmcy50cmFuc2FjdGVkQ2FyZC5zY3JvbGxUb3AgPSAwO1xuICB9XG5cbiAgcmVuZGVySW5uZXJUcmFuc2FjdGlvbmNhcmQoaGFzTGlzdERlZmluZWQpIHtcbiAgICBpZiAoIWhhc0xpc3REZWZpbmVkKSB7XG4gICAgICBjb25zdCBsb2FkZXIgPSBbXTtcbiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCAyOyBpKyspe1xuICAgICAgICBsb2FkZXIucHVzaChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBrZXk9eyd0cmFuc2FjdGlvbl90eXBlXycgKyBpfSBjbGFzc05hbWU9XCJ0cmFuc2FjdGVkQ2FyZElubmVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZElubmVyaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNhdF9wZXJjZW50IHByb2dyZXNzQmFyIGZsIG0wIG10MTBcIj48L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzQmFyIGJsIHRleHRDZW50ZXIgbXQzMFwiID5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZEJyZHJCdG1cIj48L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsb2FkZXI7XG4gICAgfVxuXG4gICAgY29uc3Qge2V4cGVuc2VMaXN0fSA9IHRoaXMuY3VycmVudFRhYkRhdGEoKTtcbiAgICByZXR1cm4gKFxuICAgICAgZXhwZW5zZUxpc3QudHJhbnNhY3Rpb25MaXN0Lm1hcCgodHJhbnNhY3Rpb24sIGluZGV4KSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLnZpZXdNb3JlIHx8IHRoaXMudmlld2VkTW9yZVt0aGlzLnN0YXRlLmFjdGl2ZVRhYl0gfHwgIXRoaXMuc3RhdGUudmlld01vcmUgJiYgaW5kZXggPCAyKSB7XG4gICAgICAgICAgaWYgKHRoaXMuc3RhdGUudmlld01vcmUpIHtcbiAgICAgICAgICAgIHRoaXMudmlld2VkTW9yZVt0aGlzLnN0YXRlLmFjdGl2ZVRhYl0gPSB0cnVlOyAvLyBUbyBub3QgcmVtb3ZlIGVsZW1lbnQgZnJvbSBET00gb24gY2xpY2tpbmcgdmlldyBNb3JlIGFnYWluXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGtleT17J3RyYW5zYWN0aW9uX3R5cGVfJyArIGluZGV4fSBjbGFzc05hbWU9XCJ0cmFuc2FjdGVkQ2FyZElubmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkSW5uZXJoZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdCB3MzMgaW4tYmwgdGxcIj57dHJhbnNhY3Rpb24uY2F0ZWdvcnl9PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdCB3MzMgaW4tYmwgdGNcIj57Zm9ybWF0RGF0ZSh0cmFuc2FjdGlvbi5kYXRlKX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2F0IHczMyBpbi1ibCB0clwiPlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIG9uQ2xpY2s9eygpID0+IHRoaXMuZWRpdEV4cGVuc2Uoey4uLnRyYW5zYWN0aW9ufSl9IGhlaWdodD1cIjE1cHhcIiB2aWV3Qm94PVwiMCAtMSA0NTAgNDAwXCIgd2lkdGg9XCIxNXB4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIm0zNzAuNTg5ODQ0IDI1MC45NzI2NTZjLTUuNTIzNDM4IDAtMTAgNC40NzY1NjMtMTAgMTB2ODguNzg5MDYzYy0uMDE5NTMyIDE2LjU2MjUtMTMuNDM3NSAyOS45ODQzNzUtMzAgMzBoLTI4MC41ODk4NDRjLTE2LjU2MjUtLjAxNTYyNS0yOS45ODA0NjktMTMuNDM3NS0zMC0zMHYtMjYwLjU4OTg0NGMuMDE5NTMxLTE2LjU1ODU5NCAxMy40Mzc1LTI5Ljk4MDQ2OSAzMC0zMGg4OC43ODkwNjJjNS41MjM0MzggMCAxMC00LjQ3NjU2MyAxMC0xMCAwLTUuNTE5NTMxLTQuNDc2NTYyLTEwLTEwLTEwaC04OC43ODkwNjJjLTI3LjYwMTU2Mi4wMzEyNS00OS45Njg3NSAyMi4zOTg0MzctNTAgNTB2MjYwLjU5Mzc1Yy4wMzEyNSAyNy42MDE1NjMgMjIuMzk4NDM4IDQ5Ljk2ODc1IDUwIDUwaDI4MC41ODk4NDRjMjcuNjAxNTYyLS4wMzEyNSA0OS45Njg3NS0yMi4zOTg0MzcgNTAtNTB2LTg4Ljc5Mjk2OWMwLTUuNTIzNDM3LTQuNDc2NTYzLTEwLTEwLTEwem0wIDBcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIm0zNzYuNjI4OTA2IDEzLjQ0MTQwNmMtMTcuNTc0MjE4LTE3LjU3NDIxOC00Ni4wNjY0MDYtMTcuNTc0MjE4LTYzLjY0MDYyNSAwbC0xNzguNDA2MjUgMTc4LjQwNjI1Yy0xLjIyMjY1NiAxLjIyMjY1Ni0yLjEwNTQ2OSAyLjczODI4Mi0yLjU2NjQwNiA0LjQwMjM0NGwtMjMuNDYwOTM3IDg0LjY5OTIxOWMtLjk2NDg0NCAzLjQ3MjY1Ni4wMTU2MjQgNy4xOTE0MDYgMi41NjI1IDkuNzQyMTg3IDIuNTUwNzgxIDIuNTQ2ODc1IDYuMjY5NTMxIDMuNTI3MzQ0IDkuNzQyMTg3IDIuNTY2NDA2bDg0LjY5OTIxOS0yMy40NjQ4NDNjMS42NjQwNjItLjQ2MDkzOCAzLjE3OTY4Ny0xLjM0Mzc1IDQuNDAyMzQ0LTIuNTY2NDA3bDE3OC40MDIzNDMtMTc4LjQxMDE1NmMxNy41NDY4NzUtMTcuNTg1OTM3IDE3LjU0Njg3NS00Ni4wNTQ2ODcgMC02My42NDA2MjV6bS0yMjAuMjU3ODEyIDE4NC45MDYyNSAxNDYuMDExNzE4LTE0Ni4wMTU2MjUgNDcuMDg5ODQ0IDQ3LjA4OTg0NC0xNDYuMDE1NjI1IDE0Ni4wMTU2MjV6bS05LjQwNjI1IDE4Ljg3NSAzNy42MjEwOTQgMzcuNjI1LTUyLjAzOTA2MyAxNC40MTc5Njl6bTIyNy4yNTc4MTItMTQyLjU0Njg3NS0xMC42MDU0NjggMTAuNjA1NDY5LTQ3LjA5Mzc1LTQ3LjA5Mzc1IDEwLjYwOTM3NC0xMC42MDU0NjljOS43NjE3MTktOS43NjE3MTkgMjUuNTg5ODQ0LTkuNzYxNzE5IDM1LjM1MTU2MyAwbDExLjczODI4MSAxMS43MzQzNzVjOS43NDYwOTQgOS43NzM0MzggOS43NDYwOTQgMjUuNTg5ODQ0IDAgMzUuMzU5Mzc1em0wIDBcIi8+XG4gICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzc0JhciBibCB0ZXh0Q2VudGVyIG1hcmdpblQyNVwiID5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlsbGVkXCIgc3R5bGU9IHt7bWF4V2lkdGg6IHRyYW5zYWN0aW9uLnBlcmNlbnQgKyAnJSd9fT5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZFIxNSBwYWRMMTAgY2F0IHczMyBpbi1ibCB0bFwiPnsn4oK5Jyt0cmFuc2FjdGlvbi5hbW91bnR9XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2F0IHczMyBpbi1ibCB0Y1wiPlxuICAgICAgICAgICAgICAgICAgICB7dHJhbnNhY3Rpb24ucGVyY2VudCArICcgJSd9XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFkUjE1IGNhdCB3MzMgaW4tYmwgdHJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHN2ZyBvbkNsaWNrPXsoKSA9PiB0aGlzLmRlbGV0ZUV4cGVuc2Uoe2lkOiB0cmFuc2FjdGlvbi5pZH0pfSBmaWxsPVwiI2EyMDQwNFwiIGhlaWdodD1cIjE1cHhcIiB2aWV3Qm94PVwiLTQwIDAgNDUwIDQwMFwiIHdpZHRoPVwiMTVweFwiID5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwibTIzMi4zOTg0MzggMTU0LjcwMzEyNWMtNS41MjM0MzggMC0xMCA0LjQ3NjU2My0xMCAxMHYxODljMCA1LjUxOTUzMSA0LjQ3NjU2MiAxMCAxMCAxMCA1LjUyMzQzNyAwIDEwLTQuNDgwNDY5IDEwLTEwdi0xODljMC01LjUyMzQzNy00LjQ3NjU2My0xMC0xMC0xMHptMCAwXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJtMTE0LjM5ODQzOCAxNTQuNzAzMTI1Yy01LjUyMzQzOCAwLTEwIDQuNDc2NTYzLTEwIDEwdjE4OWMwIDUuNTE5NTMxIDQuNDc2NTYyIDEwIDEwIDEwIDUuNTIzNDM3IDAgMTAtNC40ODA0NjkgMTAtMTB2LTE4OWMwLTUuNTIzNDM3LTQuNDc2NTYzLTEwLTEwLTEwem0wIDBcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIm0yOC4zOTg0MzggMTI3LjEyMTA5NHYyNDYuMzc4OTA2YzAgMTQuNTYyNSA1LjMzOTg0MyAyOC4yMzgyODEgMTQuNjY3OTY4IDM4LjA1MDc4MSA5LjI4NTE1NiA5LjgzOTg0NCAyMi4yMDcwMzIgMTUuNDI1NzgxIDM1LjczMDQ2OSAxNS40NDkyMTloMTg5LjIwMzEyNWMxMy41MjczNDQtLjAyMzQzOCAyNi40NDkyMTktNS42MDkzNzUgMzUuNzMwNDY5LTE1LjQ0OTIxOSA5LjMyODEyNS05LjgxMjUgMTQuNjY3OTY5LTIzLjQ4ODI4MSAxNC42Njc5NjktMzguMDUwNzgxdi0yNDYuMzc4OTA2YzE4LjU0Mjk2OC00LjkyMTg3NSAzMC41NTg1OTMtMjIuODM1OTM4IDI4LjA3ODEyNC00MS44NjMyODItMi40ODQzNzQtMTkuMDIzNDM3LTE4LjY5MTQwNi0zMy4yNTM5MDYtMzcuODc4OTA2LTMzLjI1NzgxMmgtNTEuMTk5MjE4di0xMi41Yy4wNTg1OTMtMTAuNTExNzE5LTQuMDk3NjU3LTIwLjYwNTQ2OS0xMS41MzkwNjMtMjguMDMxMjUtNy40NDE0MDYtNy40MjE4NzUtMTcuNTUwNzgxLTExLjU1NDY4NzUtMjguMDYyNS0xMS40Njg3NWgtODguNzk2ODc1Yy0xMC41MTE3MTktLjA4NTkzNzUtMjAuNjIxMDk0IDQuMDQ2ODc1LTI4LjA2MjUgMTEuNDY4NzUtNy40NDE0MDYgNy40MjU3ODEtMTEuNTk3NjU2IDE3LjUxOTUzMS0xMS41MzkwNjIgMjguMDMxMjV2MTIuNWgtNTEuMTk5MjE5Yy0xOS4xODc1LjAwMzkwNi0zNS4zOTQ1MzEgMTQuMjM0Mzc1LTM3Ljg3ODkwNyAzMy4yNTc4MTItMi40ODA0NjggMTkuMDI3MzQ0IDkuNTM1MTU3IDM2Ljk0MTQwNyAyOC4wNzgxMjYgNDEuODYzMjgyem0yMzkuNjAxNTYyIDI3OS44Nzg5MDZoLTE4OS4yMDMxMjVjLTE3LjA5NzY1NiAwLTMwLjM5ODQzNy0xNC42ODc1LTMwLjM5ODQzNy0zMy41di0yNDUuNWgyNTB2MjQ1LjVjMCAxOC44MTI1LTEzLjMwMDc4MiAzMy41LTMwLjM5ODQzOCAzMy41em0tMTU4LjYwMTU2Mi0zNjcuNWMtLjA2NjQwNy01LjIwNzAzMSAxLjk4MDQ2OC0xMC4yMTg3NSA1LjY3NTc4MS0xMy44OTQ1MzEgMy42OTE0MDYtMy42NzU3ODEgOC43MTQ4NDMtNS42OTUzMTMgMTMuOTI1NzgxLTUuNjA1NDY5aDg4Ljc5Njg3NWM1LjIxMDkzNy0uMDg5ODQ0IDEwLjIzNDM3NSAxLjkyOTY4OCAxMy45MjU3ODEgNS42MDU0NjkgMy42OTUzMTMgMy42NzE4NzUgNS43NDIxODggOC42ODc1IDUuNjc1NzgyIDEzLjg5NDUzMXYxMi41aC0xMjh6bS03MS4xOTkyMTkgMzIuNWgyNzAuMzk4NDM3YzkuOTQxNDA2IDAgMTggOC4wNTg1OTQgMTggMThzLTguMDU4NTk0IDE4LTE4IDE4aC0yNzAuMzk4NDM3Yy05Ljk0MTQwNyAwLTE4LTguMDU4NTk0LTE4LTE4czguMDU4NTkzLTE4IDE4LTE4em0wIDBcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIm0xNzMuMzk4NDM4IDE1NC43MDMxMjVjLTUuNTIzNDM4IDAtMTAgNC40NzY1NjMtMTAgMTB2MTg5YzAgNS41MTk1MzEgNC40NzY1NjIgMTAgMTAgMTAgNS41MjM0MzcgMCAxMC00LjQ4MDQ2OSAxMC0xMHYtMTg5YzAtNS41MjM0MzctNC40NzY1NjMtMTAtMTAtMTB6bTAgMFwiLz5cbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZEJyZHJCdG1cIj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICk7XG4gIH1cblxuICBjaGFuZ2VGaWx0ZXIodHlwZSkge1xuICAgIGlmICh0eXBlID09PSAnZGF0ZScpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2FjdGl2ZUZpbHRlcjogJ2RhdGUnfSwgKCkgPT4ge1xuICAgICAgICB0aGlzLmdldEV4cGVuc2UodHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkodHJ1ZSwgdHJ1ZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdzcGVudFJhdGUnKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHthY3RpdmVGaWx0ZXI6ICdzcGVudFJhdGUnfSwgKCkgPT4ge1xuICAgICAgICB0aGlzLmdldEV4cGVuc2UodHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkodHJ1ZSwgdHJ1ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXRUcmFuc2FjdGlvbkNhcmQoKSB7XG4gICAgY29uc3QgY3VycmVudFRhYkRhdGEgPSB0aGlzLmN1cnJlbnRUYWJEYXRhKCk7XG4gICAgY29uc3Qge2FjdGl2ZVRhYiwgdmlld01vcmUgPSBmYWxzZSwgdXNlckluZm8sIGFjdGl2ZUZpbHRlcn0gPSB0aGlzLnN0YXRlO1xuICAgIC8vIGNvbnN0IGhhc05vRGF0YSA9IGN1cnJlbnRUYWJEYXRhLmV4cGVuc2VMaXN0ICYmIE9iamVjdC5rZXlzKGN1cnJlbnRUYWJEYXRhLmV4cGVuc2VMaXN0KS5sZW5ndGggPT09IDA7XG4gICAgY29uc3QgaGFzTGlzdERlZmluZWQgPSBjdXJyZW50VGFiRGF0YS5leHBlbnNlTGlzdDsgLy8gVG8gZGV0ZXJtaW5lIGlmIHRoZSBjYWxsIGlzIGNvbXBsZXRlZFxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICB7LyogPGRpdj5cbiAgICAgICAgICAgIDxzcGFuPkRhdGU8L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj5QZXJjZW50YWdlPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PiAqL31cbiAgICAgICAgICA8ZGl2IHJlZj1cInRyYW5zYWN0ZWRDYXJkXCIgY2xhc3NOYW1lPXsndHJhbnNhY3RlZENhcmQgdHJhbnNpdGlvbjFhICcgKyAodmlld01vcmUgPyAnc2hvd0FsbFRyYW5zYWN0aW9uJyA6ICcnKX0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXIgbXQ1XCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17J3NvcnRUeXBlIHNvcnRUeXBlTGVmdCBmczE0ICcgKyAoYWN0aXZlRmlsdGVyID09PSAnc3BlbnRSYXRlJyA/ICcgbGVmdEFjdGl2ZVJpZ2h0ICcgOiAnJyl9IG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRmlsdGVyKCdzcGVudFJhdGUnKX0+U3BlbnQgUmF0ZTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXsnc29ydFR5cGUgc29ydFR5cGVSaWdodCBmczE0ICcgKyAoYWN0aXZlRmlsdGVyID09PSAnc3BlbnRSYXRlJyA/ICcgbGVmdEFjdGl2ZUxlZnQgJyA6ICdyaWdodEFjdGl2ZVJpZ2h0Jyl9IG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRmlsdGVyKCdkYXRlJyl9PkRhdGU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJhbnNhY3RTY3JvbGxlclwiPlxuICAgICAgICAgICAgICB7dHlwZW9mKGhhc0xpc3REZWZpbmVkKSAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LmtleXMoaGFzTGlzdERlZmluZWQpLmxlbmd0aCA9PT0gMD9cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXIgcGFkVDIwIG1oMTBwXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInR1IFwiIG9uQ2xpY2s9eygpID0+IHRoaXMubmV3RXhwZW5zZSh0cnVlKX0+QWRkIFRyYW5zYWN0aW9uIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgeyF1c2VySW5mbyAmJiA8ZGl2IGNsYXNzTmFtZT1cInBhZFQxMCBwYWRCMjBcIj48YSBocmVmPVwiL2xvZ2luXCI+PHNwYW4+U2lnbiBJbjwvc3Bhbj48L2E+IGZvciBQYXN0IFRyYW5zYWN0aW9uczwvZGl2Pn1cbiAgICAgICAgICAgICAgICA8L2Rpdj46XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICB7YWN0aXZlVGFiID09PSBXRUVLID8gdGhpcy5yZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZChoYXNMaXN0RGVmaW5lZCkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAge2FjdGl2ZVRhYiA9PT0gTU9OVEggPyB0aGlzLnJlbmRlcklubmVyVHJhbnNhY3Rpb25jYXJkKGhhc0xpc3REZWZpbmVkKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICB7YWN0aXZlVGFiID09PSBZRUFSID8gdGhpcy5yZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZChoYXNMaXN0RGVmaW5lZCkgOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvZGl2PiBcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmlld01vcmVBcnJvd1wiIG9uQ2xpY2s9eygpID0+IHRoaXMuY2xpY2tWaWV3TW9yZSgpfT5cbiAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPXt2aWV3TW9yZSA/ICdyb3RhdGVWaWV3TW9yZScgOiAnJ30gcmVmPVwic3ZnVmlld01vcmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICA8cGF0aCBkPVwiTTcuNDEgNy44NEwxMiAxMi40Mmw0LjU5LTQuNThMMTggOS4yNWwtNiA2LTYtNnpcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc1JlbFwiPlxuICAgICAgICAgICAgPGRpdiByZWY9XCJhZGRCdG5Db250YWluZXJcIiBjbGFzc05hbWU9eydhZGRCdG5Db250YWluZXIgJ30+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYWRkQnRuIHRoZW1lQmdcIiBvbkNsaWNrPXsoKSA9PiB0aGlzLm5ld0V4cGVuc2UodHJ1ZSl9PiArIDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICB9XG4gIGdldEN1cnJlbnREYXRlKCkge1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IGN1cnJNb250aCA9IE1PTlRIU05BTUVbZGF0ZS5nZXRNb250aCgpXTtcbiAgICBjb25zdCBjdXJyRGF0ZSA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgIHJldHVybiBjdXJyRGF0ZSArICcgJyArIGN1cnJNb250aCArICcgJyArIGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgfVxuICBnZXRUb2dnbGVySGVhZGVyKCkge1xuICAgIGNvbnN0IHthY3RpdmVUYWJ9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7bW0sIHl5ICwgd3d9ID0gdGhpcy5jdXJyZW50VGFiRGF0YSgpO1xuICAgIGxldCB0b2dnbGVySGVhZGVyID0gJyc7XG4gICAgbGV0IGlzUHJldkRpc2FibGVkID0gZmFsc2U7XG4gICAgbGV0IGlzTmV4dERpc2FibGVkID0gZmFsc2U7XG5cbiAgICBpZiAoYWN0aXZlVGFiID09PSBNT05USCkge1xuICAgICAgdG9nZ2xlckhlYWRlciA9ICB0eXBlb2YobW0pICE9PSAndW5kZWZpbmVkJyA/IE1PTlRIU05BTUVbbW1dIDogJy0tLS0nO1xuICAgICAgaXNQcmV2RGlzYWJsZWQgPSBtbSA9PT0gMCA/IHRydWUgOiBmYWxzZTtcbiAgICAgIGlzTmV4dERpc2FibGVkID0gbW0gPT09IDExID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoYWN0aXZlVGFiID09PSBXRUVLKSB7XG4gICAgICB0b2dnbGVySGVhZGVyID0gIHd3ID8gKCdXZWVrICcgKyAgd3cpIDogJy0tLS0nO1xuICAgICAgaXNQcmV2RGlzYWJsZWQgPSB3dyA9PT0gMSA/IHRydWUgOiBmYWxzZTtcbiAgICAgIGlzTmV4dERpc2FibGVkID0gd3cgPT09IDUgPyB0cnVlIDogZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRvZ2dsZXJIZWFkZXIgPSB5eSA/IHl5IDogJy0tLS0nO1xuICAgICAgaXNOZXh0RGlzYWJsZWQgPSB5eSA9PT0gMjAxOCA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge3RvZ2dsZXJIZWFkZXIsIGlzUHJldkRpc2FibGVkLCBpc05leHREaXNhYmxlZH1cbiAgfVxuXG4gIHRvZ2dsZVR5cGUodHlwZSwgdmFsKSB7XG4gICAgbGV0IG9ialRvQ2hhbmdlID0ge307XG4gICAgaWYgKHR5cGUgPT09IFdFRUspIHtcbiAgICAgIG9ialRvQ2hhbmdlID0ge3NlbGVjdG9yV1c6IHZhbH07XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBNT05USCkge1xuICAgICAgb2JqVG9DaGFuZ2UgPSB7c2VsZWN0b3JNTTogdmFsfTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFlFQVIpIHtcbiAgICAgIG9ialRvQ2hhbmdlID0ge3NlbGVjdG9yWVk6IHZhbH07XG4gICAgfVxuICAgIHRoaXMuc2V0U3RhdGUoey4uLm9ialRvQ2hhbmdlfSwgKCkgPT4ge1xuICAgICAgdGhpcy5nZXRFeHBlbnNlKHRydWUsIHRydWUpO1xuICAgICAgdGhpcy5nZXRFeHBlbnNlU3VtbWFyeSh0cnVlLCB0cnVlKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFiLCBzaG93TmV3RXhwZW5zZSwgdmlld01vcmUgPSBmYWxzZSwgZWRpdEV4cGVuc2UsIGVkaXRUcmFuc2FjdGlvbk9ian0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHtzdGFuZGluZyA9IHVuZGVmaW5lZCwgc3BlbnQgPSB1bmRlZmluZWQsIHBsb3REYXRhID0gdW5kZWZpbmVkLCBpbmNvbWVMaXN0ID0gdW5kZWZpbmVkfSA9IHRoaXMuY3VycmVudFRhYkRhdGEoKTtcbiAgICBjb25zdCB7dG9nZ2xlckhlYWRlciwgaXNQcmV2RGlzYWJsZWQsIGlzTmV4dERpc2FibGVkfSA9IHRoaXMuZ2V0VG9nZ2xlckhlYWRlcigpO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICA8UHJvbXB0IG1lc3NhZ2U9eygpID0+IFwiR29pbmcgYmFjayB3aWxsIExvZyB5b3Ugb3V0LlwifT48L1Byb21wdD5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2IHJlZj1cImJhY2tEcm9wXCIgY2xhc3NOYW1lPXsndHJhbnNpdGlvbjJhIHppMSAnICsgKChzaG93TmV3RXhwZW5zZSB8fCBlZGl0RXhwZW5zZSkgPyAnYmFja0Ryb3AnIDogJycpfSBvbkNsaWNrPXsoKSA9PiB0aGlzLm5ld0V4cGVuc2UoZmFsc2UpfT48L2Rpdj5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJMZWZ0TWVudUJhcigpfVxuICAgICAgICAgIDxkaXYgcmVmPVwibWFpbkNvbnRlbnRcIiBjbGFzc05hbWU9XCJtYWluQ29udGVudFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgPGRpdiByZWY9XCJmaXJzdEhhbGZMYW5kaW5nVHh0XCIgY2xhc3NOYW1lPVwidHJhbnNpdGlvbjBfNSBmaXJzdC1oYWxmLWxhbmRpbmdcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0YW5kaW5nXCI+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJsZWZ0LW1lbnUtY29udGFpbmVyXCIgb25DbGljaz17dGhpcy5sZWZ0TWVudUNsaWNrfT48aW1nIGNsYXNzTmFtZT1cImxlZnQtbWVudVwiIHNyYz1cIi9pbWcvbWVudS5zdmdcIi8+PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmYiBmMTFcIj5DVVJSRU5UIEJBTEFOQ0U8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImYxOFwiPuKCuSA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInN0YW5kaW5nQW10XCI+eyh0eXBlb2Yoc3RhbmRpbmcpICE9PSAndW5kZWZpbmVkJyA/IHN0YW5kaW5nIDogJzAnKX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dENlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuIGNsYXNzTmFtZT1cImYxMVwiPnt0aGlzLmdldEN1cnJlbnREYXRlKCl9PC9zcGFuPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJleHBlbnNlRGF5c0J0biB3ODUgbTEwYVwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbi1ibCB3MzNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy50b2dnbGVUeXBlKFdFRUssIGUudGFyZ2V0LnZhbHVlKX0gaWQ9XCJ3ZWVrU2VsZWN0b3IgZGIgd2hpdGVcIiB2YWx1ZT17dGhpcy5zdGF0ZS5zZWxlY3RvcldXfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZW5kZXJPcHRpb25zKCd3ZWVrJyl9XG4gICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChXRUVLKX0gIGNsYXNzTmFtZT17J2RiIHdoaXRlIHBhZFQxMCAnICsgKGFjdGl2ZVRhYiA9PT0gV0VFSyA/ICdkYXlUeXBlQnRuLWFjdGl2ZScgOiAnJyl9IGh0bWxGb3I9XCJ3ZWVrU2VsZWN0b3JcIj5XZWVrPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17J3R5cGVCcmRyQnRtICcgKyAoYWN0aXZlVGFiID09PSBXRUVLID8gJ3c2MCc6ICcnKX0+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImluLWJsIHczM1wiPlxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy50b2dnbGVUeXBlKE1PTlRILCBlLnRhcmdldC52YWx1ZSl9IGlkPVwibW9udGhTZWxlY3RvciBkYiB3aGl0ZVwiIHZhbHVlPXt0aGlzLnN0YXRlLnNlbGVjdG9yTU19PlxuICAgICAgICAgICAgICAgICAgICAgIHtyZW5kZXJPcHRpb25zKCdtb250aCcpfVxuICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChNT05USCl9ICBjbGFzc05hbWU9eydkYiB3aGl0ZSBwYWRUMTAgJyArIChhY3RpdmVUYWIgPT09IE1PTlRIID8gJ2RheVR5cGVCdG4tYWN0aXZlJyA6ICcnKX0gaHRtbEZvcj1cIm1vbnRoU2VsZWN0b3JcIj5Nb250aDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsndHlwZUJyZHJCdG0gJyArIChhY3RpdmVUYWIgPT09IE1PTlRIID8gJ3c2MCc6ICcnKX0+PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW4tYmwgdzMzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLnRvZ2dsZVR5cGUoWUVBUiwgZS50YXJnZXQudmFsdWUpfSBpZD1cInllYXJTZWxlY3RvciBkYiB3aGl0ZVwiIHZhbHVlPXt0aGlzLnN0YXRlLnNlbGVjdG9yWVl9PlxuICAgICAgICAgICAgICAgICAgICB7cmVuZGVyT3B0aW9ucygneWVhcicpfVxuICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChZRUFSKX0gY2xhc3NOYW1lPXsnZGIgd2hpdGUgcGFkVDEwICcgKyAoYWN0aXZlVGFiID09PSBZRUFSID8gJ2RheVR5cGVCdG4tYWN0aXZlJyA6ICcnKX0gaHRtbEZvcj1cInllYXJTZWxlY3RvclwiPlllYXI8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17J3R5cGVCcmRyQnRtICcgKyAoYWN0aXZlVGFiID09PSBZRUFSID8gJ3c2MCc6ICcnKX0+PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwZW50SW5jb21lU2VjdGlvblwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbi1ibCBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbCBpbi1ibCBzcGVudEljb25cIiA+XG4gICAgICAgICAgICAgICAgICAgICAgPHN2ZyAgd2lkdGg9XCIyMVwiIGhlaWdodD1cIjE3XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMjQgMTJjMC02LjYyNy01LjM3My0xMi0xMi0xMnMtMTIgNS4zNzMtMTIgMTIgNS4zNzMgMTIgMTIgMTIgMTItNS4zNzMgMTItMTJ6bS0xNyAxaDR2LThoMnY4aDRsLTUgNi01LTZ6XCIvPjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWJIZWFkaW5nIGluLWJsXCI+eydTcGVudCA6IOKCuScgKyAodHlwZW9mKHNwZW50KSAhPT0gJ3VuZGVmaW5lZCc/IHNwZW50OiAnMCcpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW4tYmwgIFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsIGluLWJsIGluY29tZUljb24gXCIgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwiZmwgaW4tYmxcIiB3aWR0aD1cIjIxXCIgaGVpZ2h0PVwiMTdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0wIDEyYzAgNi42MjcgNS4zNzMgMTIgMTIgMTJzMTItNS4zNzMgMTItMTItNS4zNzMtMTItMTItMTItMTIgNS4zNzMtMTIgMTJ6bTE3LTFoLTR2OGgtMnYtOGgtNGw1LTYgNSA2elwiLz48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViSGVhZGluZyBpbi1ibFwiPnsnSW5jb21lIDog4oK5JyArIChpbmNvbWVMaXN0ICYmIHR5cGVvZihpbmNvbWVMaXN0LmFtb3VudCkgIT09ICd1bmRlZmluZWQnID8gaW5jb21lTGlzdC5hbW91bnQgOiAnMCcpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3RoaXMuZ2V0VHJhbnNhY3Rpb25DYXJkKCl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGxvdERhdGEgJiYgcGxvdERhdGEucGVyRGl2aXNpb25EYXRhICYmICBwbG90RGF0YS5wZXJEaXZpc2lvbkRhdGEubGVuZ3RoID4gMCA/XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3RoZXItaGFsZi1sYW5kaW5nIG10MTBcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHJlZj1cIm90aGVySGFsZkxhbmRpbmdUeHRcIiBjbGFzc05hbWU9XCJ0cmFuc2l0aW9uMF81IFwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0Q2VudGVyIHRyU3VtYXJ5SGVhZGluZyBmYlwiID5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+eydFeHBlbnNlIFRyZW5kcyd9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICB7YWN0aXZlVGFiID09PSBXRUVLID8gIDxHcmFwaCBwbG90RGF0YT17cGxvdERhdGF9IHRhYj17YWN0aXZlVGFifS8+IDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHthY3RpdmVUYWIgPT09IE1PTlRIID8gIDxHcmFwaCBwbG90RGF0YT17cGxvdERhdGF9IHRhYj17YWN0aXZlVGFifS8+IDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHthY3RpdmVUYWIgPT09IFlFQVIgPyAgPEdyYXBoIHBsb3REYXRhPXtwbG90RGF0YX0gdGFiPXthY3RpdmVUYWJ9Lz4gOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj4gOiBudWxsfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3Nob3dOZXdFeHBlbnNlID8gXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICA8TmV3RXhwZW5zZSBuZXdFeHBlbnNlPXt0aGlzLm5ld0V4cGVuc2V9Lz5cbiAgICAgICAgICA8L2Rpdj4gOiBudWxsfVxuICAgICAgICB7ZWRpdEV4cGVuc2UgP1xuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8TmV3RXhwZW5zZSBuZXdFeHBlbnNlPXt0aGlzLm5ld0V4cGVuc2V9IGVkaXRUcmFuc2FjdGlvbk9iaj17ZWRpdFRyYW5zYWN0aW9uT2JqfS8+XG4gICAgICAgICAgPC9kaXY+IDogbnVsbH1cbiAgICAgICAge3RoaXMuc3RhdGUuc2hvd1BvcHVwICYmIDxQb3B1cCBjYW5jZWxDYWxsYmFjaz17dGhpcy5jYW5jZWxQb3B1cH0gY29uZmlybUNhbGxiYWNrPXt0aGlzLmNvbmZpcm1Qb3B1cH0vPn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtuZXdfZXhwZW5zZSwgZWRpdF9leHBlbnNlfSBmcm9tICcuLi9hcGlDYWxscy9BcGlDYWxscyc7XG5pbXBvcnQge01PTlRIU05BTUVTSE9SVCwgVE9EQVksIFlFU1RFUkRBWX0gZnJvbSAnLi4vY29uc3RhbnRzL2NvbnN0YW50cyc7XG5pbXBvcnQge3JlbmRlck9wdGlvbnN9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV3RXhwZW5zZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc2VsZWN0VHlwZSA9IHRoaXMuc2VsZWN0VHlwZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc3VibWl0TmV3RXhwZW5zZSA9IHRoaXMuc3VibWl0TmV3RXhwZW5zZS5iaW5kKHRoaXMpO1xuICAgIGxldCAgYW1vdW50ID0gJyc7XG4gICAgbGV0ICBjYXRlZ29yeSA9ICcnO1xuICAgIGxldCAgZGF5ID0gJyc7XG4gICAgbGV0ICBtb250aCA9ICcnO1xuICAgIGxldCAgeWVhciA9ICcnO1xuICAgIGlmIChwcm9wcy5lZGl0VHJhbnNhY3Rpb25PYmopIHtcbiAgICAgIGFtb3VudCA9IHByb3BzLmVkaXRUcmFuc2FjdGlvbk9iai5hbW91bnQ7XG4gICAgICBjYXRlZ29yeSA9IHByb3BzLmVkaXRUcmFuc2FjdGlvbk9iai5jYXRlZ29yeTtcbiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUocHJvcHMuZWRpdFRyYW5zYWN0aW9uT2JqLmRhdGUpXG4gICAgICBkYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICAgIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICB9XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHR5cGU6ICdleHBlbnNlJyxcbiAgICAgIGFtb3VudDogYW1vdW50LFxuICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5LFxuICAgICAgZGF5OiBkYXksIFxuICAgICAgbW9udGg6IG1vbnRoLFxuICAgICAgeWVhcjogeWVhcixcbiAgICAgIGVycm9yOiB7fVxuICAgIH1cbiAgfVxuXG4gIHNlbGVjdFR5cGUodHlwZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe3R5cGU6IHR5cGV9KTtcbiAgfVxuXG4gIGNoYW5nZUFtb3VudCh2YWwpe1xuICAgIGlmICh2YWwgJiYgdGhpcy5zdGF0ZS5lcnJvci5hbW91bnQpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Ftb3VudDogdmFsLCBlcnJvcjp7fX0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHthbW91bnQ6IHZhbH0pO1xuICAgIH1cbiAgfVxuXG4gIGNoYW5nZUNhdGVnb3J5KHZhbCkge1xuICAgIGlmICh2YWwgJiYgdGhpcy5zdGF0ZS5lcnJvci5jYXRlZ29yeSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2F0ZWdvcnk6IHZhbCwgZXJyb3I6e319KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2F0ZWdvcnk6IHZhbH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZURhdGVFcnJvcigpIHtcbiAgICBjb25zdCB7ZGF5LCBtb250aCwgeWVhcn0gPSB0aGlzLnN0YXRlO1xuICAgIGlmICghKG5ldyBEYXRlKHBhcnNlSW50KHllYXIpLCBwYXJzZUludChtb250aCksIHBhcnNlSW50KGRheSkpID4gbmV3IERhdGUoKSkpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yOnt9fSk7XG4gICAgfVxuICB9XG5cbiAgY2hhbmdlRGF0ZSh2YWwpIHtcbiAgICBpZiAodmFsID09PSBUT0RBWSkge1xuICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdG9kYXlUYXA6dHJ1ZSwgeWVzdGVyZGF5VGFwOiBmYWxzZSwgZGF5OiBkYXRlLmdldERhdGUoKSwgbW9udGg6IGRhdGUuZ2V0TW9udGgoKSwgeWVhcjogZGF0ZS5nZXRGdWxsWWVhcigpfSwgKCkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZURhdGVFcnJvcigpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh2YWwgPT0gWUVTVEVSREFZKSB7XG4gICAgICBsZXQgY3VyckRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgbGV0IGRhdGUgPSBuZXcgRGF0ZShjdXJyRGF0ZS5zZXREYXRlKGN1cnJEYXRlLmdldERhdGUoKSAtIDEpKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyB0b2RheVRhcDogZmFsc2UsIHllc3RlcmRheVRhcDogdHJ1ZSwgZGF5OiBkYXRlLmdldERhdGUoKSwgbW9udGg6IGRhdGUuZ2V0TW9udGgoKSwgeWVhcjogZGF0ZS5nZXRGdWxsWWVhcigpfSwgKCkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZURhdGVFcnJvcigpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoey4uLnZhbH0sICgpID0+IHtcbiAgICAgICAgdGhpcy5yZW1vdmVEYXRlRXJyb3IoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGlzVmFsaWREYXRlKCkge1xuICAgIGNvbnN0IHtkYXksIG1vbnRoLCB5ZWFyfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgZGF0ZVJlZyA9IC9eXFxkezEsMn0kLztcbiAgICBjb25zdCBkYXRlUmVnWWVhciA9IC9eXFxkezR9JC87XG4gICAgaWYgKCFkYXRlUmVnLnRlc3QoZGF5KSB8fCAhZGF0ZVJlZy50ZXN0KG1vbnRoKSB8fCAhZGF0ZVJlZ1llYXIudGVzdCh5ZWFyKSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXJyb3I6IHtkYXRlOiAnUGxlYXNlIHByb3ZpZGUgYSBWYWxpZCBEYXRlISd9fSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGVsc2UgaWYgKG5ldyBEYXRlKHBhcnNlSW50KHllYXIpLCBwYXJzZUludChtb250aCksIHBhcnNlSW50KGRheSkpID4gbmV3IERhdGUoKSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXJyb3I6IHtkYXRlOiAnUGxlYXNlIGRvIG5vdCBQcm92aWRlIEZ1dHVyZSBEYXRlISd9fSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5kYXRlID0gbmV3IERhdGUocGFyc2VJbnQoeWVhciksIHBhcnNlSW50KG1vbnRoKSwgcGFyc2VJbnQoZGF5KSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgdmFsaWRhdGVQYXJhbXMoKSB7XG4gICAgdmFyIHJlZyA9IC9eXFxkKyQvO1xuICAgIGNvbnN0IHthbW91bnQsIGNhdGVnb3J5fSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKCFhbW91bnQgfHwgYW1vdW50IDw9IDApIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yOiB7YW1vdW50OiAnUGxlYXNlIHByb3ZpZGUgYSBWYWxpZCBBbW91bnQnfX0pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWNhdGVnb3J5KSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtlcnJvcjoge2NhdGVnb3J5OiAnUGxlYXNlIHByb3ZpZGUgYSBWYWxpZCBDYXRlZ29yeSd9fSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZSgpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHN1Ym1pdE5ld0V4cGVuc2UoKSB7XG4gICAgY29uc3Qge2Ftb3VudCwgZGF5LCBtb250aCwgeWVhciwgdHlwZSwgY2F0ZWdvcnl9ID0gdGhpcy5zdGF0ZTtcbiAgICB0aGlzLnNldFN0YXRlKHtkaXNhYmxlU3VibWl0OiB0cnVlfSk7XG4gICAgY29uc3QgaXNWYWxpZGF0aW9uU3VjY2VzcyA9IHRoaXMudmFsaWRhdGVQYXJhbXMoKTtcbiAgICBpZiAoaXNWYWxpZGF0aW9uU3VjY2Vzcykge1xuICAgICAgY29uc3QgZGF0ZSA9IHRoaXMuZGF0ZTtcbiAgICAgIGNvbnN0IG1tID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgY29uc3QgeXkgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICBjb25zdCBmaXJzdERheW9mTW9udGggPSBuZXcgRGF0ZSh5eSwgbW0sIDEpLmdldERheSgpO1xuICAgICAgY29uc3Qgd3cgPSBNYXRoLmNlaWwoKGZpcnN0RGF5b2ZNb250aCArIGRhdGUuZ2V0RGF0ZSgpKSAvIDcpO1xuICAgICAgY29uc3QgZG93ID0gZGF0ZS5nZXREYXkoKTtcbiAgICAgIGNvbnN0IGRkID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICBjb25zdCBwYXJhbXMgPSB7IGFtb3VudCwgdHlwZSwgZGF0ZSwgbW0sIHl5LCB3dywgZG93LCBkZCwgY2F0ZWdvcnl9O1xuICAgICAgaWYgKHRoaXMucHJvcHMuZWRpdFRyYW5zYWN0aW9uT2JqKSB7XG4gICAgICAgIHBhcmFtcy5pZCA9IHRoaXMucHJvcHMuZWRpdFRyYW5zYWN0aW9uT2JqLmlkO1xuICAgICAgICBlZGl0X2V4cGVuc2UocGFyYW1zKS50aGVuKChyZXNwKSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5uZXdFeHBlbnNlKGZhbHNlLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIEVkaXQgRXhwZW5zZScsZXJyKTtcbiAgICAgICAgICB0aGlzLnByb3BzLm5ld0V4cGVuc2UoZmFsc2UsIGZhbHNlLCBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3X2V4cGVuc2UocGFyYW1zKS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgIHRoaXMucHJvcHMubmV3RXhwZW5zZShmYWxzZSwgdHJ1ZSk7XG4gICAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGNyZWF0ZSBuZXcgRXhwZW5zZScsZXJyKTtcbiAgICAgICAgICB0aGlzLnByb3BzLm5ld0V4cGVuc2UoZmFsc2UsIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHt0eXBlLCBhbW91bnQsIGRheSwgbW9udGgsIHllYXIsIGNhdGVnb3J5LCBlcnJvciwgZGlzYWJsZVN1Ym1pdH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5ld0V4cGVuc2VDb250YWluZXIgemkyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXhwSW5jQnRucyB0ZXh0Q2VudGVyIG1UMjVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eyduZXdCdG4gJyArICh0eXBlID09PSAnZXhwZW5zZScgPyAnc2VsZWN0ZWRUeXBlJyA6ICcnKX0gIG9uQ2xpY2s9eygpID0+IHRoaXMuc2VsZWN0VHlwZSgnZXhwZW5zZScpfT5FeHBlbnNlPC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17J25ld0J0biAnICsgKHR5cGUgPT09ICdpbmNvbWUnID8gJ3NlbGVjdGVkVHlwZScgOiAnJyl9IG9uQ2xpY2s9eygpID0+IHRoaXMuc2VsZWN0VHlwZSgnaW5jb21lJyl9PkluY29tZTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW1vdW50SW5wdXQgbVQyNSBcIj5cbiAgICAgICAgICA8c3Bhbj7igrk8L3NwYW4+XG4gICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT17J3BhZEwxMCB3NzUgJyArIChlcnJvci5hbW91bnQgPyAncmVkQnJkckJ0bScgOiAnJyl9IGF1dG8tY29tcGxldGU9XCJvZmZcIiB0eXBlPVwidGV4dFwiIGlkPVwibmV3RXhwQW10XCIgcGxhY2Vob2xkZXI9XCJBbW91bnRcIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuY2hhbmdlQW1vdW50KGUudGFyZ2V0LnZhbHVlKX0gdmFsdWU9e2Ftb3VudH0vPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInJlcXVpcmVkQXNodGVyaXhcIj4gKiA8L3NwYW4+XG4gICAgICAgICAge2Vycm9yLmFtb3VudCA/IDxkaXYgY2xhc3NOYW1lPVwiZXJyb3JEaXZcIj57ZXJyb3IuYW1vdW50fTwvZGl2PiA6IG51bGx9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2ICBjbGFzc05hbWU9XCJjYXRlZ29yeUlucHV0IG1UMjUgXCI+XG4gICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT17J3BhZEwxMCB3NzUgJyArIChlcnJvci5jYXRlZ29yeSA/ICdyZWRCcmRyQnRtJyA6ICcnKX0gYXV0by1jb21wbGV0ZT1cIm9mZlwiICB0eXBlPVwidGV4dFwiIGlkPVwibmV3Q2F0ZWdBbXRcIiBwbGFjZWhvbGRlcj1cIkNhdGVnb3J5XCIgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLmNoYW5nZUNhdGVnb3J5KGUudGFyZ2V0LnZhbHVlKX0gdmFsdWU9e2NhdGVnb3J5fS8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVxdWlyZWRBc2h0ZXJpeFwiPiAqIDwvc3Bhbj5cbiAgICAgICAgICB7ZXJyb3IuY2F0ZWdvcnkgPyA8ZGl2IGNsYXNzTmFtZT1cImVycm9yRGl2XCI+e2Vycm9yLmNhdGVnb3J5fTwvZGl2PiA6IG51bGx9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwZW50RGF5IG1UMjUgXCI+XG4gICAgICAgICAgPHNlbGVjdCByZWY9XCJkYXlcIiBjbGFzc05hbWU9XCJ3MjAgXCIgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLmNoYW5nZURhdGUoe2RheTogZS50YXJnZXQudmFsdWV9KX0gdmFsdWU9e3RoaXMuc3RhdGUuZGF5fT57cmVuZGVyT3B0aW9ucygnZGF5Jyl9PC9zZWxlY3Q+XG4gICAgICAgICAgPHNlbGVjdCByZWY9XCJtb250aFwiIGNsYXNzTmFtZT1cIncyNSBcIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuY2hhbmdlRGF0ZSh7bW9udGg6IGUudGFyZ2V0LnZhbHVlfSl9IHZhbHVlPXt0aGlzLnN0YXRlLm1vbnRofT57cmVuZGVyT3B0aW9ucygnbW9udGgnKX08L3NlbGVjdD5cbiAgICAgICAgICA8c2VsZWN0IHJlZj1cInllYXJcIiBjbGFzc05hbWU9XCJ3MjAgXCIgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLmNoYW5nZURhdGUoe3llYXI6IGUudGFyZ2V0LnZhbHVlfSl9IHZhbHVlPXt0aGlzLnN0YXRlLnllYXJ9PntyZW5kZXJPcHRpb25zKCd5ZWFyJyl9PC9zZWxlY3Q+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdDIwXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydtMTAgJyArICh0aGlzLnN0YXRlLnRvZGF5VGFwID8gJ2FjdGl2ZVRhcE9wdGlvbiB0aGVtZUJnJzogJ3RhcE9wdGlvbiB0aGVtZUJyZHInKX0gb25DbGljaz17KCkgPT4gdGhpcy5jaGFuZ2VEYXRlKFRPREFZKX0+VG9kYXk8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydtMTAgJyArICh0aGlzLnN0YXRlLnllc3RlcmRheVRhcCA/ICdhY3RpdmVUYXBPcHRpb24gdGhlbWVCZyc6ICd0YXBPcHRpb24gdGhlbWVCcmRyJyl9ICBvbkNsaWNrPXsoKSA9PiB0aGlzLmNoYW5nZURhdGUoWUVTVEVSREFZKX0+WWVzdGVyZGF5PC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHtlcnJvci5kYXRlID8gPGRpdiBjbGFzc05hbWU9XCJtdDEwIGVycm9yRGl2XCI+e2Vycm9yLmRhdGV9PC9kaXY+IDogbnVsbH1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dENlbnRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsnc3VibWl0QnRuIHRoZW1lQmcgJyArIChkaXNhYmxlU3VibWl0ID8gJ2Rpc2FibGVCdG4nIDogJycpfSBvbkNsaWNrPXt0aGlzLnN1Ym1pdE5ld0V4cGVuc2V9PntkaXNhYmxlU3VibWl0ID8gJ0FkZGluZy4uLicgOiAnRG9uZSd9PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSIsIlxuY29uc3QgV0lEVEggPSAxODA7XG5jb25zdCBIRUlHSFQgPSAxMTU7XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtESVZJU0lPTkxFTkdUSCwgTUFYTEVOR1RIUEVSVEFCLCBNT05USFNOQU1FU0hPUlQsIE1PTlRILCBXRUVLLCBZRUFSLCBXRUVLTkFNRVNIT1JUfSBmcm9tICcuLi9jb25zdGFudHMvY29uc3RhbnRzJztcbmltcG9ydCB7YW1vdW50T25HcmFwaH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHcmFwaCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuZ2VuZXJhdGVTVkcgPSB0aGlzLmdlbmVyYXRlU1ZHLmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAod2luZG93ICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb25yZXNpemUnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgYWxlcnQoJ2F0dGFjaEV2ZW50IC0gcmVzaXplJyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZW5kZXJQb2ludHMoeENvb3JkaW5hdGVzLCB5Q29vcmRpbmF0ZXMsIGFtb3VudE9uQ29vcmRpbmF0ZXMpIHtcbiAgICBjb25zdCBwb2ludHNFbGVtZW50ID0gW107XG4gICAgY29uc3QgdGFiID0gdGhpcy5wcm9wcy50YWI7XG4gICAgbGV0IHRleHRJbmRleCA9IDA7XG4gICAgZm9yKGxldCBpbmRleCA9IDE7IGluZGV4IDwgeENvb3JkaW5hdGVzLmxlbmd0aCAtIDE7IGluZGV4KyspIHtcbiAgICAgIGxldCBwb2ludFRleHQgPSAnJztcbiAgICAgIGlmICh0YWIgPT09IFdFRUspIHtcbiAgICAgICAgcG9pbnRUZXh0ID0gV0VFS05BTUVTSE9SVFt0ZXh0SW5kZXgrK10udG9VcHBlckNhc2UoKTtcbiAgICAgIH0gZWxzZSBpZiAodGFiID09PSBZRUFSKSB7XG4gICAgICAgIHBvaW50VGV4dCA9IE1PTlRIU05BTUVTSE9SVFt0ZXh0SW5kZXgrK10udG9VcHBlckNhc2UoKTtcbiAgICAgIH0gZWxzZSBpZiAodGFiID09PSBNT05USCApIHtcbiAgICAgICAgaWYgKGluZGV4ICUgMiAhPT0gMCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHBvaW50VGV4dCA9IGluZGV4O1xuICAgICAgfVxuICAgICAgcG9pbnRzRWxlbWVudC5wdXNoKFxuICAgICAgICA8ZyBrZXk9eydncm91cF8nICsgaW5kZXh9PlxuICAgICAgICAgIDxhPlxuICAgICAgICAgIDx0ZXh0IGNsYXNzTmFtZT1cImZiXCIgeD17eENvb3JkaW5hdGVzW2luZGV4XX0gZmlsbD1cIiM3NTc1NzVcIiB5PXt5Q29vcmRpbmF0ZXNbaW5kZXhdIC0gNX0gZm9udFNpemU9XCI1XCIgdGV4dEFuY2hvcj1cIm1pZGRsZVwiPnthbW91bnRPbkdyYXBoKGFtb3VudE9uQ29vcmRpbmF0ZXNbaW5kZXhdKX08L3RleHQ+XG4gICAgICAgICAgPGNpcmNsZSBjeD17eENvb3JkaW5hdGVzW2luZGV4XX0gY3k9e3lDb29yZGluYXRlc1tpbmRleF19IHN0cm9rZT1cIiMwNzU3ZDBcIiBmaWxsPVwiIzA3NTdkMFwiIHI9XCIwLjVcIiBzdHJva2VXaWR0aD1cIjFcIj48L2NpcmNsZT5cbiAgICAgICAgICA8dGV4dCBjbGFzc05hbWU9XCJmYlwiIHg9e3hDb29yZGluYXRlc1tpbmRleF19IGZpbGw9XCIjNzU3NTc1XCIgeT17SEVJR0hUICsgN30gZm9udFNpemU9XCI1XCIgdGV4dEFuY2hvcj1cIm1pZGRsZVwiPntwb2ludFRleHR9PC90ZXh0PlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9nPlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvaW50c0VsZW1lbnQ7XG4gIH1cblxuICBnZW5lcmF0ZVNWRygpIHtcbiAgICBjb25zdCB7cGxvdERhdGEsIHRhYn0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHhDb29yZGluYXRlcyA9IFtdO1xuICAgIGNvbnN0IHlDb29yZGluYXRlcyA9IFtdO1xuICAgIGNvbnN0IGFtb3VudE9uQ29vcmRpbmF0ZXMgPSBbXTtcbiAgICBjb25zdCBsZW5ndGggPSBESVZJU0lPTkxFTkdUSFt0YWJdO1xuICAgIGNvbnN0IG1heExlbmcgPSBNQVhMRU5HVEhQRVJUQUJbdGFiXTtcbiAgICBjb25zdCBtYXhBbXQgPSBwbG90RGF0YS5tYXhBbW91bnQ7XG4gICAgY29uc3QgeENvb3JkaW5hdGVEaXZMZW5ndGggPSAoV0lEVEggLyBsZW5ndGgpO1xuICAgIGxldCBsYXN0RGl2aXNpb24gPSB0YWIgPT09IE1PTlRIID8gMCA6IC0xOyAvLyBCZWNhdXNlIHdlIHNob3cgb25seSBkYXRlcyBpbiBtb250aCBkaXZpc2lvbiBiZWdpbnMgd2l0aCAxIHNvIGxhc3Qgc2h1ZCBiZSAwIFxuXG4gICAgbGV0IHN0ciA9ICcnO1xuXG4gICAgLyogVG8gc3RhcnQgdGhlIGdyYXBoIGF0IHRoZSBMZWFzdCBQb2ludCAqL1xuICAgIHhDb29yZGluYXRlcy5wdXNoKDApO1xuICAgIHlDb29yZGluYXRlcy5wdXNoKEhFSUdIVCk7XG4gICAgYW1vdW50T25Db29yZGluYXRlcy5wdXNoKCcnKTtcbiAgICBwbG90RGF0YS5wZXJEaXZpc2lvbkRhdGEuZm9yRWFjaCgoZW50cnkpID0+IHtcbiAgICAgIHdoaWxlIChlbnRyeS5kaXZpc2lvbiA+IGxhc3REaXZpc2lvbikge1xuICAgICAgICBjb25zdCBsYXN0WCA9IHhDb29yZGluYXRlc1t4Q29vcmRpbmF0ZXMubGVuZ3RoIC0gMV07XG4gICAgICAgIHhDb29yZGluYXRlcy5wdXNoKChsYXN0WCArIHhDb29yZGluYXRlRGl2TGVuZ3RoKSk7XG4gICAgICAgIGlmIChlbnRyeS5kaXZpc2lvbiA9PT0gbGFzdERpdmlzaW9uICsgMSkge1xuICAgICAgICAgIGNvbnN0IHBlcmNlbnQgPSAoKGVudHJ5LmFtb3VudCAvIG1heEFtdCkgKiAxMDApO1xuICAgICAgICAgIHlDb29yZGluYXRlcy5wdXNoKEhFSUdIVCAtICgoSEVJR0hUIC8gMTAwKSAqIHBlcmNlbnQpKTtcbiAgICAgICAgICBhbW91bnRPbkNvb3JkaW5hdGVzLnB1c2goZW50cnkuYW1vdW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB5Q29vcmRpbmF0ZXMucHVzaChIRUlHSFQpO1xuICAgICAgICAgIGFtb3VudE9uQ29vcmRpbmF0ZXMucHVzaCgnJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdERpdmlzaW9uKys7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy8gdG8gcHVzaCB2YWx1ZXMgZm9yIHJlbWFpbmluZyBkYXlzXG4gICAgd2hpbGUobWF4TGVuZyA+IGxhc3REaXZpc2lvbikge1xuICAgICAgY29uc3QgbGFzdFggPSB4Q29vcmRpbmF0ZXNbeENvb3JkaW5hdGVzLmxlbmd0aCAtIDFdO1xuICAgICAgeENvb3JkaW5hdGVzLnB1c2goKGxhc3RYICsgeENvb3JkaW5hdGVEaXZMZW5ndGgpKTtcbiAgICAgIHlDb29yZGluYXRlcy5wdXNoKEhFSUdIVCk7XG4gICAgICBsYXN0RGl2aXNpb24rKztcbiAgICAgIGFtb3VudE9uQ29vcmRpbmF0ZXMucHVzaCgnJyk7XG4gICAgfVxuICAgIGNvbnN0IGxhc3RYID0geENvb3JkaW5hdGVzW3hDb29yZGluYXRlcy5sZW5ndGggLSAxXTtcbiAgICB4Q29vcmRpbmF0ZXMucHVzaCgobGFzdFggKyB4Q29vcmRpbmF0ZURpdkxlbmd0aCkpO1xuICAgIHlDb29yZGluYXRlcy5wdXNoKEhFSUdIVCk7XG4gICAgYW1vdW50T25Db29yZGluYXRlcy5wdXNoKCcnKTtcbiBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHhDb29yZGluYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyICs9ICcgJyArIHhDb29yZGluYXRlc1tpXSArICcsJyArIHlDb29yZGluYXRlc1tpXSArICcgJztcbiAgICB9XG4gICAgaWYgKHN0cikge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICB7LyogPHN2ZyB2aWV3Qm94PXsnLTUgLTEwICcgKyAoV0lEVEggKyAzNSkgKyAnICcgKyAoSEVJR0hUICsgMTUpfSBzdHlsZT17e21hcmdpbjogJzEwcHgnfX0+ICovfVxuICAgICAgICAgIDxzdmcgdmlld0JveD17KHdpbmRvdyAmJiB3aW5kb3cuc2NyZWVuLndpZHRoID4gNjAwID8gJy01MCAtMTAgMjg1IDIxMCcgOiAoJy0xNSAtMTUgMjIwIDE1MCcpKX0gc3R5bGU9e3ttYXJnaW46ICcxMHB4J319PlxuICAgICAgICAgICAgPHBvbHlsaW5lIHBvaW50cz17c3RyfSBjbGFzc05hbWU9XCJncmFwaFBsb3RMaW5lXCIgLz5cbiAgICAgICAgICAgIHt0aGlzLnJlbmRlclBvaW50cyh4Q29vcmRpbmF0ZXMsIHlDb29yZGluYXRlcywgYW1vdW50T25Db29yZGluYXRlcyl9XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuKFxuICAgICAgPGRpdj5cbiAgICAgICAge3RoaXMuZ2VuZXJhdGVTVkcoKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2NhbmNlbENhbGxiYWNrLCBjb25maXJtQ2FsbGJhY2t9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3B1cEJhY2tEcm9wXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9wdXBDb250YWluZXIgd2hpdGVCZ1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9wdXBIZWFkZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmIgZnMxNCBwYWRCMTAgdGV4dENlbnRlclwiPlxuICAgICAgICAgICAgICBEbyB5b3Ugd2FudCB0byBEZWxldGUgdGhpcyB0cmFuc2FjdGlvbj9cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0clwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5ld0J0biB3aGl0ZSB0aGVtZUJnIGluLWJsIHRyIG1mNSBmczEyXCIgb25DbGljaz17Y29uZmlybUNhbGxiYWNrfT5Db25maXJtPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmV3QnRuIHdoaXRlIHRoZW1lQmcgaW4tYmwgdHIgbWY1IGZzMTJcIiBvbkNsaWNrPXtjYW5jZWxDYWxsYmFja30+Q2FuY2VsPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cbiIsInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG5tb25nb29zZS5jb25uZWN0KHByb2Nlc3MuZW52Lk1PTkdPTEFCX1VSSSwgeyB1c2VNb25nb0NsaWVudDogdHJ1ZSB9KS50aGVuKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIERiJyk7XG59LChlKT0+IHtcbiAgICBjb25zb2xlLmxvZyhlKTtcbn0pO1xubW9kdWxlLmV4cG9ydHMgPSB7bW9uZ29vc2V9O1xuIiwiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCBhcHAgZnJvbSAnLi4vc2VydmVyJ1xuaW1wb3J0IEV4cGVuc2VzIGZyb20gJy4uL21vZGVscy9leHBlbnNlTW9kZWwnO1xuaW1wb3J0IFVzZXJzIGZyb20gJy4uL21vZGVscy91c2VyTW9kZWwnO1xuaW1wb3J0IHsgTU9OVEgsIFlFQVIsIFdFRUsgfSBmcm9tICcuLi8uLi9zcmMvcGFnZXMvY29uc3RhbnRzL2NvbnN0YW50cyc7XG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcblxuZXhwb3J0IGNvbnN0IHNpZ25VcCA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGNvbnN0IHsgdXNlcm5hbWUgPSAnJywgcGFzc3dvcmQgPSAnJywgZW1haWxJZCA9ICcnIH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgdmFyIHVzZXIgPSBuZXcgVXNlcnMoe1xuICAgICAgICBfaWQ6IG1vbmdvb3NlLlR5cGVzLk9iamVjdElkKCksXG4gICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgfSk7XG4gICAgVXNlcnMuZmluZCh7IHVzZXJuYW1lOiB1c2VybmFtZSB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYgKHJlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHsgZXJyb3I6IHRydWUsIG1zZzogJ1VzZXJuYW1lIGFscmVhZHkgRXhpc3RzJyB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHVzZXIuc2F2ZSgpLnRoZW4oKGRvYykgPT4ge1xuICAgICAgICAgICAgICAgIHJlcXVlc3Quc2Vzc2lvbi50b2tlbiA9IGRvYy50b2tlbjtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5zZW5kKHsgZXJyb3I6IGZhbHNlLCBtc2c6ICdTYXZlZCBTdWNjZXNzZnVsbHknIH0pO1xuICAgICAgICAgICAgfSwgKGUpID0+IHtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5zdGF0dXMoNTAwKS5zZW5kKGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCAoZSkgPT4ge1xuICAgICAgICByZXNwb25zZS5zZW5kKGUpO1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBzaWduSW4gPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCB7IHVzZXJuYW1lID0gJycsIHBhc3N3b3JkID0gJycsIGVtYWlsSWQgPSAnJyB9ID0gcmVxdWVzdC5ib2R5O1xuICAgIGNvbnNvbGUubG9nKHJlcXVlc3Quc2Vzc2lvbi51c2VyKTtcbiAgICBVc2Vycy5maW5kT25lKHsgdXNlcm5hbWU6IHVzZXJuYW1lIH0pLnRoZW4oKGRvYykgPT4ge1xuICAgICAgICBpZiAoZG9jKSB7XG4gICAgICAgICAgICBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgZG9jLnBhc3N3b3JkLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LnNlc3Npb24udG9rZW4gPSBkb2MudG9rZW47XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogZmFsc2UsIG1zZzogJ3N1Y2Nlc3MnIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogdHJ1ZSwgbXNnOiAnSW52YWxpZCBwYXNzd29yZCcgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHsgZXJyb3I6IHRydWUsIG1zZzogJ05vIHVzZXIgYWNjb3VudCBmb3VuZCcgfSk7XG4gICAgICAgIH1cbiAgICB9LCAoZSkgPT4ge1xuICAgICAgICByZXNwb25zZS5zZW5kKGUpO1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dvdXQgPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICByZXF1ZXN0LnNlc3Npb24udG9rZW4gPSBudWxsO1xuICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogZmFsc2UsIG1zZzogJ3N1Y2Nlc3MnIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFVzZXJJbmZvID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgaWYgKHJlcXVlc3Quc2Vzc2lvbi50b2tlbikge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcXVlc3Quc2Vzc2lvbi50b2tlbjtcbiAgICAgICAgVXNlcnMuZmluZE9uZSh7IHRva2VuOiB0b2tlbn0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJuYW1lID0gcmVzLnVzZXJuYW1lO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyB1c2VySW5mbzoge3VzZXJuYW1lOiB1c2VybmFtZX0gfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogdHJ1ZSwgbXNnOiAnTm8gdXNlciBhY2NvdW50IGZvdW5kJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKGUpID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoZSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlICB7XG4gICAgICAgIHJlc3BvbnNlLnNlbmQoMjAwKS5zZW5kKHtlcnJvcjogdHJ1ZX0pO1xuICAgIH1cbiAgIFxufTtcblxuXG5leHBvcnQgY29uc3QgbmV3RXhwZW5zZSA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGxldCB7IGFtb3VudCwgZGF0ZSB9ID0gcmVxdWVzdC5ib2R5O1xuICAgIGNvbnN0IHsgIHd3LCBkb3csIG1tLCB5eSwgZGQsIHR5cGUsIGNhdGVnb3J5IH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgYW1vdW50ID0gcGFyc2VJbnQoYW1vdW50KTtcbiAgICBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgY29uc3QgbmV3RXhwZW5zZSA9IHsgYW1vdW50LCBjYXRlZ29yeSwgZGF0ZSwgdHlwZSwgd3csIGRvdywgbW0sIHl5LCBkZCB9O1xuICAgIHZhciBuZXdFeHBlbnNlSW5zdGFuY2UgPSBuZXcgRXhwZW5zZXMoe1xuICAgICAgICB0b2tlbjogcmVxdWVzdC5zZXNzaW9uLnRva2VuLFxuICAgICAgICAuLi5uZXdFeHBlbnNlXG4gICAgfSk7XG4gICAgbmV3RXhwZW5zZUluc3RhbmNlLnNhdmUoKS50aGVuKChkb2MpID0+IHtcbiAgICAgICAgcmVzcG9uc2Uuc2VuZChkb2MpO1xuICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBzYXZlIG5ldyBFeHBlbnNlJywgZXJyKTtcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEV4cGVuc2VEYXRhID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LnNlc3Npb24udG9rZW4gPyByZXF1ZXN0LnNlc3Npb24udG9rZW4gOiAnJztcbiAgICBjb25zdCB7YWN0aXZlRmlsdGVyfSA9IHJlcXVlc3QuYm9keTtcbiAgICBmdW5jdGlvbiBleHBlbnNlRGF0ZVJlc3BvbmRlcihlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uZC5zZW5kKDUwMCkuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGV4cGVuc2VMaXN0ID0ge30sIGluY29tZUxpc3Q9e307XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhkYXRhKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhW2tleV0udHlwZSA9PT0gJ2V4cGVuc2UnKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cGVuc2VMaXN0ID0gZGF0YVtrZXldO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YVtrZXldLnR5cGUgPT09ICdpbmNvbWUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGluY29tZUxpc3QgPSBkYXRhW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgc3BlbnQsIHN0YW5kaW5nO1xuICAgICAgICAgICAgaWYgKGV4cGVuc2VMaXN0ICYmIGV4cGVuc2VMaXN0LnRyYW5zYWN0aW9uTGlzdCkge1xuICAgICAgICAgICAgICAgIGV4cGVuc2VMaXN0LnRyYW5zYWN0aW9uTGlzdC5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50ID0gdHJhbnNhY3Rpb24uYW1vdW50IC8gKGV4cGVuc2VMaXN0LmFtb3VudCAvIDEwMCk7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLnBlcmNlbnQgPSBNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApIC8gMTAwO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHNwZW50ID0gZXhwZW5zZUxpc3QuYW1vdW50O1xuICAgICAgICAgICAgfSBlbHNlICB7XG4gICAgICAgICAgICAgICAgc3BlbnQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluY29tZUxpc3QgJiYgaW5jb21lTGlzdC50cmFuc2FjdGlvbkxpc3QpIHtcbiAgICAgICAgICAgICAgICBpbmNvbWVMaXN0LnRyYW5zYWN0aW9uTGlzdC5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50ID0gdHJhbnNhY3Rpb24uYW1vdW50IC8gKGluY29tZUxpc3QuYW1vdW50IC8gMTAwKTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb24ucGVyY2VudCA9IE1hdGgucm91bmQocGVyY2VudCAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgc3RhbmRpbmcgPSBpbmNvbWVMaXN0LmFtb3VudCAtIHNwZW50O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdGFuZGluZyA9IDAgLSBzcGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgeXksIG1tLCB3dywgZGR9ID0gcmVxdWVzdC5ib2R5XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHsgZGQ6ZGQsIG1tOiBtbSwgeXk6IHl5LCB3dzogd3csIGV4cGVuc2VMaXN0OiBleHBlbnNlTGlzdCwgaW5jb21lTGlzdDogaW5jb21lTGlzdCwgc3BlbnQ6IHNwZW50LCBzdGFuZGluZzogc3RhbmRpbmcgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBRdWVyaWVzIHN0YXJ0XG4gICAgY29uc3QgZ3JvdXAxID0ge1xuICAgICAgICAkZ3JvdXA6IHtcbiAgICAgICAgICAgIF9pZDogeyBjYXRlZ29yeTogJyRjYXRlZ29yeScsIHR5cGU6ICckdHlwZScgfSxcbiAgICAgICAgICAgIHR5cGU6IHsgJyRmaXJzdCc6ICckdHlwZScgfSxcbiAgICAgICAgICAgIGNhdGVnb3J5OiB7ICckZmlyc3QnOiAnJGNhdGVnb3J5JyB9LFxuICAgICAgICAgICAgZGF0ZTogeyAnJGZpcnN0JzogJyRkYXRlJyB9LFxuICAgICAgICAgICAgYW1vdW50OiB7ICRzdW06ICckYW1vdW50JyB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGdyb3VwMiA9IHtcbiAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6IHsgdHlwZTogJyR0eXBlJyB9LFxuICAgICAgICAgICAgYW1vdW50OiB7ICRzdW06ICckYW1vdW50JyB9LFxuICAgICAgICAgICAgdHlwZTogeyAnJGZpcnN0JzogJyR0eXBlJyB9LFxuICAgICAgICAgICAgdHJhbnNhY3Rpb25MaXN0OiB7ICRwdXNoOiB7IGNhdGVnb3J5OiAnJGNhdGVnb3J5JywgYW1vdW50OiAnJGFtb3VudCcsIGRhdGU6ICckZGF0ZScsIGlkOiAnJF9pZCcgfSB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHVud2luZCA9IHsgJHVud2luZDogJyR0cmFuc2FjdGlvbkxpc3QnIH07XG4gICAgbGV0IHNvcnQgPSB7fTtcbiAgICBpZiAoYWN0aXZlRmlsdGVyID09PSAnc3BlbnRSYXRlJykge1xuICAgICAgICBzb3J0ID0geyAkc29ydDogeyAndHJhbnNhY3Rpb25MaXN0LmFtb3VudCc6IC0xIH0gfTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzb3J0ID0geyAkc29ydDogeyAndHJhbnNhY3Rpb25MaXN0LmRhdGUnOiAtMSB9IH07XG4gICAgfVxuICAgIGNvbnN0IHJlR3JvdXAgPSB7XG4gICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiB7IHR5cGU6ICckdHlwZScgfSxcbiAgICAgICAgICAgIGFtb3VudDogeyAnJGZpcnN0JzogJyRhbW91bnQnIH0sXG4gICAgICAgICAgICB0eXBlOiB7ICckZmlyc3QnOiAnJHR5cGUnIH0sXG4gICAgICAgICAgICB0cmFuc2FjdGlvbkxpc3Q6IHsgJHB1c2g6ICckdHJhbnNhY3Rpb25MaXN0JyB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8vIFF1ZXJpZXMgZW5kXG5cbiAgICBjb25zdCB7IHRhYiwgd3csIG1tLCB5eSwgZG93IH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgaWYgKHRhYiA9PT0gWUVBUikge1xuICAgICAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgdG9rZW46IHRva2VufSB9LFxuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgeXk6IHBhcnNlSW50KHl5KSB9IH0sXG4gICAgICAgICAgICB7IC4uLmdyb3VwMiB9LFxuICAgICAgICAgICAgeyAuLi51bndpbmQgfSx7IC4uLnNvcnQgfSx7IC4uLnJlR3JvdXAgfSxcbiAgICAgICAgICAgIHsgJHByb2plY3Q6IHsgX2lkOiAwLCBhbW91bnQ6IDEsIHR5cGU6IDEsIHRyYW5zYWN0aW9uTGlzdDogMSB9IH1cbiAgICAgICAgXSkuYWxsb3dEaXNrVXNlKHRydWUpLmV4ZWMoZXhwZW5zZURhdGVSZXNwb25kZXIpO1xuICAgIH0gZWxzZSBpZiAodGFiID09PSBNT05USCkge1xuICAgICAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgdG9rZW46IHRva2VuIH0gfSxcbiAgICAgICAgICAgIHsgJG1hdGNoOiB7IHl5OiBwYXJzZUludCh5eSkgfSB9LHsgJG1hdGNoOiB7IG1tOiBwYXJzZUludChtbSkgfSB9LFxuICAgICAgICAgICAgeyAuLi5ncm91cDIgfSxcbiAgICAgICAgICAgIHsgLi4udW53aW5kIH0seyAuLi5zb3J0IH0seyAuLi5yZUdyb3VwIH0sXG4gICAgICAgICAgICB7ICRwcm9qZWN0OiB7IF9pZDogMCwgYW1vdW50OiAxLCB0eXBlOiAxLCB0cmFuc2FjdGlvbkxpc3Q6IDEgfSB9XG4gICAgICAgIF0pLmFsbG93RGlza1VzZSh0cnVlKS5leGVjKGV4cGVuc2VEYXRlUmVzcG9uZGVyKTtcbiAgICB9IGVsc2UgaWYgKHRhYiA9PT0gV0VFSykge1xuICAgICAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgdG9rZW46IHRva2VuIH0gfSxcbiAgICAgICAgICAgIHsgJG1hdGNoOiB7IHl5OiBwYXJzZUludCh5eSkgfSB9LHsgJG1hdGNoOiB7IG1tOiBwYXJzZUludChtbSkgfSB9LHsgJG1hdGNoOiB7IHd3OiBwYXJzZUludCh3dykgfSB9LFxuICAgICAgICAgICAgeyAuLi5ncm91cDIgfSxcbiAgICAgICAgICAgIHsgLi4udW53aW5kIH0seyAuLi5zb3J0IH0seyAuLi5yZUdyb3VwIH0sXG4gICAgICAgICAgICB7ICRwcm9qZWN0OiB7IF9pZDogMCwgYW1vdW50OiAxLCB0eXBlOiAxLCB0cmFuc2FjdGlvbkxpc3Q6IDEgfSB9XG4gICAgICAgIF0pLmFsbG93RGlza1VzZSh0cnVlKS5leGVjKGV4cGVuc2VEYXRlUmVzcG9uZGVyKTtcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RXhwZW5zZVN1bW1hcnkgPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBmdW5jdGlvbiBleGVjU3VtbWFyeVF1ZXJ5KGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZXNwb25kLnNlbmQoNTAwKS5zZW5kKGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhWzBdICYmIGRhdGFbMF0ucGVyRGl2aXNpb25EYXRhKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1heEFtb3VudCA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSO1xuICAgICAgICAgICAgICAgIGRhdGFbMF0ucGVyRGl2aXNpb25EYXRhLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF4QW1vdW50IDwgZW50cnkuYW1vdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhBbW91bnQgPSBlbnRyeS5hbW91bnRcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGRhdGFbMF0ubWF4QW1vdW50ID0gbWF4QW1vdW50O1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoey4uLmRhdGFbMF19KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5zZXNzaW9uLnRva2VuID8gcmVxdWVzdC5zZXNzaW9uLnRva2VuIDogJyc7XG4gICAgY29uc3Qge3RhYiwgeXksIG1tLCB3d30gPSByZXF1ZXN0LmJvZHk7XG4gICAgaWYgKHRhYiA9PT0gWUVBUikge1xuICAgICAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICAgICAgeyRtYXRjaDogeyB0b2tlbjogdG9rZW4gfX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHl5OiB5eX19LFxuICAgICAgICAgICAgeyRtYXRjaDogeyB0eXBlOiAnZXhwZW5zZSd9fSxcbiAgICAgICAgICAgIHskZ3JvdXA6IHsgX2lkOiB7IG1tOiAnJG1tJ30sIGFtb3VudDogeyRzdW06ICckYW1vdW50J30sIG1vbnRoOiB7JyRmaXJzdCc6ICckbW0nfX19LFxuICAgICAgICAgICAgeyRzb3J0OiB7IG1vbnRoOiAxIH19LFxuICAgICAgICAgICAgeyRncm91cDoge19pZDogbnVsbCwgdG90YWxBbW91bnQ6IHsnJHN1bSc6ICckYW1vdW50J30sIHBlckRpdmlzaW9uRGF0YTogeyRwdXNoIDogeyBhbW91bnQ6ICckYW1vdW50JywgZGl2aXNpb246ICckbW9udGgnfX19fSxcbiAgICAgICAgICAgIHskcHJvamVjdDoge19pZDogMH19XG4gICAgICAgICAgICBdKS5hbGxvd0Rpc2tVc2UodHJ1ZSkuZXhlYyhleGVjU3VtbWFyeVF1ZXJ5KTtcbiAgICB9IGVsc2UgaWYgKHRhYiA9PT0gTU9OVEgpIHtcbiAgICAgICAgRXhwZW5zZXMuYWdncmVnYXRlKFtcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgdG9rZW46IHRva2VuIH19LFxuICAgICAgICAgICAgeyRtYXRjaDogeyB5eTogeXl9fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgbW06IG1tfX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHR5cGU6ICdleHBlbnNlJ319LFxuICAgICAgICAgICAgeyRncm91cDogeyBfaWQ6IHtkZDogJyRkZCd9LCBhbW91bnQ6IHsnJHN1bSc6ICckYW1vdW50J30sIGRkOiB7JyRmaXJzdCc6ICckZGQnfSB9fSxcbiAgICAgICAgICAgIHskc29ydDoge2RkOiAxfX0sXG4gICAgICAgICAgICB7JGdyb3VwOiB7X2lkOiBudWxsLCB0b3RhbEFtb3VudDogeyckc3VtJzogJyRhbW91bnQnfSwgcGVyRGl2aXNpb25EYXRhOiB7JHB1c2g6IHthbW91bnQ6ICckYW1vdW50JywgZGl2aXNpb246ICckZGQnfX19fSxcbiAgICAgICAgICAgIHskcHJvamVjdDoge19pZDowfX1cbiAgICAgICAgICAgIF0pLmFsbG93RGlza1VzZSh0cnVlKS5leGVjKGV4ZWNTdW1tYXJ5UXVlcnkpO1xuICAgIH0gZWxzZSBpZiAodGFiID09PSBXRUVLKSB7XG4gICAgICAgIEV4cGVuc2VzLmFnZ3JlZ2F0ZShbXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHRva2VuOiB0b2tlbiB9fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgeXk6IHl5fX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IG1tOiBtbX19LFxuICAgICAgICAgICAgeyRtYXRjaDogeyB3dzogd3d9fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgdHlwZTogJ2V4cGVuc2UnfX0sXG4gICAgICAgICAgICB7JGdyb3VwOiB7IF9pZDoge2RvdzogJyRkb3cnfSwgYW1vdW50OiB7JHN1bTogJyRhbW91bnQnfSwgZG93OiB7JyRmaXJzdCc6ICckZG93J319fSxcbiAgICAgICAgICAgIHskc29ydDogeyBkb3c6IDF9fSxcbiAgICAgICAgICAgIHskZ3JvdXA6IHsgX2lkOiBudWxsLCB0b3RhbEFtb3VudDogeyRzdW06ICckYW1vdW50J30sICBwZXJEaXZpc2lvbkRhdGE6IHskcHVzaDoge2Ftb3VudDogJyRhbW91bnQnLCBkaXZpc2lvbjogJyRkb3cnfX19fSxcbiAgICAgICAgICAgIHskcHJvamVjdDoge19pZDogMH19XG4gICAgICAgICAgICBdKS5hbGxvd0Rpc2tVc2UodHJ1ZSkuZXhlYyhleGVjU3VtbWFyeVF1ZXJ5KTtcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVFeHBlbnNlRGF0ZSA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGNvbnN0IHtpZH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgRXhwZW5zZXMuZmluZE9uZUFuZFJlbW92ZSh7X2lkOiBpZH0pLnRoZW4oKGRvYykgPT4ge1xuICAgICAgICByZXNwb25zZS5zZW5kKGRvYyk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBlZGl0RXhwZW5zZSA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGxldCB7YW1vdW50LCBkYXRlfSA9IHJlcXVlc3QuYm9keTtcbiAgICBjb25zdCB7ICBpZCwgd3csIGRvdywgbW0sIHl5LCBkZCwgdHlwZSwgY2F0ZWdvcnkgfSA9IHJlcXVlc3QuYm9keTtcbiAgICBhbW91bnQgPSBwYXJzZUludChhbW91bnQpO1xuICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICBjb25zdCBuZXdFeHBlbnNlID0geyBhbW91bnQsIGNhdGVnb3J5LCBkYXRlLCB0eXBlLCB3dywgZG93LCBtbSwgeXksIGRkIH07XG4gICAgRXhwZW5zZXMuZmluZE9uZUFuZFVwZGF0ZShcbiAgICAgICAge19pZDogaWR9LFxuICAgICAgICB7JHNldDogeydhbW91bnQnOiBhbW91bnQsICdjYXRlZ29yeSc6IGNhdGVnb3J5LCAnZGF0ZSc6IGRhdGUsICd0eXBlJzogdHlwZSwgJ3d3Jzogd3csICdkZCc6IGRkLCAnbW0nOiBtbSwgJ3l5JzogeXksICdkb3cnOiBkb3cgfSB9LFxuICAgICAgICB7dXBzZXJ0OnRydWUsIHJldHVybk5ld0RvY3VtZW50IDogdHJ1ZX1cbiAgICApLnRoZW4oKGRvYykgPT4ge1xuICAgICAgICByZXNwb25zZS5zZW5kKGRvYyk7XG4gICAgfSk7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJleHByZXNzLXNlc3Npb25cIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiY29ubmVjdC1tb25nb1wiKTsiXSwic291cmNlUm9vdCI6IiJ9