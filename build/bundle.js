!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=7)}([function(e,t){e.exports=require("react")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MAXLENGTHPERTAB={month:31,year:11,week:6},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t.WEEKNAMESHORT=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t.TODAY="today",t.YESTERDAY="yesterday"},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_expense=t.deleteExpenseDate=t.get_expense_summary=t.get_expense_data=t.new_expense=t.logoutUser=t.getUserInfo=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(17),o=(a=s)&&a.__esModule?a:{default:a};t.signup=function(e){return o.default.post("/signup/",r({},e))},t.signin=function(e){return o.default.post("/signin/",r({},e))},t.getUserInfo=function(){return o.default.post("/userinfo/",{})},t.logoutUser=function(){return o.default.post("/logout/",{})},t.new_expense=function(e){return o.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return o.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return o.default.post("/get_expense_summary/",e)},t.deleteExpenseDate=function(e){return o.default.post("/delete_expense_date/",e)},t.edit_expense=function(e){return o.default.post("/edit_expense/",e)}},function(e,t){e.exports=require("react-router-dom")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.renderOptions=function(e){var t=[];if("day"===e){t.push(o.default.createElement("option",null,"Day"));for(var n=1;n<32;n++)t.push(o.default.createElement("option",{key:"day_"+n,value:n},n))}else if("month"===e){t.push(o.default.createElement("option",null,"Month"));for(var a=0;a<12;a++)t.push(o.default.createElement("option",{key:"month_"+a,value:a},i.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(o.default.createElement("option",null,"Year"));for(var r=2020;r>2e3;r--)t.push(o.default.createElement("option",{key:"year_"+r,value:r},r))}else if("week"===e){t.push(o.default.createElement("option",null,"Week"));for(var s=1;s<6;s++)t.push(o.default.createElement("option",{key:"week_"+s,value:s},s))}return t},t.formatDate=function(e){var t=void 0;t="object"!==(void 0===e?"undefined":a(e))?new Date(e):e;var n="";return n+=t.getDate()+" "+i.MONTHSNAMESHORT[t.getMonth()]+" "+t.getFullYear()},t.amountOnGraph=function(e){if(""===e)return"";parseFloat(e,10);return e>1e3?Math.round(10*parseFloat(e/1e3,10))/10+"K":e};var r,s=n(0),o=(r=s)&&r.__esModule?r:{default:r},i=n(1)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(12);o(n(8));var a=o(n(13)),r=o(n(14));o(n(15));n(24);var s=n(25);function o(e){return e&&e.__esModule?e:{default:e}}n(8);var i=n(26),l=n(27)(i),u=(0,a.default)(),c=process.env.PORT;u.use(i({secret:"foo",resave:!0,store:new l({url:process.env.MONGOLAB_URI})})),u.use(r.default.urlencoded({extended:!1})),u.use(r.default.json()),u.use(a.default.static("build/public")),u.use("/styles",a.default.static("src/pages/styles")),u.use(a.default.static("src/pages/static")),u.post("/signup",s.signUp),u.post("/signin",s.signIn),u.post("/logout",s.logout),u.post("/userinfo",s.getUserInfo),u.post("/new_expense",s.newExpense),u.post("/get_expense_data",s.getExpenseData),u.post("/get_expense_summary",s.getExpenseSummary),u.post("/delete_expense_date",s.deleteExpenseDate),u.post("/edit_expense",s.editExpense);u.get("*",function(e,t){t.send('\n        <html>\n            <head>\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="manifest" href="/manifest.json">\n                <link rel="icon" href="/img/budget64.png">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js">\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link rel="stylesheet" type="text/css" href="/styles/notfound.css">\n                <link rel="stylesheet" type="text/css" href="/styles/popup.css">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src = "/swRegisterer.js">\n                <\/script>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>')}),u.listen(c,function(){console.log("Server Started on Port: ",c)}),t.default=u},function(e,t,n){"use strict"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=u(s),i=u(n(3)),l=n(4);function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.state={username:"",password:"",signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login"},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"head",value:function(){return o.default.createElement(i.default,null,o.default.createElement("title",null,"Expense Login"))}},{key:"successful",value:function(e){e.data&&!e.data.error?(this.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):this.setState(a({},e.data)),e.data&&e.data.error&&this.resetButtonText()}},{key:"isValid",value:function(){return this.state.username.length<5?(this.setState({error:!0,msg:"Username must be greater than 4 Characters"}),!1):!(this.state.password.length<8)||(this.setState({error:!0,msg:"Password must be greater than 7 Characters"}),!1)}},{key:"resetButtonText",value:function(){this.setState({signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login"})}},{key:"signUp",value:function(){var e=this;this.isValid()&&(this.setState({signupText:"Signing up..."}),(0,l.signup)({username:this.state.username,password:this.state.password}).then(function(t){e.successful(t)}).catch(function(t){e.resetButtonText(),console.log("Failed to Signup")}))}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(e||this.isValid())&&(e?this.setState({continueText:"Continuing with Test Login..."}):this.setState({signinText:"Signing in..."}),(0,l.signin)({username:a,password:r}).then(function(e){t.successful(e)}).catch(function(e){t.resetButtonText(),console.log("Failed to SignIn",e)}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.signinText,a=t.signupText,r=t.continueText;return o.default.createElement("div",null,this.head(),o.default.createElement("div",null,o.default.createElement("div",{className:""},o.default.createElement("div",{className:"fieldsDiv"},o.default.createElement("div",{className:"username"},o.default.createElement("input",{className:"loginInput ",id:"loginUsername",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),o.default.createElement("div",{className:"password padT10"},o.default.createElement("input",{className:"loginInput ",id:"loginPwd",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),this.state.error&&o.default.createElement("div",{id:"errorDiv",className:"textCenter red "},this.state.msg),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn loginBtns themeBg",onClick:function(){return e.signIn(!1)}},n)),o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn loginBtns themeBg",onClick:this.signUp},a))),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new"},o.default.createElement("span",{className:"newBtn loginBtns testLogin themeBg",onClick:function(){return e.signIn(!0)}},r))))))}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(2));r(n(11));function r(e){return e&&e.__esModule?e:{default:e}}var s=a.default.model("Expenses",{user_id:{type:a.default.Schema.Types.ObjectId,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(2));r(n(10));function r(e){return e&&e.__esModule?e:{default:e}}var s=a.default.model("Users",{_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});t.default=s},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=i(r),o=(n(16),i(n(9)),i(n(18)));n(5);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return s.default.createElement(o.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("react-router")},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(0)),r=n(5),s=l(n(9)),o=l(n(19)),i=l(n(20));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(i.default,e)}}),a.default.createElement(r.Route,{path:"*",render:function(e){return a.default.createElement(o.default,e)}}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=l(r),o=l(n(3)),i=n(5);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return s.default.createElement(o.default,null,s.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){return s.default.createElement("div",null,this.head(),s.default.createElement("div",{className:"notfoundContainer"},s.default.createElement("h5",{className:"notFoundText fb textCenter"},"Sorry, this page does not exist!")),s.default.createElement("div",null,s.default.createElement("ul",{className:"notfoundUL textCenter"},s.default.createElement("li",null,s.default.createElement("div",{className:"blueBtn"},s.default.createElement(i.NavLink,{to:"/login",className:"white"}," Login "))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=p(s),i=(p(n(3)),p(n(21))),l=n(4),u=n(1),c=p(n(22)),d=n(6),f=p(n(23));function p(e){return e&&e.__esModule?e:{default:e}}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.cancelPopup=n.cancelPopup.bind(n),n.confirmPopup=n.confirmPopup.bind(n),n.deleteExpense=n.deleteExpense.bind(n),n.editExpense=n.editExpense.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,viewMore:!1,weekData:{},monthData:{},yearData:{},selectorWW:"",selectorMM:"",selectorYY:"",activeFilter:"spentRate"},n.viewedMore={},n.userInfo(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary(),this.updateTogglerContent()}},{key:"updateTogglerContent",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"currentTabData",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"findCurrentDataProp",value:function(){var e=this.state.activeTab;return e===u.WEEK?"weekData":e===u.MONTH?"monthData":e===u.YEAR?"yearData":void 0}},{key:"getParams",value:function(e){var t=this.state,n=t.activeTab,a=t.activeFilter,r=this.currentTabData(),s=r.dd,o=r.mm,i=r.yy,l=r.ww,u=i&&void 0!==o&&s?new Date(i,o,s):new Date,c=u.getMonth(),d=u.getDay(),f=u.getDate(),p=u.getFullYear();if(!l){var m=new Date(p,c,1).getDay();l=Math.ceil((m+u.getDate())/7)}return this.state.selectorWW&&void 0!==this.state.selectorMM&&this.state.selectorYY&&(p=parseInt(this.state.selectorYY),c=parseInt(this.state.selectorMM),l=parseInt(this.state.selectorWW)),{tab:n,mm:c,dow:d,ww:l,yy:p,dd:f,activeFilter:a}}},{key:"userInfo",value:function(){var e=this;(0,l.getUserInfo)().then(function(t){t.data&&t.data.userInfo?e.setState({userInfo:t.data.userInfo}):e.navigateToSignIn()}).catch(function(){e.navigateToSignIn()})}},{key:"getExpenseSummary",value:function(e,t){var n=this,r=this.getParams(t),s=this.findCurrentDataProp();(0,l.get_expense_summary)(r).then(function(e){n.setState(m({},s,a({},n.state[s],{plotData:a({},e.data)})))},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(e,t){var n=this,r=this.getParams(t),s=this.findCurrentDataProp();(0,l.get_expense_data)(r).then(function(e){var t,r=e.data,o=r.expenseList,i=r.incomeList,l=r.standing,u=r.spent,c=r.ww,d=r.yy,f=r.mm,p=r.dd;n.setState((m(t={},s,a({},n.state[s],{expenseList:o,incomeList:i,standing:l,spent:u,ww:c,yy:d,mm:f,dd:p})),m(t,"selectorMM",f),m(t,"selectorWW",c),m(t,"selectorYY",d),t))},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.otherHalfLandingTxt&&(this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")),this.refs.addBtnContainer.classList.toggle("dn")}},{key:"navigateToSignIn",value:function(){this.state.userInfo?(0,l.logoutUser)().then(function(){window.location.href="/login"}):window.location.href="/login"}},{key:"renderLeftMenuBar",value:function(){var e=this.state.userInfo;return o.default.createElement("div",{className:"menuBar"},o.default.createElement("div",{ref:"popup",className:"popup zi2 ",onClick:this.leftMenuClick},o.default.createElement("div",{className:"sideBar in-bl fl"},o.default.createElement("div",{className:"menu-option",onClick:this.navigateToSignIn},e?"Logout":"Sign In"),o.default.createElement("div",{className:"menu-option"},o.default.createElement("a",{style:{color:"#757575c9"},href:"https://dhilipkmr.github.io/materializedResume/",target:"_blank"},"About Me")))))}},{key:"newExpense",value:function(e,t,n){var a=this;t?this.setState({showNewExpense:e,editExpense:void 0!==n?n:this.state.editExpense,weekData:{},monthData:{},yearData:{}},function(){a.getExpense(t),a.getExpenseSummary(t)}):this.setState({showNewExpense:e,editExpense:n})}},{key:"cancelPopup",value:function(){this.setState({showPopup:!1})}},{key:"confirmPopup",value:function(){var e=this;this.setState({showPopup:!1}),(0,l.deleteExpenseDate)({id:this.state.deleteTransactionObj.id}).then(function(t){t&&(e.getExpense(!0,!0),e.getExpenseSummary(!0,!0))})}},{key:"editExpense",value:function(e){this.setState({editExpense:!0,editTransactionObj:e})}},{key:"deleteExpense",value:function(e){this.setState({showPopup:!0,deleteTransactionObj:e})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(e){var t=this;if(!e){for(var n=[],r=0;r<2;r++)n.push(o.default.createElement("div",null,o.default.createElement("div",{key:"transaction_type_"+r,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),o.default.createElement("div",{className:"progressBar bl textCenter mt30"})),o.default.createElement("div",{className:"cardBrdrBtm"})));return n}return this.currentTabData().expenseList.transactionList.map(function(e,n){return t.state.viewMore||t.viewedMore[t.state.activeTab]||!t.state.viewMore&&n<2?(t.state.viewMore&&(t.viewedMore[t.state.activeTab]=!0),o.default.createElement("div",null,o.default.createElement("div",{key:"transaction_type_"+n,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("div",{className:"cat w33 in-bl tl"},e.category),o.default.createElement("div",{className:"cat w33 in-bl tc"},(0,d.formatDate)(e.date)),o.default.createElement("div",{className:"cat w33 in-bl tr"},o.default.createElement("svg",{onClick:function(){return t.editExpense(a({},e))},height:"15px",viewBox:"0 -1 450 400",width:"15px"},o.default.createElement("path",{d:"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0"})))),o.default.createElement("div",{className:"progressBar bl textCenter marginT25"},o.default.createElement("div",{className:"filled",style:{maxWidth:e.percent+"%"}})),o.default.createElement("div",null,o.default.createElement("div",{className:"padR15 padL10 cat w33 in-bl tl"},"₹"+e.amount),o.default.createElement("div",{className:"cat w33 in-bl tc"},e.percent+" %"),o.default.createElement("div",{className:"padR15 cat w33 in-bl tr"},o.default.createElement("svg",{onClick:function(){return t.deleteExpense({id:e.id})},fill:"#a20404",height:"15px",viewBox:"-40 0 450 400",width:"15px"},o.default.createElement("path",{d:"m232.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m114.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),o.default.createElement("path",{d:"m28.398438 127.121094v246.378906c0 14.5625 5.339843 28.238281 14.667968 38.050781 9.285156 9.839844 22.207032 15.425781 35.730469 15.449219h189.203125c13.527344-.023438 26.449219-5.609375 35.730469-15.449219 9.328125-9.8125 14.667969-23.488281 14.667969-38.050781v-246.378906c18.542968-4.921875 30.558593-22.835938 28.078124-41.863282-2.484374-19.023437-18.691406-33.253906-37.878906-33.257812h-51.199218v-12.5c.058593-10.511719-4.097657-20.605469-11.539063-28.03125-7.441406-7.421875-17.550781-11.5546875-28.0625-11.46875h-88.796875c-10.511719-.0859375-20.621094 4.046875-28.0625 11.46875-7.441406 7.425781-11.597656 17.519531-11.539062 28.03125v12.5h-51.199219c-19.1875.003906-35.394531 14.234375-37.878907 33.257812-2.480468 19.027344 9.535157 36.941407 28.078126 41.863282zm239.601562 279.878906h-189.203125c-17.097656 0-30.398437-14.6875-30.398437-33.5v-245.5h250v245.5c0 18.8125-13.300782 33.5-30.398438 33.5zm-158.601562-367.5c-.066407-5.207031 1.980468-10.21875 5.675781-13.894531 3.691406-3.675781 8.714843-5.695313 13.925781-5.605469h88.796875c5.210937-.089844 10.234375 1.929688 13.925781 5.605469 3.695313 3.671875 5.742188 8.6875 5.675782 13.894531v12.5h-128zm-71.199219 32.5h270.398437c9.941406 0 18 8.058594 18 18s-8.058594 18-18 18h-270.398437c-9.941407 0-18-8.058594-18-18s8.058593-18 18-18zm0 0"}),o.default.createElement("path",{d:"m173.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}))))),o.default.createElement("div",{className:"cardBrdrBtm"}))):null})}},{key:"changeFilter",value:function(e){var t=this;"date"===e?this.setState({activeFilter:"date"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)}):"spentRate"===e&&this.setState({activeFilter:"spentRate"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)})}},{key:"getTransactionCard",value:function(){var e=this,t=this.currentTabData(),n=this.state,a=n.activeTab,r=n.viewMore,s=void 0!==r&&r,i=n.userInfo,l=n.activeFilter,c=t.expenseList;return o.default.createElement("div",null,o.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(s?"showAllTransaction":"")},o.default.createElement("div",{className:"textCenter mt5"},o.default.createElement("span",{className:"sortType sortTypeLeft fs14 "+("spentRate"===l?" leftActiveRight ":""),onClick:function(){return e.changeFilter("spentRate")}},"Spent Rate"),o.default.createElement("span",{className:"sortType sortTypeRight fs14 "+("spentRate"===l?" leftActiveLeft ":"rightActiveRight"),onClick:function(){return e.changeFilter("date")}},"Date")),o.default.createElement("div",null,o.default.createElement("div",{className:"transactScroller"},void 0!==c&&0===Object.keys(c).length?o.default.createElement("div",{className:"textCenter padT20 mh10p"},o.default.createElement("div",null,"Add Transaction "),!i&&o.default.createElement("div",{className:"padT10 padB20"},o.default.createElement("a",{href:"/login"},o.default.createElement("span",null,"Sign In"))," for Past Transactions")):o.default.createElement("div",null,a===u.WEEK?this.renderInnerTransactioncard(c):null,a===u.MONTH?this.renderInnerTransactioncard(c):null,a===u.YEAR?this.renderInnerTransactioncard(c):null)))),o.default.createElement("div",{className:"viewMoreArrow",onClick:function(){return e.clickViewMore()}},o.default.createElement("svg",{className:s?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),o.default.createElement("div",{className:"posRel"},o.default.createElement("div",{ref:"addBtnContainer",className:"addBtnContainer "},o.default.createElement("div",{className:""},o.default.createElement("span",{className:"addBtn",onClick:function(){return e.newExpense(!0)}}," + ")))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"getTogglerHeader",value:function(){var e=this.state.activeTab,t=this.currentTabData(),n=t.mm,a=t.yy,r=t.ww,s="",o=!1,i=!1;return e===u.MONTH?(s=void 0!==n?u.MONTHSNAME[n]:"----",o=0===n,i=11===n):e===u.WEEK?(s=r?"Week "+r:"----",o=1===r,i=5===r):(s=a||"----",i=2018===a),{togglerHeader:s,isPrevDisabled:o,isNextDisabled:i}}},{key:"toggleType",value:function(e,t){var n=this,r={};e===u.WEEK?r={selectorWW:t}:e===u.MONTH?r={selectorMM:t}:e===u.YEAR&&(r={selectorYY:t}),this.setState(a({},r),function(){n.getExpense(!0,!0),n.getExpenseSummary(!0,!0)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=(t.viewMore,t.editExpense),s=t.editTransactionObj,l=this.currentTabData(),p=l.standing,m=void 0===p?void 0:p,h=l.spent,v=void 0===h?void 0:h,y=l.plotData,g=void 0===y?void 0:y,E=l.incomeList,b=void 0===E?void 0:E,w=this.getTogglerHeader();w.togglerHeader,w.isPrevDisabled,w.isNextDisabled;return o.default.createElement("div",{className:""},o.default.createElement("div",null,o.default.createElement("div",{ref:"backDrop",className:"transition2a zi1 "+(a||r?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),o.default.createElement("div",{ref:"mainContent",className:"mainContent"},o.default.createElement("div",{className:""},o.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 first-half-landing"},o.default.createElement("div",{className:"standing"},o.default.createElement("span",{className:"left-menu-container",onClick:this.leftMenuClick},o.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),o.default.createElement("div",{className:"heading"},o.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),o.default.createElement("div",null,o.default.createElement("span",{className:"f18"},"₹ "),o.default.createElement("span",{className:"standingAmt"},void 0!==m?m:"0")),o.default.createElement("div",{className:"textCenter"},o.default.createElement("div",null,o.default.createElement("span",{className:"f11"},this.getCurrentDate())))),o.default.createElement("div",{className:"expenseDaysBtn w85 m10a"},o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("div",null,o.default.createElement("select",{onChange:function(t){return e.toggleType(u.WEEK,t.target.value)},id:"weekSelector db white",value:this.state.selectorWW},(0,d.renderOptions)("week")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.WEEK)},className:"db white padT10 "+(n===u.WEEK?"dayTypeBtn-active":""),htmlFor:"weekSelector"},"Week"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.WEEK?"w60":"")}))),o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("select",{onChange:function(t){return e.toggleType(u.MONTH,t.target.value)},id:"monthSelector db white",value:this.state.selectorMM},(0,d.renderOptions)("month")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.MONTH)},className:"db white padT10 "+(n===u.MONTH?"dayTypeBtn-active":""),htmlFor:"monthSelector"},"Month"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.MONTH?"w60":"")})),o.default.createElement("div",{className:"in-bl w33"},o.default.createElement("select",{onChange:function(t){return e.toggleType(u.YEAR,t.target.value)},id:"yearSelector db white",value:this.state.selectorYY},(0,d.renderOptions)("year")),o.default.createElement("label",{onClick:function(){return e.changeExpenseDayFormat(u.YEAR)},className:"db white padT10 "+(n===u.YEAR?"dayTypeBtn-active":""),htmlFor:"yearSelector"},"Year"),o.default.createElement("div",{className:"typeBrdrBtm "+(n===u.YEAR?"w60":"")}))),o.default.createElement("div",{className:"spentIncomeSection"},o.default.createElement("div",{className:"in-bl "},o.default.createElement("div",{className:"fl in-bl spentIcon"},o.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==v?v:"0"))),o.default.createElement("div",{className:"in-bl  "},o.default.createElement("div",{className:"fl in-bl incomeIcon "},o.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(b&&void 0!==b.amount?b.amount:"0")))),this.getTransactionCard())),g&&g.perDivisionData&&g.perDivisionData.length>0?o.default.createElement("div",{className:"other-half-landing mt10"},o.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},o.default.createElement("div",{className:"textCenter trSumaryHeading fb"},o.default.createElement("span",null,"Expense Trends")),n===u.WEEK?o.default.createElement(c.default,{plotData:g,tab:n}):null,n===u.MONTH?o.default.createElement(c.default,{plotData:g,tab:n}):null,n===u.YEAR?o.default.createElement(c.default,{plotData:g,tab:n}):null)):null)),a?o.default.createElement("div",null,o.default.createElement(i.default,{newExpense:this.newExpense})):null,r?o.default.createElement("div",null,o.default.createElement(i.default,{newExpense:this.newExpense,editTransactionObj:s})):null,this.state.showPopup&&o.default.createElement(f.default,{cancelCallback:this.cancelPopup,confirmCallback:this.confirmPopup}))}}]),t}();t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),i=(a=o)&&a.__esModule?a:{default:a},l=n(4),u=n(1),c=n(6);var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n);var a="",r="",s="",o="",i="";if(e.editTransactionObj){a=e.editTransactionObj.amount,r=e.editTransactionObj.category;var l=new Date(e.editTransactionObj.date);s=l.getDate(),o=l.getMonth(),i=l.getFullYear()}return n.state={type:"expense",amount:a,category:r,day:s,month:o,year:i,error:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),s(t,[{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){e&&this.state.error.amount?this.setState({amount:e,error:{}}):this.setState({amount:e})}},{key:"changeCategory",value:function(e){e&&this.state.error.category?this.setState({category:e,error:{}}):this.setState({category:e})}},{key:"removeDateError",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year;new Date(parseInt(a),parseInt(n),parseInt(t))>new Date||this.setState({error:{}})}},{key:"changeDate",value:function(e){var t=this;if(e===u.TODAY){var n=new Date;this.setState({todayTap:!0,yesterdayTap:!1,day:n.getDate(),month:n.getMonth(),year:n.getFullYear()},function(){t.removeDateError()})}else if(e==u.YESTERDAY){var a=new Date,s=new Date(a.setDate(a.getDate()-1));this.setState({todayTap:!1,yesterdayTap:!0,day:s.getDate(),month:s.getMonth(),year:s.getFullYear()},function(){t.removeDateError()})}else this.setState(r({},e),function(){t.removeDateError()})}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return r.test(t)&&r.test(n)&&/^\d{4}$/.test(a)?new Date(parseInt(a),parseInt(n),parseInt(t))>new Date?(this.setState({error:{date:"Please do not Provide Future Date!"}}),!1):(this.date=new Date(parseInt(a),parseInt(n),parseInt(t)),!0):(this.setState({error:{date:"Please provide a Valid Date!"}}),!1)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return t&&/^\d+$/.test(t)?n?!!this.isValidDate():(this.setState({error:{category:"Please provide a Valid Category"}}),!1):(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category;if(this.validateParams()){var s=this.date,o=s.getMonth(),i=s.getFullYear(),u=new Date(i,o,1).getDay(),c=Math.ceil((u+s.getDate())/7),d=s.getDay(),f=s.getDate(),p={amount:n,type:a,date:s,mm:o,yy:i,ww:c,dow:d,dd:f,category:r};this.props.editTransactionObj?(p.id=this.props.editTransactionObj.id,(0,l.edit_expense)(p).then(function(t){e.props.newExpense(!1,!0,!1)},function(t){console.log("Unable to Edit Expense",t),e.props.newExpense(!1,!1,!1)})):(0,l.new_expense)(p).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.props.newExpense(!1,!1)})}}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),s=t.error;return i.default.createElement("div",{className:"newExpenseContainer zi2"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement("span",{className:"newBtn "+("expense"===n?"selectedType":""),onClick:function(){return e.selectType("expense")}},"Expense"),i.default.createElement("span",{className:"newBtn "+("income"===n?"selectedType":""),onClick:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{className:"padL10 w75 "+(s.amount?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newExpAmt",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),s.amount?i.default.createElement("div",{className:"errorDiv"},s.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{className:"padL10 w75 "+(s.category?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newCategAmt",placeholder:"Category",onChange:function(t){return e.changeCategory(t.target.value)},value:r}),s.category?i.default.createElement("div",{className:"errorDiv"},s.category):null),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",className:"w20 ",onChange:function(t){return e.changeDate({day:t.target.value})},value:this.state.day},(0,c.renderOptions)("day")),i.default.createElement("select",{ref:"month",className:"w25 ",onChange:function(t){return e.changeDate({month:t.target.value})},value:this.state.month},(0,c.renderOptions)("month")),i.default.createElement("select",{ref:"year",className:"w20 ",onChange:function(t){return e.changeDate({year:t.target.value})},value:this.state.year},(0,c.renderOptions)("year")),i.default.createElement("div",{className:"mt20"},i.default.createElement("span",{className:"m10 "+(this.state.todayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClick:function(){return e.changeDate(u.TODAY)}},"Today"),i.default.createElement("span",{className:"m10 "+(this.state.yesterdayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClick:function(){return e.changeDate(u.YESTERDAY)}},"Yesterday")),s.date?i.default.createElement("div",{className:"mt10 errorDiv"},s.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement("div",{className:"submitBtn themeBg",onClick:this.submitNewExpense},"Done")))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=(a=s)&&a.__esModule?a:{default:a},i=n(1),l=n(6);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"renderPoints",value:function(e,t,n){for(var a=[],r=this.props.tab,s=0,u=1;u<e.length-1;u++){var c="";if(r===i.WEEK)c=i.WEEKNAMESHORT[s++].toUpperCase();else if(r===i.YEAR)c=i.MONTHSNAMESHORT[s++].toUpperCase();else if(r===i.MONTH){if(u%2!=0)continue;c=u}a.push(o.default.createElement("g",{key:"group_"+u},o.default.createElement("a",null,o.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:t[u]-5,fontSize:"5",textAnchor:"middle"},(0,l.amountOnGraph)(n[u])),o.default.createElement("circle",{cx:e[u],cy:t[u],stroke:"#0757d0",fill:"#0757d0",r:"0.5",strokeWidth:"1"}),o.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:122,fontSize:"5",textAnchor:"middle"},c))))}return a}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],s=[],l=i.DIVISIONLENGTH[n],u=i.MAXLENGTHPERTAB[n],c=t.maxAmount,d=180/l,f=n===i.MONTH?0:-1,p="";for(a.push(0),r.push(115),s.push(""),t.perDivisionData.forEach(function(e){for(;e.division>f;){var t=a[a.length-1];if(a.push(t+d),e.division===f+1){var n=e.amount/c*100;r.push(115-1.15*n),s.push(e.amount)}else r.push(115),s.push("");f++}});u>f;){var m=a[a.length-1];a.push(m+d),r.push(115),f++,s.push("")}var h=a[a.length-1];a.push(h+d),r.push(115),s.push("");for(var v=0;v<a.length;v++)p+=" "+a[v]+","+r[v]+" ";return p?o.default.createElement("div",null,o.default.createElement("svg",{viewBox:window&&window.screen.width>600?"-50 -10 285 210":"-15 -15 220 150",style:{margin:"10px"}},o.default.createElement("polyline",{points:p,className:"graphPlotLine"}),this.renderPoints(a,r,s))):null}},{key:"render",value:function(){return o.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=(a=s)&&a.__esModule?a:{default:a};var i=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"render",value:function(){var e=this.props,t=e.cancelCallback,n=e.confirmCallback;return o.default.createElement("div",{className:"popupBackDrop"},o.default.createElement("div",{className:"popupContainer whiteBg"},o.default.createElement("div",{className:"popupHeader"},o.default.createElement("div",{className:"fb fs14 padB10 textCenter"},"Do you want to Delete this transaction?"),o.default.createElement("div",{className:"tr"},o.default.createElement("div",{className:"newBtn white themeBg in-bl tr mf5 fs12",onClick:n},"Confirm"),o.default.createElement("div",{className:"newBtn white themeBg in-bl tr mf5 fs12",onClick:t},"Cancel")))))}}]),t}();t.default=i},function(e,t,n){"use strict";var a=n(2);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.editExpense=t.deleteExpenseDate=t.getExpenseSummary=t.getExpenseData=t.newExpense=t.getUserInfo=t.logout=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=l(n(2)),s=(l(n(7)),l(n(10))),o=l(n(11)),i=n(1);function l(e){return e&&e.__esModule?e:{default:e}}t.signUp=function(e,t){var n=e.body,a=n.username,s=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=n.emailId,c=void 0===u?"":u,d=new o.default({_id:r.default.Types.ObjectId(),username:s,password:l,emailId:c});o.default.find({username:s}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):d.save().then(function(n){e.session._userId=n.id,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,s=n.password,i=void 0===s?"":s;n.emailId;console.log(e.session.user),o.default.findOne({username:r,password:i}).then(function(n){n?(e.session._userId=n.id,t.send({error:!1,msg:"success"})):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.logout=function(e,t){e.session._userId=null,t.send({error:!1,msg:"success"})},t.getUserInfo=function(e,t){if(e.session._userId){var n=r.default.Types.ObjectId(e.session._userId);o.default.findOne({_id:n}).then(function(e){if(e){var n=e.username;t.send({userInfo:{username:n}})}else t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})}else t.send(200).send({error:!0})},t.newExpense=function(e,t){var n=e.body,o=n.amount,i=n.date,l=e.body,u=l.ww,c=l.dow,d=l.mm,f=l.yy,p=l.dd,m=l.type,h=l.category,v={amount:o=parseInt(o),category:h,date:i=new Date(i),type:m,ww:u,dow:c,mm:d,yy:f,dd:p};new s.default(a({user_id:r.default.Types.ObjectId(e.session._userId)},v)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818");function o(n,a){if(n)respond.send(500).send(n);else{var r={},s={};Object.keys(a).map(function(e){"expense"===a[e].type?r=a[e]:"income"===a[e].type&&(s=a[e])});var o=void 0,i=void 0;r&&r.transactionList?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),o=r.amount):o=0,s&&s.transactionList?(s.transactionList.map(function(e){var t=e.amount/(s.amount/100);e.percent=Math.round(100*t)/100}),i=s.amount-o):i=0-o;var l=e.body,u=l.yy,c=l.mm,d=l.ww,f=l.dd;t.send({dd:f,mm:c,yy:u,ww:d,expenseList:r,incomeList:s,spent:o,standing:i})}}var l={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount",date:"$date",id:"$_id"}}}},u={$unwind:"$transactionList"},c={};c="spentRate"===e.body.activeFilter?{$sort:{"transactionList.amount":-1}}:{$sort:{"transactionList.date":-1}};var d={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},f=e.body,p=f.tab,m=f.ww,h=f.mm,v=f.yy;f.dow;p===i.YEAR?s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},a({},l),a({},u),a({},c),a({},d),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o):p===i.MONTH?s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(h)}},a({},l),a({},u),a({},c),a({},d),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o):p===i.WEEK&&s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(h)}},{$match:{ww:parseInt(m)}},a({},l),a({},u),a({},c),a({},d),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var o=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818"),l=e.body,u=l.tab,c=l.yy,d=l.mm,f=l.ww;u===i.YEAR?s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.MONTH?s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{mm:d}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.WEEK&&s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{mm:d}},{$match:{ww:f}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)},t.deleteExpenseDate=function(e,t){var n=e.body.id;s.default.findOneAndRemove({_id:n}).then(function(e){t.send(e)})},t.editExpense=function(e,t){var n=e.body,a=n.amount,r=n.date,o=e.body,i=o.id,l=o.ww,u=o.dow,c=o.mm,d=o.yy,f=o.dd,p=o.type,m=o.category;a=parseInt(a),r=new Date(r);s.default.findOneAndUpdate({_id:i},{$set:{amount:a,category:m,date:r,type:p,ww:l,dd:f,mm:c,yy:d,dow:u}},{upsert:!0,returnNewDocument:!0}).then(function(e){t.send(e)})}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,