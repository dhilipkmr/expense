!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=6)}([function(e,t){e.exports=require("react")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MAXLENGTHPERTAB={month:31,year:11,week:6},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t.WEEKNAMESHORT=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t.TODAY="today",t.YESTERDAY="yesterday"},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.get_expense_summary=t.get_expense_data=t.new_expense=t.logoutUser=t.getUserInfo=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(16),o=(a=s)&&a.__esModule?a:{default:a};t.signup=function(e){return o.default.post("/signup/",r({},e))},t.signin=function(e){return o.default.post("/signin/",r({},e))},t.getUserInfo=function(){return o.default.post("/userinfo/",{})},t.logoutUser=function(){return o.default.post("/logout/",{})},t.new_expense=function(e){return o.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return o.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return o.default.post("/get_expense_summary/",e)}},function(e,t){e.exports=require("react-router-dom")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(11);o(n(7));var a=o(n(12)),r=o(n(13));o(n(14));n(22);var s=n(23);function o(e){return e&&e.__esModule?e:{default:e}}n(7);var i=n(24),l=n(25)(i),u=(0,a.default)(),c=process.env.PORT;u.use(i({secret:"foo",resave:!0,store:new l({url:process.env.MONGOLAB_URI})})),u.use(r.default.urlencoded({extended:!1})),u.use(r.default.json()),u.use(a.default.static("build/public")),u.use("/styles",a.default.static("src/pages/styles")),u.use(a.default.static("src/pages/static")),u.post("/signup",s.signUp),u.post("/signin",s.signIn),u.post("/logout",s.logout),u.post("/userinfo",s.getUserInfo),u.post("/new_expense",s.newExpense),u.post("/get_expense_data",s.getExpenseData),u.post("/get_expense_summary",s.getExpenseSummary);u.get("*",function(e,t){t.send('\n        <html>\n            <head>\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="manifest" href="/manifest.json">\n                <link rel="icon" href="/img/budget64.png">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js">\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link rel="stylesheet" type="text/css" href="/styles/notfound.css">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src = "/swRegisterer.js">\n                <\/script>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>')}),u.listen(c,function(){console.log("Server Started on Port: ",c)}),t.default=u},function(e,t,n){"use strict";process.env.MONGOLAB_URI="mongodb://dhilipk13:dhilipk13@ds247310.mlab.com:47310/expense"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=l(r),o=l(n(3)),i=n(4);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.state={username:"",password:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return s.default.createElement(o.default,null,s.default.createElement("title",null,"Expense Login"))}},{key:"successful",value:function(e){e.data&&!e.data.error?(console.log(this),this.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):console.log("Failed to SignIn",e)}},{key:"signUp",value:function(){var e=this;(0,i.signup)({username:this.state.username,password:this.state.password}).then(function(t){e.successful(t)}).catch(function(e){return console.log("Failed to Signup")})}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(0,i.signin)({username:a,password:r}).then(function(e){t.successful(e)}).catch(function(e){console.log("Failed to SignIn",e)})}},{key:"render",value:function(){var e=this;return s.default.createElement("div",null,this.head(),s.default.createElement("div",null,s.default.createElement("div",{className:"loginContainer white"},s.default.createElement("div",{className:"fieldsDiv"},s.default.createElement("div",{className:"username"},s.default.createElement("input",{className:"whiteBrdrBtm white",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),s.default.createElement("div",{className:"password padT10"},s.default.createElement("input",{className:"whiteBrdrBtm white",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),s.default.createElement("div",{className:"textCenter padT20"},s.default.createElement("div",{className:"new di"},s.default.createElement("span",{className:"newBtn",onClick:function(){return e.signIn(!1)}},"Sign In")),s.default.createElement("div",{className:"new di"},s.default.createElement("span",{className:"newBtn",onClick:this.signUp},"Sign Up"))),s.default.createElement("div",{className:"textCenter padT20"},s.default.createElement("div",{className:"new"},s.default.createElement("span",{className:"newBtn",onClick:function(){return e.signIn(!0)}},"Continue with Test Login"))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(2));r(n(10));function r(e){return e&&e.__esModule?e:{default:e}}var s=a.default.model("Expenses",{user_id:{type:a.default.Schema.Types.ObjectId,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(2));r(n(9));function r(e){return e&&e.__esModule?e:{default:e}}var s=a.default.model("Users",{_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});t.default=s},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=i(r),o=(n(15),i(n(8)),i(n(17)));n(5);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return s.default.createElement(o.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("react-router")},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(0)),r=n(5),s=l(n(8)),o=l(n(18)),i=l(n(19));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(i.default,e)}}),a.default.createElement(r.Route,{path:"*",render:function(e){return a.default.createElement(o.default,e)}}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),s=l(r),o=l(n(3)),i=n(5);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return s.default.createElement(o.default,null,s.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){return s.default.createElement("div",null,this.head(),s.default.createElement("div",{className:"notfoundContainer"},s.default.createElement("h5",{className:"notFoundText fb textCenter"},"Sorry, this page does not exist!")),s.default.createElement("div",null,s.default.createElement("ul",{className:"notfoundUL textCenter"},s.default.createElement("li",null,s.default.createElement("div",{className:"blueBtn"},s.default.createElement(i.NavLink,{to:"/login",className:"white"}," Login "))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=d(s),i=(d(n(3)),d(n(20))),l=n(4),u=n(1),c=d(n(21));function d(e){return e&&e.__esModule?e:{default:e}}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,viewMore:!1,weekData:{},monthData:{},yearData:{}},n.viewedMore={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary(),this.userInfo()}},{key:"currentTabData",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"findCurrentDataProp",value:function(){var e=this.state.activeTab;return e===u.WEEK?"weekData":e===u.MONTH?"monthData":e===u.YEAR?"yearData":void 0}},{key:"getParams",value:function(){var e=this.state.activeTab,t=new Date,n=t.getMonth(),a=t.getDay(),r=t.getFullYear(),s=new Date(r,n,1).getDay();return{tab:e,mm:n,dow:a,ww:Math.ceil((s+t.getDate())/7),yy:r}}},{key:"userInfo",value:function(){var e=this;(0,l.getUserInfo)().then(function(t){t.data&&t.data.userInfo?e.setState({userInfo:t.data.userInfo}):e.navigateToSignIn()}).catch(function(){e.navigateToSignIn()})}},{key:"getExpenseSummary",value:function(e){var t=this,n=this.getParams(),r=this.findCurrentDataProp();(0===Object.keys(this.state[r]).length||e)&&(0,l.get_expense_summary)(n).then(function(e){t.setState(f({},r,a({},t.state[r],{plotData:a({},e.data)})))},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(e){var t=this,n=this.getParams(),r=this.findCurrentDataProp();(0===Object.keys(this.state[r]).length||e)&&(0,l.get_expense_data)(n).then(function(e){var n=e.data,s=n.expenseList,o=n.incomeList,i=n.standing,l=n.spent;t.setState(f({},r,a({},t.state[r],{expenseList:s,incomeList:o,standing:i,spent:l})))},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.otherHalfLandingTxt&&(this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")),this.refs.addBtnContainer.classList.toggle("dn")}},{key:"navigateToSignIn",value:function(){this.state.userInfo?(0,l.logoutUser)().then(function(){window.location.href="/login"}):window.location.href="/login"}},{key:"renderLeftMenuBar",value:function(){var e=this.state.userInfo;return o.default.createElement("div",{className:"menuBar"},o.default.createElement("div",{ref:"popup",className:"popup zi2 ",onClick:this.leftMenuClick},o.default.createElement("div",{className:"sideBar in-bl fl"},o.default.createElement("div",{className:"menu-option"},"Settings"),o.default.createElement("div",{className:"menu-option",onClick:this.navigateToSignIn},e?"Logout":"Sign In"),o.default.createElement("div",{className:"menu-option"},"About Me"))))}},{key:"newExpense",value:function(e,t){var n=this;t?this.setState({showNewExpense:e,weekData:{},monthData:{},yearData:{}},function(){n.getExpense(t),n.getExpenseSummary(t)}):this.setState({showNewExpense:e})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(e){var t=this;if(!e){for(var n=[],a=0;a<2;a++)n.push(o.default.createElement("div",{key:"transaction_type_"+a,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),o.default.createElement("div",{className:"progressBar bl textCenter mt30"})));return n}return this.currentTabData().expenseList.transactionList.map(function(e,n){return t.state.viewMore||t.viewedMore[t.state.activeTab]||!t.state.viewMore&&n<2?(t.state.viewMore&&(t.viewedMore[t.state.activeTab]=!0),o.default.createElement("div",{key:"transaction_type_"+n,className:"transactedCardInner"},o.default.createElement("div",{className:"cardInnerheading"},o.default.createElement("span",{className:"cat_name"},e.category),o.default.createElement("span",{className:"cat_percent "},e.percent+" %")),o.default.createElement("div",{className:"progressBar bl textCenter marginT25"},o.default.createElement("div",{className:"filled",style:{maxWidth:e.percent+"%"}})))):null})}},{key:"getTransactionCard",value:function(){var e=this,t=this.currentTabData(),n=this.state,a=n.activeTab,r=n.viewMore,s=void 0!==r&&r,i=n.userInfo,l=t.expenseList;return o.default.createElement("div",null,o.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(s?"showAllTransaction":"")},o.default.createElement("div",null,o.default.createElement("div",{className:"transactScroller"},void 0!==l&&0===Object.keys(l).length?o.default.createElement("div",{className:"textCenter padT20 mh10p"},o.default.createElement("div",null,"No Transactions added "),!i&&o.default.createElement("div",{className:"padT10 padB20"},o.default.createElement("a",{href:"/login"},o.default.createElement("span",null,"Sign In"))," for Past Transactions")):o.default.createElement("div",null,a===u.WEEK?this.renderInnerTransactioncard(l):null,a===u.MONTH?this.renderInnerTransactioncard(l):null,a===u.YEAR?this.renderInnerTransactioncard(l):null)))),o.default.createElement("div",{className:"viewMoreArrow",onClick:function(){return e.clickViewMore()}},o.default.createElement("svg",{className:s?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),o.default.createElement("div",{className:"posRel"},o.default.createElement("div",{ref:"addBtnContainer",className:"addBtnContainer "},o.default.createElement("div",{className:""},o.default.createElement("span",{className:"addBtn",onClick:function(){return e.newExpense(!0)}}," + ")))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=(t.viewMore,this.currentTabData()),s=r.standing,l=void 0===s?void 0:s,d=r.spent,f=void 0===d?void 0:d,p=r.plotData,m=void 0===p?void 0:p,h=r.incomeList,y=void 0===h?void 0:h;return o.default.createElement("div",{className:""},o.default.createElement("div",null,o.default.createElement("div",{ref:"backDrop",className:"transition2a zi1 "+(a?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),o.default.createElement("div",{ref:"mainContent",className:"mainContent"},o.default.createElement("div",{className:""},o.default.createElement("div",{className:"first-half-landing"}),o.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 "},o.default.createElement("div",{className:"standing"},o.default.createElement("span",{className:"left-menu-container",onClick:this.leftMenuClick},o.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),o.default.createElement("div",{className:"heading"},o.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),o.default.createElement("div",null,o.default.createElement("span",{className:"f18"},"₹ "),o.default.createElement("span",{className:"standingAmt"},void 0!==l?l:"0")),o.default.createElement("div",{className:"textCenter"},o.default.createElement("div",null,o.default.createElement("span",{className:"f11"},this.getCurrentDate())))),o.default.createElement("div",{className:"expenseDaysBtn"},o.default.createElement("span",{className:"dayTypeBtn "+(n===u.WEEK?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.WEEK)}},"Week"),o.default.createElement("span",{className:"dayTypeBtn "+(n===u.MONTH?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.MONTH)}},"Month"),o.default.createElement("span",{className:"dayTypeBtn "+(n===u.YEAR?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.YEAR)}},"Year")),o.default.createElement("div",{className:"spentIncomeSection"},o.default.createElement("div",{className:"in-bl "},o.default.createElement("div",{className:"fl in-bl spentIcon"},o.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==f?f:"0"))),o.default.createElement("div",{className:"in-bl  "},o.default.createElement("div",{className:"fl in-bl incomeIcon "},o.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},o.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),o.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(y&&void 0!==y.amount?y.amount:"0")))),this.getTransactionCard())),m&&m.perDivisionData&&m.perDivisionData.length>0?o.default.createElement("div",{className:"other-half-landing"},o.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},o.default.createElement("div",{className:"textCenter trSumaryHeading fb"},o.default.createElement("span",null,"Expense Trends")),n===u.WEEK?o.default.createElement(c.default,{plotData:m,tab:n}):null,n===u.MONTH?o.default.createElement(c.default,{plotData:m,tab:n}):null,n===u.YEAR?o.default.createElement(c.default,{plotData:m,tab:n}):null)):null)),a?o.default.createElement("div",null,o.default.createElement(i.default,{newExpense:this.newExpense})):null)}}]),t}();t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),i=(a=o)&&a.__esModule?a:{default:a},l=n(4),u=n(1);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n),n.state={type:"expense",amount:"",category:"",day:"",month:"",year:"",error:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),s(t,[{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){e&&this.state.error.amount?this.setState({amount:e,error:{}}):this.setState({amount:e})}},{key:"changeCategory",value:function(e){e&&this.state.error.category?this.setState({category:e,error:{}}):this.setState({category:e})}},{key:"removeDateError",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year;new Date(parseInt(a),parseInt(n),parseInt(t))>new Date||this.setState({error:{}})}},{key:"changeDate",value:function(e){var t=this;if(e===u.TODAY){var n=new Date;this.setState({todayTap:!0,yesterdayTap:!1,day:n.getDate(),month:n.getMonth(),year:n.getFullYear()},function(){t.removeDateError()})}else if(e==u.YESTERDAY){var a=new Date,s=new Date(a.setDate(a.getDate()-1));this.setState({todayTap:!1,yesterdayTap:!0,day:s.getDate(),month:s.getMonth(),year:s.getFullYear()},function(){t.removeDateError()})}else this.setState(r({},e),function(){t.removeDateError()})}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return r.test(t)&&r.test(n)&&/^\d{4}$/.test(a)?new Date(parseInt(a),parseInt(n),parseInt(t))>new Date?(this.setState({error:{date:"Please do not Provide Future Date!"}}),!1):(this.date=new Date(parseInt(a),parseInt(n)),!0):(this.setState({error:{date:"Please provide a Valid Date!"}}),!1)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return t&&/^\d+$/.test(t)?n?!!this.isValidDate():(this.setState({error:{category:"Please provide a Valid Category"}}),!1):(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category;if(this.validateParams()){var s={amount:n,type:a,date:this.date,category:r};(0,l.new_expense)(s).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.props.newExpense(!1,!1)})}}},{key:"renderOptions",value:function(e){var t=[];if("day"===e){t.push(i.default.createElement("option",null,"DD"));for(var n=1;n<32;n++)t.push(i.default.createElement("option",{value:n},n))}else if("month"===e){t.push(i.default.createElement("option",null,"MM"));for(var a=0;a<12;a++)t.push(i.default.createElement("option",{value:a},u.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(i.default.createElement("option",null,"YY"));for(var r=2020;r>2e3;r--)t.push(i.default.createElement("option",{value:r},r))}return t}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),s=t.error;return i.default.createElement("div",{className:"newExpenseContainer zi2"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement("span",{className:"newBtn "+("expense"===n?"selectedType":""),onClick:function(){return e.selectType("expense")}},"Expense"),i.default.createElement("span",{className:"newBtn "+("income"===n?"selectedType":""),onClick:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{className:"padL10 "+(s.amount?"redBrdrBtm":""),type:"text",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),s.amount?i.default.createElement("div",{className:"errorDiv"},s.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{className:"padL10 "+(s.category?"redBrdrBtm":""),type:"text",placeholder:"Category",onChange:function(t){return e.changeCategory(t.target.value)},value:r}),s.category?i.default.createElement("div",{className:"errorDiv"},s.category):null),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",onChange:function(t){return e.changeDate({day:t.target.value})},value:this.state.day},this.renderOptions("day")),i.default.createElement("select",{ref:"month",onChange:function(t){return e.changeDate({month:t.target.value})},value:this.state.month},this.renderOptions("month")),i.default.createElement("select",{ref:"year",onChange:function(t){return e.changeDate({year:t.target.value})},value:this.state.year},this.renderOptions("year")),i.default.createElement("div",{className:"mt20"},i.default.createElement("span",{className:"m10 "+(this.state.todayTap?"activeTapOption":"tapOption"),onClick:function(){return e.changeDate(u.TODAY)}},"Today"),i.default.createElement("span",{className:"m10 "+(this.state.yesterdayTap?"activeTapOption":"tapOption"),onClick:function(){return e.changeDate(u.YESTERDAY)}},"Yesterday")),s.date?i.default.createElement("div",{className:"mt10 errorDiv"},s.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement("div",{className:"submitBtn",onClick:this.submitNewExpense},"Done")))}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),o=(a=s)&&a.__esModule?a:{default:a},i=n(1);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"renderPoints",value:function(e,t){for(var n=[],a=this.props.tab,r=0,s=1;s<e.length-1;s++){var l="";if(a===i.WEEK)l=i.WEEKNAMESHORT[r++].toUpperCase();else if(a===i.YEAR)l=i.MONTHSNAMESHORT[r++].toUpperCase();else if(a===i.MONTH){if(s%2!=0)continue;l=s}n.push(o.default.createElement("g",{key:"group_"+s},o.default.createElement("a",null,o.default.createElement("text",{className:"fb",x:e[s],fill:"#757575",y:t[s]-5,fontSize:"5",textAnchor:"middle"},l),o.default.createElement("circle",{cx:e[s],cy:t[s],stroke:"#4688F1",fill:"#4688F1",r:"1",strokeWidth:"1"}))))}return n}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],s=i.DIVISIONLENGTH[n],l=i.MAXLENGTHPERTAB[n],u=t.maxAmount,c=180/s,d=n===i.MONTH?0:-1,f="";for(a.push(0),r.push(115),t.perDivisionData.forEach(function(e){for(;e.division>d;){var t=a[a.length-1];if(a.push(t+c),e.division===d+1){var n=e.amount/u*100;r.push(115-1.15*n)}else r.push(115);d++}});l>d;){var p=a[a.length-1];a.push(p+c),r.push(115),d++}var m=a[a.length-1];a.push(m+c),r.push(115);for(var h=0;h<a.length;h++)f+=" "+a[h]+","+r[h]+" ";return f?o.default.createElement("div",null,o.default.createElement("svg",{viewBox:"-5 -10 215 130",style:{margin:"10px"}},o.default.createElement("polyline",{points:f,className:"graphPlotLine"}),this.renderPoints(a,r))):null}},{key:"render",value:function(){return o.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=l},function(e,t,n){"use strict";var a=n(2);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getExpenseSummary=t.getExpenseData=t.newExpense=t.getUserInfo=t.logout=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=l(n(2)),s=(l(n(6)),l(n(9))),o=l(n(10)),i=n(1);function l(e){return e&&e.__esModule?e:{default:e}}t.signUp=function(e,t){var n=e.body,a=n.username,s=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=n.emailId,c=void 0===u?"":u,d=new o.default({_id:r.default.Types.ObjectId(),username:s,password:l,emailId:c});o.default.find({username:s}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):d.save().then(function(n){e.session._userId=n.id,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,s=n.password,i=void 0===s?"":s;n.emailId;console.log(e.session.user),o.default.findOne({username:r,password:i}).then(function(n){n?(e.session._userId=n.id,t.send({error:!1,msg:"success"})):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.logout=function(e,t){e.session._userId=null,t.send({error:!1,msg:"success"})},t.getUserInfo=function(e,t){if(e.session._userId){var n=r.default.Types.ObjectId(e.session._userId);o.default.findOne({_id:n}).then(function(e){if(e){var n=e.username;t.send({userInfo:{username:n}})}else t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})}else t.send(200).send({error:!0})},t.newExpense=function(e,t){var n=e.body,o=n.amount,i=n.category,l=n.date,u=n.type;o=parseInt(o);var c=(l=new Date(l)).getMonth(),d=l.getFullYear(),f=new Date(d,c,1).getDay(),p=Math.ceil((f+l.getDate())/7),m=l.getDay(),h=l.getDate(),y={amount:o,category:i,date:l,type:u,ww:p,dow:m,mm:c,yy:d,dd:h};new s.default(a({user_id:r.default.Types.ObjectId(e.session._userId)},y)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818");function o(e,n){if(e)respond.send(500).send(e);else{var a={},r={};Object.keys(n).map(function(e){"expense"===n[e].type?a=n[e]:"income"===n[e].type&&(r=n[e])});var s=void 0,o=void 0;a&&a.transactionList?(a.transactionList.map(function(e){var t=e.amount/(a.amount/100);e.percent=Math.round(100*t)/100}),s=a.amount):s=0,r&&r.transactionList?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),o=r.amount-s):o=0-s,t.send({expenseList:a,incomeList:r,spent:s,standing:o})}}var l={$group:{_id:{category:"$category",type:"$type"},type:{$first:"$type"},category:{$first:"$category"},amount:{$sum:"$amount"}}},u={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount"}}}},c={$unwind:"$transactionList"},d={$sort:{"transactionList.amount":-1}},f={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},p=e.body,m=p.tab,h=p.ww,y=p.mm,v=p.yy;p.dow;m===i.YEAR?s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o):m===i.MONTH?s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(y)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o):m===i.WEEK&&s.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(y)}},{$match:{ww:parseInt(h)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(o)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var o=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818"),l=e.body,u=l.tab,c=l.yy,d=l.mm,f=l.ww;u===i.YEAR?s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.MONTH?s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{mm:d}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.WEEK&&s.default.aggregate([{$match:{user_id:o}},{$match:{yy:c}},{$match:{mm:d}},{$match:{ww:f}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,