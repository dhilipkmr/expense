!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=7)}([function(e,t){e.exports=require("react")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Ripple=void 0;var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.renderOptions=function(e){var t=[];if("day"===e){t.push(i.default.createElement("option",null,"Day"));for(var n=1;n<32;n++)t.push(i.default.createElement("option",{key:"day_"+n,value:n},n))}else if("month"===e){t.push(i.default.createElement("option",null,"Month"));for(var a=0;a<12;a++)t.push(i.default.createElement("option",{key:"month_"+a,value:a},l.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(i.default.createElement("option",null,"Year"));for(var r=2020;r>2e3;r--)t.push(i.default.createElement("option",{key:"year_"+r,value:r},r))}else if("week"===e){t.push(i.default.createElement("option",null,"Week"));for(var o=1;o<6;o++)t.push(i.default.createElement("option",{key:"week_"+o,value:o},o))}return t},t.formatDate=function(e){var t=void 0;t="object"!==(void 0===e?"undefined":r(e))?new Date(e):e;var n="";return n+=t.getDate()+" "+l.MONTHSNAMESHORT[t.getMonth()]+" "+t.getFullYear()},t.amountOnGraph=function(e){if(""===e)return"";parseFloat(e,10);return e>1e3?Math.round(10*parseFloat(e/1e3,10))/10+"K":e};var o,s=n(0),i=(o=s)&&o.__esModule?o:{default:o},l=n(2);t.Ripple=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),a(t,[{key:"debounce",value:function(e,t){var n;return n=void 0,function(){var a,r;return r=this,a=arguments,clearTimeout(n),n=setTimeout(function(){return e.apply(r,a)},t)}}},{key:"showRipple",value:function(e){var t,n,a,r,o;return this,n=document.createElement("span"),a=this.offsetWidth,t=this.getBoundingClientRect(),o=e.pageX-t.left-a/2,r="top:"+(e.pageY-t.top-a/2)+"px; left: "+o+"px; height: "+a+"px; width: "+a+"px;",this.rippleContainer.appendChild(n),n.setAttribute("style",r)}},{key:"cleanUp",value:function(){for(;this.rippleContainer.firstChild;)this.rippleContainer.removeChild(this.rippleContainer.firstChild)}},{key:"componentDidMount",value:function(){var e=this.refs.targetElement,t=document.createElement("div");t.className="ripple--container",e.addEventListener("mousedown",this.showRipple),e.addEventListener("mouseup",this.debounce(this.cleanUp,2e3)),e.rippleContainer=t,e.appendChild(t)}},{key:"render",value:function(){var e=this.props,t=e.classes,n=void 0===t?"":t,a=e.onClickHandler,r=void 0===a?null:a;return i.default.createElement("div",{ref:"targetElement",className:n,onClick:r,ripple:"ripple"},this.props.children?this.props.children:null)}}]),t}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MAXLENGTHPERTAB={month:31,year:11,week:6},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t.WEEKNAMESHORT=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t.TODAY="today",t.YESTERDAY="yesterday"},function(e,t){e.exports=require("react-router-dom")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getFrequentCategories=t.edit_expense=t.deleteExpenseDate=t.get_expense_summary=t.get_expense_data=t.new_expense=t.logoutUser=t.getUserInfo=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(18),s=(a=o)&&a.__esModule?a:{default:a};t.signup=function(e){return s.default.post("/signup/",r({},e))},t.signin=function(e){return s.default.post("/signin/",r({},e))},t.getUserInfo=function(){return s.default.post("/userinfo/",{})},t.logoutUser=function(){return s.default.post("/logout/",{})},t.new_expense=function(e){return s.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return s.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return s.default.post("/get_expense_summary/",e)},t.deleteExpenseDate=function(e){return s.default.post("/delete_expense_date/",e)},t.edit_expense=function(e){return s.default.post("/edit_expense/",e)},t.getFrequentCategories=function(){return s.default.get("/getFrequentCategories/")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(13);s(n(8));var a=s(n(14)),r=s(n(15));s(n(16));n(25);var o=n(26);function s(e){return e&&e.__esModule?e:{default:e}}n(8);var i=n(27),l=n(28)(i),u=(0,a.default)(),c=process.env.PORT;u.use(i({secret:"foo",resave:!0,store:new l({url:process.env.MONGOLAB_URI})})),u.use(r.default.urlencoded({extended:!1})),u.use(r.default.json()),u.use(a.default.static("build/public")),u.use("/styles",a.default.static("src/pages/styles")),u.use(a.default.static("src/pages/static")),u.post("/signup",o.signUp),u.post("/signin",o.signIn),u.post("/logout",o.logout),u.post("/userinfo",o.getUserInfo),u.post("/new_expense",o.newExpense),u.post("/get_expense_data",o.getExpenseData),u.post("/get_expense_summary",o.getExpenseSummary),u.post("/delete_expense_date",o.deleteExpenseDate),u.post("/edit_expense",o.editExpense),u.get("/getFrequentCategories",o.getFrequentCategories);u.get("*",function(e,t){t.send('\n        <html>\n            <head>\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="manifest" href="/manifest.json">\n                <link rel="icon" href="/img/budget64.png">\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link rel="stylesheet" type="text/css" href="/styles/notfound.css">\n                <link rel="stylesheet" type="text/css" href="/styles/popup.css">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src = "/swRegisterer.js">\n                <\/script>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>')}),u.listen(c,function(){console.log("Server Started on Port: ",c)}),t.default=u},function(e,t,n){"use strict"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=c(o),i=c(n(5)),l=n(6),u=n(1);function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.signoutUser=n.signoutUser.bind(n),n.state={username:"",password:"",signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login",load:!window.signedIn},window.signedIn&&n.signoutUser(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"signoutUser",value:function(){(0,l.logoutUser)().then(function(e){if(!e.data.error)return window.signedIn=!1,console.log("Signing out success"),void window.location.reload();console.log("unable to signout user"),window.location.reload()}).catch(function(){console.log("unable to signout user"),window.location.reload()})}},{key:"head",value:function(){return s.default.createElement(i.default,null,s.default.createElement("title",null,"Expense Login"))}},{key:"successful",value:function(e){e.data&&!e.data.error?(this.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):this.setState(a({},e.data)),e.data&&e.data.error&&this.resetButtonText()}},{key:"isValid",value:function(){return this.state.username.length<5?(this.setState({error:!0,msg:"Username must be greater than 4 Characters"}),!1):!(this.state.password.length<8)||(this.setState({error:!0,msg:"Password must be greater than 7 Characters"}),!1)}},{key:"resetButtonText",value:function(){this.setState({signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login"})}},{key:"signUp",value:function(){var e=this;this.isValid()&&(this.setState({signupText:"Signing up..."}),(0,l.signup)({username:this.state.username,password:this.state.password}).then(function(t){e.successful(t)}).catch(function(t){e.resetButtonText(),console.log("Failed to Signup")}))}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(e||this.isValid())&&(0,l.signin)({username:a,password:r}).then(function(e){t.successful(e)}).catch(function(e){t.resetButtonText(),console.log("Failed to SignIn",e)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.signinText,a=t.signupText,r=t.continueText;return s.default.createElement("div",null,this.head(),this.state.load&&s.default.createElement("div",null,s.default.createElement("div",{className:""},s.default.createElement("div",{className:"fieldsDiv padB10"},s.default.createElement("div",{className:"username"},s.default.createElement("input",{className:"loginInput ",id:"loginUsername",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),s.default.createElement("div",{className:"password padT10"},s.default.createElement("input",{className:"loginInput ",id:"loginPwd",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),this.state.error&&s.default.createElement("div",{id:"errorDiv",className:"textCenter red "},this.state.msg),s.default.createElement("div",{className:"textCenter "},s.default.createElement("div",{className:"new di"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns themeBg",onClickHandler:function(){return e.signIn(!1)}},n)),s.default.createElement("div",{className:"new di"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns themeBg",onClickHandler:this.signUp},a))),s.default.createElement("div",{className:"textCenter "},s.default.createElement("div",{className:"new"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns testLogin themeBg",onClickHandler:function(){return e.signIn(!0)}},r))))))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(4));r(n(11));function r(e){return e&&e.__esModule?e:{default:e}}var o=a.default.model("Expenses",{token:{type:String,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},description:{type:String,required:!1,trim:!0},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(4)),r=(o(n(10)),o(n(12)));function o(e){return e&&e.__esModule?e:{default:e}}var s=new a.default.Schema({_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},token:{type:String,required:!1},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});function i(e,t){r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt for Token",n):r.default.hash(e._id.toHexString()+e.password.toString(),a,function(n,a){n?console.log("Unable to generate Hash for Token",n):(e.token=a,t())})})}s.pre("save",function(e){var t=this;t.isModified("password")?r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt",n):r.default.hash(t.password,a,function(n,a){n?console.log("Unable to generate Hash",n):(t.password=a,i(t,e))})}):i(t,e)});var l=a.default.model("Users",s);t.default=l},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=i(r),s=(n(17),i(n(9)),i(n(19)));n(3);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return o.default.createElement(s.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("react-router")},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(0)),r=n(3),o=l(n(9)),s=l(n(20)),i=l(n(21));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(o.default,e)}}),a.default.createElement(r.Route,{path:"/",exact:!0,render:function(e){return a.default.createElement(o.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(i.default,e)}}),a.default.createElement(r.Route,{path:"*",render:function(e){return a.default.createElement(s.default,e)}}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=l(r),s=l(n(5)),i=n(3);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return o.default.createElement(s.default,null,o.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){return o.default.createElement("div",null,this.head(),o.default.createElement("div",{className:"notfoundContainer"},o.default.createElement("h5",{className:"notFoundText fb textCenter"},"Sorry, this page does not exist!")),o.default.createElement("div",null,o.default.createElement("ul",{className:"notfoundUL textCenter"},o.default.createElement("li",null,o.default.createElement("div",{className:"blueBtn"},o.default.createElement(i.NavLink,{to:"/login",className:"white"}," Login "))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=m(o),i=(m(n(5)),m(n(22))),l=n(6),u=n(2),c=m(n(23)),d=n(1),f=m(n(24)),p=n(3);function m(e){return e&&e.__esModule?e:{default:e}}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.cancelPopup=n.cancelPopup.bind(n),n.confirmPopup=n.confirmPopup.bind(n),n.deleteExpense=n.deleteExpense.bind(n),n.editExpense=n.editExpense.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,viewMore:!1,weekData:{},monthData:{},yearData:{},selectorWW:"",selectorMM:"",selectorYY:"",activeFilter:"spentRate"},n.viewedMore={},n.userInfo(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary(),this.updateTogglerContent()}},{key:"updateTogglerContent",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"currentTabData",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"findCurrentDataProp",value:function(){var e=this.state.activeTab;return e===u.WEEK?"weekData":e===u.MONTH?"monthData":e===u.YEAR?"yearData":void 0}},{key:"getParams",value:function(e){var t=this.state,n=t.activeTab,a=t.activeFilter,r=this.currentTabData(),o=r.dd,s=r.mm,i=r.yy,l=r.ww,u=i&&void 0!==s&&o?new Date(i,s,o):new Date,c=u.getMonth(),d=u.getDay(),f=u.getDate(),p=u.getFullYear();if(!l){var m=new Date(p,c,1).getDay();l=Math.ceil((m+u.getDate())/7)}return this.state.selectorWW&&void 0!==this.state.selectorMM&&this.state.selectorYY&&(p=parseInt(this.state.selectorYY),c=parseInt(this.state.selectorMM),l=parseInt(this.state.selectorWW)),{tab:n,mm:c,dow:d,ww:l,yy:p,dd:f,activeFilter:a}}},{key:"userInfo",value:function(){var e=this;(0,l.getUserInfo)().then(function(t){t.data&&t.data.userInfo?e.setState({userInfo:t.data.userInfo}):e.navigateToSignIn()}).catch(function(){e.navigateToSignIn()})}},{key:"getExpenseSummary",value:function(e,t){var n=this,r=this.getParams(t),o=this.findCurrentDataProp();(0,l.get_expense_summary)(r).then(function(e){n.setState(h({},o,a({},n.state[o],{plotData:a({},e.data)})))},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(e,t){var n=this,r=this.getParams(t),o=this.findCurrentDataProp();(0,l.get_expense_data)(r).then(function(e){var t,r=e.data,s=r.expenseList,i=r.incomeList,l=r.standing,u=r.spent,c=r.ww,d=r.yy,f=r.mm,p=r.dd;n.setState((h(t={},o,a({},n.state[o],{expenseList:s,incomeList:i,standing:l,spent:u,ww:c,yy:d,mm:f,dd:p})),h(t,"selectorMM",f),h(t,"selectorWW",c),h(t,"selectorYY",d),t))},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.otherHalfLandingTxt&&(this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")),this.refs.addBtnContainer.classList.toggle("dn")}},{key:"navigateToSignIn",value:function(){this.state.userInfo?(0,l.logoutUser)().then(function(){window.location.href="/login"}):window.location.href="/login"}},{key:"renderLeftMenuBar",value:function(){var e=this.state.userInfo;return s.default.createElement("div",{className:"menuBar"},s.default.createElement("div",{ref:"popup",className:"popup zi9 ",onClick:this.leftMenuClick},s.default.createElement("div",{className:"sideBar in-bl fl"},s.default.createElement(d.Ripple,{classes:"menu-option",onClickHandler:this.navigateToSignIn},e?"Logout":"Sign In"),s.default.createElement(d.Ripple,{classes:"menu-option",onClickHandler:function(){return window.open("https://dhilipkmr.github.io/materializedResume/")}},"About Me"))))}},{key:"newExpense",value:function(e,t,n){var a=this;t?this.setState({showNewExpense:e,editExpense:void 0!==n?n:this.state.editExpense,weekData:{},monthData:{},yearData:{}},function(){a.getExpense(t),a.getExpenseSummary(t)}):this.setState({showNewExpense:e,editExpense:n})}},{key:"cancelPopup",value:function(){this.setState({showPopup:!1})}},{key:"confirmPopup",value:function(){var e=this;this.setState({showPopup:!1}),(0,l.deleteExpenseDate)({id:this.state.deleteTransactionObj.id}).then(function(t){t&&(e.getExpense(!0,!0),e.getExpenseSummary(!0,!0))})}},{key:"editExpense",value:function(e){this.setState({editExpense:!0,editTransactionObj:e})}},{key:"deleteExpense",value:function(e){this.setState({showPopup:!0,deleteTransactionObj:e})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(e){var t=this;if(!e){for(var n=[],r=0;r<2;r++)n.push(s.default.createElement("div",{key:"transaction_type_"+r},s.default.createElement("div",{className:"transactedCardInner"},s.default.createElement("div",{className:"cardInnerheading"},s.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),s.default.createElement("div",{className:"progressBar bl textCenter mt30"})),s.default.createElement("div",{className:"cardBrdrBtm"})));return n}return this.currentTabData().expenseList.transactionList.map(function(e,n){return t.state.viewMore||t.viewedMore[t.state.activeTab]||!t.state.viewMore&&n<2?(t.state.viewMore&&(t.viewedMore[t.state.activeTab]=!0),s.default.createElement("div",{key:"transaction_type_"+n},s.default.createElement("div",{className:"transactedCardInner"},s.default.createElement("div",{className:"cardInnerheading"},s.default.createElement("div",{className:"cat w33 in-bl tl"},e.category),s.default.createElement("div",{className:"cat w33 in-bl tc"},(0,d.formatDate)(e.date)),s.default.createElement("div",{className:"cat w33 in-bl tr"},s.default.createElement("svg",{onClick:function(){return t.editExpense(a({},e))},height:"15px",viewBox:"0 -1 450 400",width:"15px"},s.default.createElement("path",{d:"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0"})))),s.default.createElement("div",{className:"progressBar bl textCenter marginT25"},s.default.createElement("div",{className:"filled",style:{maxWidth:e.percent+"%"}})),s.default.createElement("div",null,s.default.createElement("div",{className:"padR15 padL10 cat w33 in-bl tl"},"₹"+e.amount),s.default.createElement("div",{className:"cat w33 in-bl tc"},e.percent+" %"),s.default.createElement("div",{className:"padR7 cat w33 in-bl tr"},s.default.createElement("svg",{onClick:function(){return t.deleteExpense({id:e.id})},fill:"#a20404",height:"15px",viewBox:"-40 0 450 400",width:"15px"},s.default.createElement("path",{d:"m232.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m114.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m28.398438 127.121094v246.378906c0 14.5625 5.339843 28.238281 14.667968 38.050781 9.285156 9.839844 22.207032 15.425781 35.730469 15.449219h189.203125c13.527344-.023438 26.449219-5.609375 35.730469-15.449219 9.328125-9.8125 14.667969-23.488281 14.667969-38.050781v-246.378906c18.542968-4.921875 30.558593-22.835938 28.078124-41.863282-2.484374-19.023437-18.691406-33.253906-37.878906-33.257812h-51.199218v-12.5c.058593-10.511719-4.097657-20.605469-11.539063-28.03125-7.441406-7.421875-17.550781-11.5546875-28.0625-11.46875h-88.796875c-10.511719-.0859375-20.621094 4.046875-28.0625 11.46875-7.441406 7.425781-11.597656 17.519531-11.539062 28.03125v12.5h-51.199219c-19.1875.003906-35.394531 14.234375-37.878907 33.257812-2.480468 19.027344 9.535157 36.941407 28.078126 41.863282zm239.601562 279.878906h-189.203125c-17.097656 0-30.398437-14.6875-30.398437-33.5v-245.5h250v245.5c0 18.8125-13.300782 33.5-30.398438 33.5zm-158.601562-367.5c-.066407-5.207031 1.980468-10.21875 5.675781-13.894531 3.691406-3.675781 8.714843-5.695313 13.925781-5.605469h88.796875c5.210937-.089844 10.234375 1.929688 13.925781 5.605469 3.695313 3.671875 5.742188 8.6875 5.675782 13.894531v12.5h-128zm-71.199219 32.5h270.398437c9.941406 0 18 8.058594 18 18s-8.058594 18-18 18h-270.398437c-9.941407 0-18-8.058594-18-18s8.058593-18 18-18zm0 0"}),s.default.createElement("path",{d:"m173.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}))))),s.default.createElement("div",{className:"cardBrdrBtm"}))):null})}},{key:"changeFilter",value:function(e){var t=this;"date"===e?this.setState({activeFilter:"date"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)}):"spentRate"===e&&this.setState({activeFilter:"spentRate"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)})}},{key:"getTransactionCard",value:function(){var e=this,t=this.currentTabData(),n=this.state,a=n.activeTab,r=n.viewMore,o=void 0!==r&&r,i=n.userInfo,l=n.activeFilter,c=t.expenseList;return s.default.createElement("div",null,s.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(o?"showAllTransaction":"")},s.default.createElement("div",{className:"textCenter mt5"},s.default.createElement(d.Ripple,{classes:"in-bl sortType sortTypeLeft fs14 "+("spentRate"===l?" leftActiveRight ":""),onClickHandler:function(){return e.changeFilter("spentRate")}},"Spent Rate "),s.default.createElement(d.Ripple,{classes:"in-bl sortType sortTypeRight fs14 "+("spentRate"===l?" leftActiveLeft ":"rightActiveRight"),onClickHandler:function(){return e.changeFilter("date")}}," Date ")),s.default.createElement("div",null,s.default.createElement("div",{className:"transactScroller"},void 0!==c&&0===Object.keys(c).length?s.default.createElement("div",{className:"textCenter padT20 mh10p"},s.default.createElement("div",{className:"tu ",onClick:function(){return e.newExpense(!0)}},"Add Transaction "),!i&&s.default.createElement("div",{className:"padT10 padB20"},s.default.createElement("a",{href:"/login"},s.default.createElement("span",null,"Sign In"))," for Past Transactions")):s.default.createElement("div",null,a===u.WEEK?this.renderInnerTransactioncard(c):null,a===u.MONTH?this.renderInnerTransactioncard(c):null,a===u.YEAR?this.renderInnerTransactioncard(c):null)))),s.default.createElement(d.Ripple,{classes:"viewMoreArrow",onClickHandler:function(){return e.clickViewMore()}},s.default.createElement("svg",{className:o?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),s.default.createElement("div",{className:"posRel"},s.default.createElement("div",{ref:"addBtnContainer",className:"addBtnContainer "},s.default.createElement("div",{className:""},s.default.createElement(d.Ripple,{classes:"in-bl addBtn themeBg",onClickHandler:function(){return e.newExpense(!0)}}," + ")))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"getTogglerHeader",value:function(){var e=this.state.activeTab,t=this.currentTabData(),n=t.mm,a=t.yy,r=t.ww,o="",s=!1,i=!1;return e===u.MONTH?(o=void 0!==n?u.MONTHSNAME[n]:"----",s=0===n,i=11===n):e===u.WEEK?(o=r?"Week "+r:"----",s=1===r,i=5===r):(o=a||"----",i=2018===a),{togglerHeader:o,isPrevDisabled:s,isNextDisabled:i}}},{key:"toggleType",value:function(e,t){var n=this,r={};e===u.WEEK?r={selectorWW:t}:e===u.MONTH?r={selectorMM:t}:e===u.YEAR&&(r={selectorYY:t}),this.setState(a({},r),function(){n.getExpense(!0,!0),n.getExpenseSummary(!0,!0)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=(t.viewMore,t.editExpense),o=t.editTransactionObj,l=this.currentTabData(),m=l.standing,h=void 0===m?void 0:m,g=l.spent,v=void 0===g?void 0:g,y=l.plotData,E=void 0===y?void 0:y,b=l.incomeList,w=void 0===b?void 0:b,x=this.getTogglerHeader();x.togglerHeader,x.isPrevDisabled,x.isNextDisabled;return s.default.createElement("div",{className:""},s.default.createElement(p.Prompt,{when:!a,message:function(){return"Going back will Log you out."}}),s.default.createElement("div",null,s.default.createElement("div",{ref:"backDrop",className:"transition1a zi9 "+(a||r?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),s.default.createElement("div",{ref:"mainContent",className:"mainContent"},s.default.createElement("div",{className:""},s.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 first-half-landing"},s.default.createElement("div",{className:"standing"},s.default.createElement(d.Ripple,{classes:"left-menu-container",onClickHandler:this.leftMenuClick},s.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),s.default.createElement("div",{className:"heading"},s.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),s.default.createElement("div",null,s.default.createElement("span",{className:"f18"},"₹ "),s.default.createElement("span",{className:"standingAmt"},void 0!==h?h:"0")),s.default.createElement("div",{className:"textCenter"},s.default.createElement("div",null,s.default.createElement("span",{className:"f11"},this.getCurrentDate())))),s.default.createElement("div",{className:"expenseDaysBtn w85 m10a"},s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("div",null,s.default.createElement("select",{onChange:function(t){return e.toggleType(u.WEEK,t.target.value)},id:"weekSelector db white",value:this.state.selectorWW},(0,d.renderOptions)("week")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.WEEK)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.WEEK?"dayTypeBtn-active":"")},"Week"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.WEEK?"w60":"")}))),s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("select",{onChange:function(t){return e.toggleType(u.MONTH,t.target.value)},id:"monthSelector db white",value:this.state.selectorMM},(0,d.renderOptions)("month")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.MONTH)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.MONTH?"dayTypeBtn-active":"")},"Month"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.MONTH?"w60":"")})),s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("select",{onChange:function(t){return e.toggleType(u.YEAR,t.target.value)},id:"yearSelector db white",value:this.state.selectorYY},(0,d.renderOptions)("year")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.YEAR)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.YEAR?"dayTypeBtn-active":"")},"Year"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.YEAR?"w60":"")}))),s.default.createElement("div",{className:"spentIncomeSection"},s.default.createElement("div",{className:"in-bl "},s.default.createElement("div",{className:"fl in-bl spentIcon"},s.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==v?v:"0"))),s.default.createElement("div",{className:"in-bl  "},s.default.createElement("div",{className:"fl in-bl incomeIcon "},s.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(w&&void 0!==w.amount?w.amount:"0")))),this.getTransactionCard())),E&&E.perDivisionData&&E.perDivisionData.length>0?s.default.createElement("div",{className:"other-half-landing mt10"},s.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},s.default.createElement("div",{className:"textCenter trSumaryHeading fb"},s.default.createElement("span",null,"Expense Trends")),n===u.WEEK?s.default.createElement(c.default,{plotData:E,tab:n}):null,n===u.MONTH?s.default.createElement(c.default,{plotData:E,tab:n}):null,n===u.YEAR?s.default.createElement(c.default,{plotData:E,tab:n}):null)):null)),a?s.default.createElement("div",null,s.default.createElement(i.default,{newExpense:this.newExpense})):null,r?s.default.createElement("div",null,s.default.createElement(i.default,{newExpense:this.newExpense,editTransactionObj:o})):null,this.state.showPopup&&s.default.createElement(f.default,{cancelCallback:this.cancelPopup,confirmCallback:this.confirmPopup}))}}]),t}();t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),i=(a=s)&&a.__esModule?a:{default:a},l=n(6),u=n(2),c=n(1);var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n),n.renderInnerTransactioncard=n.renderInnerTransactioncard.bind(n),n.handleFrequentCategoriesTap=n.handleFrequentCategoriesTap.bind(n),n.onBackPress=n.onBackPress.bind(n);var a="",r="",o="",s="",i="",l="";if(e.editTransactionObj){a=e.editTransactionObj.amount,r=e.editTransactionObj.category,l=e.editTransactionObj.description;var u=new Date(e.editTransactionObj.date);o=u.getDate(),s=u.getMonth(),i=u.getFullYear()}return n.state={type:"expense",amount:a,category:r,description:l,day:o,month:s,year:i,error:{},frequentCategories:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),o(t,[{key:"componentDidMount",value:function(){var e=this;(0,l.getFrequentCategories)().then(function(t){t.data&&!t.data.err?e.setState({frequentCategories:t.data.data.slice(0,5)}):console.log("Unable to get Frequent Categories")}),history.pushState("MODAL","/new_expense"),window.onpopstate=this.onBackPress}},{key:"onBackPress",value:function(e){window.onpopstate=null,this.props.newExpense(!1)}},{key:"renderInnerTransactioncard",value:function(){return i.default.createElement("div",null,i.default.createElement("div",{key:"categoryLoader",className:"transactedCardInner mh62"},i.default.createElement("div",{className:"cardInnerheading dflex dfcenter"},i.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),i.default.createElement("div",{className:"progressBar bl textCenter "})))}},{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){e&&this.state.error.amount?this.setState({amount:e,error:{}}):this.setState({amount:e})}},{key:"changeCategory",value:function(e){e&&this.state.error.category?this.setState({category:e,error:{}}):this.setState({category:e})}},{key:"removeDateError",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year;new Date(parseInt(a),parseInt(n),parseInt(t))>new Date||this.setState({error:{}})}},{key:"getDateData",value:function(e){var t=new Date;if(e===u.YESTERDAY){var n=new Date(t.setDate(t.getDate()-1));t=n}return{day:t.getDate(),month:t.getMonth(),year:t.getFullYear()}}},{key:"changeDate",value:function(e){var t=this;if(e===u.TODAY){var n=this.getDateData(u.TODAY);this.setState(r({todayTap:!0,yesterdayTap:!1},n),function(){t.removeDateError()})}else if(e==u.YESTERDAY){var a=this.getDateData(u.YESTERDAY);this.setState(r({todayTap:!1,yesterdayTap:!0},a),function(){t.removeDateError()})}else this.setState(r({},e),function(){t.removeDateError();var e=t.getDateData(u.TODAY),n=t.getDateData(u.YESTERDAY),a=t.state,r=a.day,o=a.month,s=a.year;r.toString()===e.day.toString()&&o.toString()===e.month.toString()&&s.toString()===e.year.toString()?t.setState({todayTap:!0,yesterdayTap:!1}):r.toString()===n.day.toString()&&o.toString()===n.month.toString()&&s.toString()===n.year.toString()?t.setState({todayTap:!1,yesterdayTap:!0}):t.setState({todayTap:!1,yesterdayTap:!1})})}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return r.test(t)&&r.test(n)&&/^\d{4}$/.test(a)?new Date(parseInt(a),parseInt(n),parseInt(t))>new Date?(this.setState({error:{date:"Please do not Provide Future Date!"}}),!1):(this.date=new Date(parseInt(a),parseInt(n),parseInt(t)),!0):(this.setState({error:{date:"Please provide a Valid Date!"}}),!1)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return t&&/^[1-9][0-9]*$/.test(t)?n?!!this.isValidDate():(this.setState({error:{category:"Please provide a Valid Category"}}),!1):(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category,o=t.description,s=this.validateParams();if(this.setState({disableSubmit:!0}),s){var i=this.date,u=i.getMonth(),c=i.getFullYear(),d=new Date(c,u,1).getDay(),f=Math.ceil((d+i.getDate())/7),p=i.getDay(),m=i.getDate(),h={amount:n,type:a,date:i,mm:u,yy:c,ww:f,dow:p,dd:m,category:r,description:o};h.category=h.category.trim().substring(0,1).toUpperCase()+h.category.trim().substring(1),this.props.editTransactionObj?(h.id=this.props.editTransactionObj.id,(0,l.edit_expense)(h).then(function(t){e.props.newExpense(!1,!0,!1)},function(t){console.log("Unable to Edit Expense",t),e.setState({disableSubmit:!1})})):(0,l.new_expense)(h).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.setState({disableSubmit:!1})})}else this.setState({disableSubmit:!1})}},{key:"handleFrequentCategoriesTap",value:function(e){e.target.classList.contains("ripple--container")&&this.setState({category:e.target.parentElement.innerText})}},{key:"renderFrequentCategories",value:function(){var e=this;return i.default.createElement("div",{className:"tapWrapper",onClick:this.handleFrequentCategoriesTap},this.state.frequentCategories.map(function(t){return i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(e.state.category.toLowerCase()===t.category.toLowerCase()?"activeTapOption themeBg":"tapOption themeBrdr")},t.category)}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),o=t.error,s=t.disableSubmit;return i.default.createElement("div",{className:"newExpenseContainer zi10",id:"expenseContainer"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement(c.Ripple,{classes:"in-bl newBtn "+("expense"===n?"selectedType":""),onClickHandler:function(){return e.selectType("expense")}},"Expense"),i.default.createElement(c.Ripple,{classes:"in-bl newBtn "+("income"===n?"selectedType":""),onClickHandler:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{className:"padL10 w75 "+(o.amount?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newExpAmt",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),i.default.createElement("span",{className:"requiredAshterix"}," * "),o.amount?i.default.createElement("div",{className:"errorDiv"},o.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{className:"padL10 w75 "+(o.category?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newCategAmt",placeholder:"Category",onChange:function(t){return e.changeCategory(t.target.value)},value:r}),i.default.createElement("span",{className:"requiredAshterix"}," * "),o.category?i.default.createElement("div",{className:"errorDiv"},o.category):null,0===this.state.frequentCategories.length?this.renderInnerTransactioncard():this.renderFrequentCategories()),i.default.createElement("div",{className:"descriptionInputWrap tc m-5 mT25 "},i.default.createElement("input",{id:"newDescription",className:"padL10 w75",placeholder:"Description",onChange:function(t){return e.setState({description:t.target.value})},value:this.state.description})),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",className:"w20 ",onChange:function(t){return e.changeDate({day:t.target.value})},value:this.state.day},(0,c.renderOptions)("day")),i.default.createElement("select",{ref:"month",className:"w25 ",onChange:function(t){return e.changeDate({month:t.target.value})},value:this.state.month},(0,c.renderOptions)("month")),i.default.createElement("select",{ref:"year",className:"w20 ",onChange:function(t){return e.changeDate({year:t.target.value})},value:this.state.year},(0,c.renderOptions)("year")),i.default.createElement("div",{className:"tapWrapper"},i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(this.state.todayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClickHandler:function(){return e.changeDate(u.TODAY)}},"Today"),i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(this.state.yesterdayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClickHandler:function(){return e.changeDate(u.YESTERDAY)}},"Yesterday")),o.date?i.default.createElement("div",{className:"mt10 errorDiv"},o.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement(c.Ripple,{classes:"submitBtn themeBg "+(s?"disableBtn":""),onClickHandler:this.submitNewExpense},"Done")))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=(a=o)&&a.__esModule?a:{default:a},i=n(2),l=n(1);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"renderPoints",value:function(e,t,n){for(var a=[],r=this.props.tab,o=0,u=1;u<e.length-1;u++){var c="";if(r===i.WEEK)c=i.WEEKNAMESHORT[o++].toUpperCase();else if(r===i.YEAR)c=i.MONTHSNAMESHORT[o++].toUpperCase();else if(r===i.MONTH){if(u%2!=0)continue;c=u}a.push(s.default.createElement("g",{key:"group_"+u},s.default.createElement("a",null,s.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:t[u]-5,fontSize:"5",textAnchor:"middle"},(0,l.amountOnGraph)(n[u])),s.default.createElement("circle",{cx:e[u],cy:t[u],stroke:"#0757d0",fill:"#0757d0",r:"0.5",strokeWidth:"1"}),s.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:122,fontSize:"5",textAnchor:"middle"},c))))}return a}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],o=[],l=i.DIVISIONLENGTH[n],u=i.MAXLENGTHPERTAB[n],c=t.maxAmount,d=180/l,f=n===i.MONTH?0:-1,p="";for(a.push(0),r.push(115),o.push(""),t.perDivisionData.forEach(function(e){for(;e.division>f;){var t=a[a.length-1];if(a.push(t+d),e.division===f+1){var n=e.amount/c*100;r.push(115-1.15*n),o.push(e.amount)}else r.push(115),o.push("");f++}});u>f;){var m=a[a.length-1];a.push(m+d),r.push(115),f++,o.push("")}var h=a[a.length-1];a.push(h+d),r.push(115),o.push("");for(var g=0;g<a.length;g++)p+=" "+a[g]+","+r[g]+" ";return p?s.default.createElement("div",null,s.default.createElement("svg",{viewBox:window&&window.screen.width>600?"-50 -10 285 210":"-15 -15 220 150",style:{margin:"10px"}},s.default.createElement("polyline",{points:p,className:"graphPlotLine"}),this.renderPoints(a,r,o))):null}},{key:"render",value:function(){return s.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=(a=o)&&a.__esModule?a:{default:a},i=n(1);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props,t=e.cancelCallback,n=e.confirmCallback;return s.default.createElement("div",{className:"popupBackDrop"},s.default.createElement("div",{className:"popupContainer whiteBg"},s.default.createElement("div",{className:"popupHeader"},s.default.createElement("div",{className:"fb fs14 padB10 textCenter"},"Do you want to Delete this transaction?"),s.default.createElement("div",{className:"tr"},s.default.createElement(i.Ripple,{classes:"in-bl newBtn white themeBg in-bl tr mf5 fs12",onClickHandler:n},"Confirm"),s.default.createElement(i.Ripple,{classes:"in-bl newBtn white themeBg in-bl tr mf5 fs12",onClickHandler:t},"Cancel")))))}}]),t}();t.default=l},function(e,t,n){"use strict";var a=n(4);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getFrequentCategories=t.editExpense=t.deleteExpenseDate=t.getExpenseSummary=t.getExpenseData=t.newExpense=t.getUserInfo=t.logout=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=u(n(4)),o=(u(n(7)),u(n(10))),s=u(n(11)),i=n(2),l=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}function c(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}t.signUp=function(e,t){var n=e.body,a=n.username,o=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=(n.emailId,new s.default({_id:r.default.Types.ObjectId(),username:o,password:l}));s.default.find({username:o}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):u.save().then(function(n){e.session.token=n.token,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,o=n.password,i=void 0===o?"":o;n.emailId;console.log(e.session.user),s.default.findOne({username:r}).then(function(n){n?l.default.compare(i,n.password,function(a){a?t.send({error:!0,msg:"Invalid password"}):(e.session.token=n.token,t.send({error:!1,msg:"success"}))}):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.logout=function(e,t){e.session.token=null,t.send({error:!1,msg:"success"})},t.getUserInfo=function(e,t){if(e.session.token){var n=e.session.token;s.default.findOne({token:n}).then(function(e){if(e){var n=e.username;t.send({userInfo:{username:n}})}else t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})}else t.send(200).send({error:!0})},t.newExpense=function(e,t){var n=e.body,r=n.amount,s=n.date,i=e.body,l=i.ww,u=i.dow,c=i.mm,d=i.yy,f=i.dd,p=i.type,m=i.category,h=i.description,g={amount:r=parseInt(r),category:m,date:s=new Date(s),type:p,ww:l,dow:u,mm:c,yy:d,dd:f,description:h};new o.default(a({token:e.session.token},g)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session.token?e.session.token:"";function r(n,a){if(n)respond.send(500).send(n);else{var r={},o={};Object.keys(a).map(function(e){"expense"===a[e].type?r=a[e]:"income"===a[e].type&&(o=a[e])});var s=void 0,i=void 0;r&&r.transactionList?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),s=r.amount):s=0,o&&o.transactionList?(o.transactionList.map(function(e){var t=e.amount/(o.amount/100);e.percent=Math.round(100*t)/100}),i=o.amount-s):i=0-s;var l=e.body,u=l.yy,c=l.mm,d=l.ww,f=l.dd;t.send({dd:f,mm:c,yy:u,ww:d,expenseList:r,incomeList:o,spent:s,standing:i})}}var s={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount",date:"$date",id:"$_id",description:"$description"}}}},l={$unwind:"$transactionList"},u={};u="spentRate"===e.body.activeFilter?{$sort:{"transactionList.amount":-1}}:{$sort:{"transactionList.date":-1}};var c={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},d=e.body,f=d.tab,p=d.ww,m=d.mm,h=d.yy;d.dow;f===i.YEAR?o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.MONTH?o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.WEEK&&o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},{$match:{ww:parseInt(p)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var r=e.session.token?e.session.token:"",s=e.body,l=s.tab,u=s.yy,c=s.mm,d=s.ww;l===i.YEAR?o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.MONTH?o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.WEEK&&o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{ww:d}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)},t.deleteExpenseDate=function(e,t){var n=e.body.id;o.default.findOneAndRemove({_id:n}).then(function(e){t.send(e)})},t.editExpense=function(e,t){var n=e.body,a=n.amount,r=n.date,s=e.body,i=s.id,l=s.ww,u=s.dow,c=s.mm,d=s.yy,f=s.dd,p=s.type,m=s.category,h=s.description;a=parseInt(a),r=new Date(r);o.default.findOneAndUpdate({_id:i},{$set:{amount:a,category:m,date:r,type:p,ww:l,dd:f,mm:c,yy:d,dow:u,description:h}},{upsert:!0,returnNewDocument:!0}).then(function(e){t.send({err:!1})})},t.getFrequentCategories=function(e,t){var n=e.session.token;o.default.aggregate([{$match:{token:n}},{$match:{type:"expense"}},{$group:{_id:"$category",category:{$first:"$category"},count:{$sum:1}}},{$sort:{count:-1}},{$project:{_id:0,category:1,count:1}}]).allowDiskUse(!0).exec(function(e,n){e?t.status(200).send({error:!0,msg:e}):t.status(200).send({error:!1,data:[].concat(c(n))})})}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbnN0YW50cy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3Qtcm91dGVyLWRvbVwiIiwid2VicGFjazovLy9leHRlcm5hbCBcIm1vbmdvb3NlXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3QtaGVsbWV0XCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2FwaUNhbGxzL0FwaUNhbGxzLmpzIiwid2VicGFjazovLy8uL3NlcnZlci9zZXJ2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvTG9naW4uanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL21vZGVscy9leHBlbnNlTW9kZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL21vZGVscy91c2VyTW9kZWwuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmNyeXB0anNcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiYWJlbC1wb2x5ZmlsbFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcImV4cHJlc3NcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiIiwid2VicGFjazovLy8uL3NyYy9hcHAuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3Qtcm91dGVyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYXhpb3NcIiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvcm91dGVzL3JvdXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvY29tcG9uZW50cy9Ob3RGb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvY29tcG9uZW50cy9Ib21lLmpzIiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9jb21wb25lbnRzL05ld0V4cGVuc2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvR3JhcGguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyL2RiL21vbmdvb3NlLmpzIiwid2VicGFjazovLy8uL3NlcnZlci9hcGkvYXBpQ2FsbHMuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzcy1zZXNzaW9uXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiY29ubmVjdC1tb25nb1wiIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwicmVxdWlyZSIsInJlbmRlck9wdGlvbnMiLCJ0eXBlIiwib3B0aW9ucyIsInB1c2giLCJfcmVhY3QyIiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJNT05USFNOQU1FU0hPUlQiLCJmb3JtYXREYXRlIiwiZGF0ZSIsIl90eXBlb2YiLCJEYXRlIiwicmVzdWx0IiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJhbW91bnRPbkdyYXBoIiwidmFsIiwicGFyc2VGbG9hdCIsIk1hdGgiLCJyb3VuZCIsIl9yZWFjdCIsIl9jb25zdGFudHMiLCJSaXBwbGUiLCJwcm9wcyIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiQ29tcG9uZW50IiwiZnVuYyIsImRlbGF5IiwiaW5EZWJvdW5jZSIsInVuZGVmaW5lZCIsImFyZ3MiLCJjb250ZXh0IiwiYXJndW1lbnRzIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImFwcGx5IiwiZSIsInBvcyIsInJpcHBsZXIiLCJzaXplIiwic3R5bGUiLCJ4IiwiZG9jdW1lbnQiLCJvZmZzZXRXaWR0aCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInBhZ2VYIiwibGVmdCIsInBhZ2VZIiwidG9wIiwicmlwcGxlQ29udGFpbmVyIiwiYXBwZW5kQ2hpbGQiLCJzZXRBdHRyaWJ1dGUiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJyaXBwbGUiLCJyZWZzIiwidGFyZ2V0RWxlbWVudCIsImNsYXNzTmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJzaG93UmlwcGxlIiwiZGVib3VuY2UiLCJjbGVhblVwIiwiX3Byb3BzIiwiX3Byb3BzJGNsYXNzZXMiLCJjbGFzc2VzIiwiX3Byb3BzJG9uQ2xpY2tIYW5kbGVyIiwib25DbGlja0hhbmRsZXIiLCJyZWYiLCJvbkNsaWNrIiwiY2hpbGRyZW4iLCJNT05USCIsIllFQVIiLCJXRUVLIiwiRElWSVNJT05MRU5HVEgiLCJtb250aCIsInllYXIiLCJ3ZWVrIiwiTUFYTEVOR1RIUEVSVEFCIiwiTU9OVEhTTkFNRSIsIldFRUtOQU1FU0hPUlQiLCJUT0RBWSIsIllFU1RFUkRBWSIsIl9heGlvcyIsInNpZ251cCIsInBhcmFtcyIsImF4aW9zIiwicG9zdCIsIl9leHRlbmRzIiwic2lnbmluIiwiZ2V0VXNlckluZm8iLCJsb2dvdXRVc2VyIiwibmV3X2V4cGVuc2UiLCJnZXRfZXhwZW5zZV9kYXRhIiwiZ2V0X2V4cGVuc2Vfc3VtbWFyeSIsImRlbGV0ZUV4cGVuc2VEYXRlIiwiZWRpdF9leHBlbnNlIiwiZ2V0RnJlcXVlbnRDYXRlZ29yaWVzIiwiX2FwaUNhbGxzIiwic2Vzc2lvbiIsIk1vbmdvU3RvcmUiLCJhcHAiLCJfZXhwcmVzczIiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJzZWNyZXQiLCJyZXNhdmUiLCJzdG9yZSIsInVybCIsIk1PTkdPTEFCX1VSSSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZXhwcmVzcyIsInN0YXRpYyIsInNpZ25VcCIsInNpZ25JbiIsImxvZ291dCIsIm5ld0V4cGVuc2UiLCJnZXRFeHBlbnNlRGF0YSIsImdldEV4cGVuc2VTdW1tYXJ5IiwiZWRpdEV4cGVuc2UiLCJyZXEiLCJyZXMiLCJzZW5kIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsIl9BcGlDYWxscyIsIl91dGlscyIsIkxvZ2luIiwiX3RoaXMiLCJoZWFkIiwic2lnbm91dFVzZXIiLCJzdGF0ZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJzaWduaW5UZXh0Iiwic2lnbnVwVGV4dCIsImNvbnRpbnVlVGV4dCIsImxvYWQiLCJ3aW5kb3ciLCJzaWduZWRJbiIsInRoZW4iLCJyZXNwIiwiZGF0YSIsImVycm9yIiwibG9jYXRpb24iLCJyZWxvYWQiLCJjYXRjaCIsIl9yZWFjdEhlbG1ldDIiLCJoaXN0b3J5Iiwic2V0U3RhdGUiLCJyZXNldEJ1dHRvblRleHQiLCJsZW5ndGgiLCJtc2ciLCJfdGhpczIiLCJpc1ZhbGlkIiwic3VjY2Vzc2Z1bCIsImVyciIsIndpdGhUZXN0Q3JlZHMiLCJfdGhpczMiLCJfc3RhdGUiLCJfdGhpczQiLCJfc3RhdGUyIiwiaWQiLCJwbGFjZWhvbGRlciIsIm9uQ2hhbmdlIiwidGFyZ2V0IiwiRXhwZW5zZXMiLCJtb25nb29zZSIsIm1vZGVsIiwidG9rZW4iLCJTdHJpbmciLCJhbW91bnQiLCJOdW1iZXIiLCJyZXF1aXJlZCIsInRyaW0iLCJjYXRlZ29yeSIsImRlc2NyaXB0aW9uIiwibm93IiwiZGQiLCJ3dyIsImRvdyIsIm1tIiwieXkiLCJVc2VyU2NoZW1hIiwiU2NoZW1hIiwiX2lkIiwiVHlwZXMiLCJPYmplY3RJZCIsIm1pbmxlbmd0aCIsImVtYWlsSWQiLCJleHBlbnNlIiwiZ2VuZXJhdGVUb2tlbiIsInVzZXJEb2MiLCJuZXh0IiwiYmNyeXB0IiwiZ2VuU2FsdCIsInNhbHQiLCJoYXNoIiwidG9IZXhTdHJpbmciLCJ0b1N0cmluZyIsInByZSIsImlzTW9kaWZpZWQiLCJVc2VycyIsIkFwcCIsIl9yb3V0ZXMyIiwiX3JlYWN0Um91dGVyRG9tIiwiU3dpdGNoIiwiUm91dGUiLCJwYXRoIiwiZXhhY3QiLCJyZW5kZXIiLCJfTG9naW4yIiwiX0hvbWUyIiwiX05vdEZvdW5kMiIsIk5vdEZvdW5kIiwiTmF2TGluayIsInRvIiwiSG9tZSIsImxlZnRNZW51Q2xpY2siLCJuYXZpZ2F0ZVRvU2lnbkluIiwiY2FuY2VsUG9wdXAiLCJjb25maXJtUG9wdXAiLCJkZWxldGVFeHBlbnNlIiwiYWN0aXZlVGFiIiwic2hvd05ld0V4cGVuc2UiLCJ2aWV3TW9yZSIsIndlZWtEYXRhIiwibW9udGhEYXRhIiwieWVhckRhdGEiLCJzZWxlY3RvcldXIiwic2VsZWN0b3JNTSIsInNlbGVjdG9yWVkiLCJhY3RpdmVGaWx0ZXIiLCJ2aWV3ZWRNb3JlIiwidXNlckluZm8iLCJnZXRFeHBlbnNlIiwidXBkYXRlVG9nZ2xlckNvbnRlbnQiLCJ0b2dnbGVWYWwiLCJ0YWIiLCJfY3VycmVudFRhYkRhdGEiLCJjdXJyZW50VGFiRGF0YSIsImN1cnJEYXRlIiwiZ2V0RGF5IiwiZmlyc3REYXlvZk1vbnRoIiwiY2VpbCIsInBhcnNlSW50IiwibG9hZE5ld1N1bW1hcnlEYXRhIiwiZ2V0UGFyYW1zIiwiYWN0aXZlVGFiRGF0YSIsImZpbmRDdXJyZW50RGF0YVByb3AiLCJfZGVmaW5lUHJvcGVydHkiLCJwbG90RGF0YSIsImxvYWROZXdFeHBlbnNlRGF0YSIsIl90aGlzNCRzZXRTdGF0ZSIsIl9yZXNwJGRhdGEiLCJleHBlbnNlTGlzdCIsImluY29tZUxpc3QiLCJzdGFuZGluZyIsInNwZW50IiwiX3RoaXM1IiwiYmFja0Ryb3AiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJwb3B1cCIsIm90aGVySGFsZkxhbmRpbmdUeHQiLCJmaXJzdEhhbGZMYW5kaW5nVHh0IiwiYWRkQnRuQ29udGFpbmVyIiwiaHJlZiIsIm9wZW4iLCJzYXZlU3VjY2VzcyIsImVkaXRFeHBlbnNlVmFsIiwiX3RoaXM2Iiwic2hvd1BvcHVwIiwiX3RoaXM3IiwiZGVsZXRlVHJhbnNhY3Rpb25PYmoiLCJvYmoiLCJlZGl0VHJhbnNhY3Rpb25PYmoiLCJ0cmFuc2FjdGVkQ2FyZCIsInNjcm9sbFRvcCIsImhhc0xpc3REZWZpbmVkIiwiX3RoaXM4IiwibG9hZGVyIiwidHJhbnNhY3Rpb25MaXN0IiwibWFwIiwidHJhbnNhY3Rpb24iLCJpbmRleCIsImhlaWdodCIsInZpZXdCb3giLCJ3aWR0aCIsIm1heFdpZHRoIiwicGVyY2VudCIsImZpbGwiLCJfdGhpczkiLCJfdGhpczEwIiwiX3N0YXRlMiR2aWV3TW9yZSIsImNoYW5nZUZpbHRlciIsImtleXMiLCJyZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZCIsImNsaWNrVmlld01vcmUiLCJ4bWxucyIsImN1cnJNb250aCIsIl9jdXJyZW50VGFiRGF0YTMiLCJ0b2dnbGVySGVhZGVyIiwiaXNQcmV2RGlzYWJsZWQiLCJpc05leHREaXNhYmxlZCIsIl90aGlzMTEiLCJvYmpUb0NoYW5nZSIsIl90aGlzMTIiLCJfc3RhdGUzIiwiX2N1cnJlbnRUYWJEYXRhNCIsIl9jdXJyZW50VGFiRGF0YTQkc3RhbiIsIl9jdXJyZW50VGFiRGF0YTQkc3BlbiIsIl9jdXJyZW50VGFiRGF0YTQkcGxvdCIsIl9jdXJyZW50VGFiRGF0YTQkaW5jbyIsIl9nZXRUb2dnbGVySGVhZGVyIiwiZ2V0VG9nZ2xlckhlYWRlciIsIlByb21wdCIsIndoZW4iLCJtZXNzYWdlIiwicmVuZGVyTGVmdE1lbnVCYXIiLCJzcmMiLCJnZXRDdXJyZW50RGF0ZSIsInRvZ2dsZVR5cGUiLCJjaGFuZ2VFeHBlbnNlRGF5Rm9ybWF0IiwiZ2V0VHJhbnNhY3Rpb25DYXJkIiwicGVyRGl2aXNpb25EYXRhIiwiX0dyYXBoMiIsIl9OZXdFeHBlbnNlMiIsIl9Qb3B1cDIiLCJjYW5jZWxDYWxsYmFjayIsImNvbmZpcm1DYWxsYmFjayIsIk5ld0V4cGVuc2UiLCJzZWxlY3RUeXBlIiwic3VibWl0TmV3RXhwZW5zZSIsImhhbmRsZUZyZXF1ZW50Q2F0ZWdvcmllc1RhcCIsIm9uQmFja1ByZXNzIiwiZGF5IiwiZnJlcXVlbnRDYXRlZ29yaWVzIiwic2xpY2UiLCJwdXNoU3RhdGUiLCJvbnBvcHN0YXRlIiwiYmFja09iaiIsInNldERhdGUiLCJkYXRlRGF0YSIsImdldERhdGVEYXRhIiwidG9kYXlUYXAiLCJ5ZXN0ZXJkYXlUYXAiLCJyZW1vdmVEYXRlRXJyb3IiLCJkYXRlRGF0YVRvZGF5IiwiZGF0ZURhdGFZZXN0ZXJkYXkiLCJkYXRlUmVnIiwidGVzdCIsIl9zdGF0ZTQiLCJpc1ZhbGlkRGF0ZSIsIl9zdGF0ZTUiLCJpc1ZhbGlkYXRpb25TdWNjZXNzIiwidmFsaWRhdGVQYXJhbXMiLCJkaXNhYmxlU3VibWl0Iiwic3Vic3RyaW5nIiwidG9VcHBlckNhc2UiLCJyZXNwb25zZSIsImNvbnRhaW5zIiwicGFyZW50RWxlbWVudCIsImlubmVyVGV4dCIsImVudHJ5IiwidG9Mb3dlckNhc2UiLCJfc3RhdGU2IiwiYXV0by1jb21wbGV0ZSIsImNoYW5nZUFtb3VudCIsImNoYW5nZUNhdGVnb3J5IiwicmVuZGVyRnJlcXVlbnRDYXRlZ29yaWVzIiwiY2hhbmdlRGF0ZSIsIkdyYXBoIiwiZ2VuZXJhdGVTVkciLCJhbGVydCIsInhDb29yZGluYXRlcyIsInlDb29yZGluYXRlcyIsImFtb3VudE9uQ29vcmRpbmF0ZXMiLCJwb2ludHNFbGVtZW50IiwidGV4dEluZGV4IiwicG9pbnRUZXh0IiwieSIsImZvbnRTaXplIiwidGV4dEFuY2hvciIsImN4IiwiY3kiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsIkhFSUdIVCIsIm1heExlbmciLCJtYXhBbXQiLCJtYXhBbW91bnQiLCJ4Q29vcmRpbmF0ZURpdkxlbmd0aCIsImxhc3REaXZpc2lvbiIsInN0ciIsImZvckVhY2giLCJkaXZpc2lvbiIsImxhc3RYIiwic2NyZWVuIiwibWFyZ2luIiwicG9pbnRzIiwicmVuZGVyUG9pbnRzIiwiUG9wdXAiLCJQcm9taXNlIiwiZ2xvYmFsIiwiY29ubmVjdCIsInVzZU1vbmdvQ2xpZW50IiwicmVxdWVzdCIsIl9yZXF1ZXN0JGJvZHkiLCJib2R5IiwiX3JlcXVlc3QkYm9keSR1c2VybmFtIiwiX3JlcXVlc3QkYm9keSRwYXNzd29yIiwidXNlciIsImZpbmQiLCJzYXZlIiwiZG9jIiwic3RhdHVzIiwiX3JlcXVlc3QkYm9keTIiLCJfcmVxdWVzdCRib2R5MiR1c2VybmEiLCJfcmVxdWVzdCRib2R5MiRwYXNzd28iLCJmaW5kT25lIiwiY29tcGFyZSIsIl9yZXF1ZXN0JGJvZHkzIiwiX3JlcXVlc3QkYm9keTQiLCJleHBlbnNlRGF0ZVJlc3BvbmRlciIsInJlc3BvbmQiLCJfcmVxdWVzdCRib2R5NSIsImdyb3VwMiIsIiRncm91cCIsIiRzdW0iLCIkZmlyc3QiLCIkcHVzaCIsInVud2luZCIsIiR1bndpbmQiLCJzb3J0IiwiJHNvcnQiLCJ0cmFuc2FjdGlvbkxpc3QuYW1vdW50IiwidHJhbnNhY3Rpb25MaXN0LmRhdGUiLCJyZUdyb3VwIiwiX3JlcXVlc3QkYm9keTYiLCJhZ2dyZWdhdGUiLCIkbWF0Y2giLCIkcHJvamVjdCIsImFsbG93RGlza1VzZSIsImV4ZWMiLCJleGVjU3VtbWFyeVF1ZXJ5IiwiTUlOX1NBRkVfSU5URUdFUiIsIl9yZXF1ZXN0JGJvZHk3IiwidG90YWxBbW91bnQiLCJmaW5kT25lQW5kUmVtb3ZlIiwiX3JlcXVlc3QkYm9keTgiLCJfcmVxdWVzdCRib2R5OSIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwidXBzZXJ0IiwicmV0dXJuTmV3RG9jdW1lbnQiLCJjb3VudCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFBTSxLQUFBTixFQUFBckIsRUFBQVUsRUFBQWUsRUFBQUUsRUFBQSxTQUFBQSxHQUFnSCxPQUFBTixFQUFBTSxJQUFxQkMsS0FBQSxLQUFBRCxJQUNySSxPQUFBRixHQUlBekIsRUFBQTZCLEVBQUEsU0FBQTFCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQXFCLFdBQ0EsV0FBMkIsT0FBQXJCLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFpQixFQUFBQyxHQUFzRCxPQUFBakIsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBdUIsRUFBQUMsSUFHdEQvQixFQUFBa0MsRUFBQSxVQUlBbEMsSUFBQW1DLEVBQUEsbUJDbEZBaEMsRUFBQUQsUUFBQWtDLFFBQUEsK2lCQ0dnQkMsY0FBVCxTQUF1QkMsR0FDNUIsSUFBTUMsRUFBVSxHQUNoQixHQUFhLFFBQVRELEVBQWdCLENBQ2xCQyxFQUFRQyxLQUFLQyxFQUFBQyxRQUFBQyxjQUFBLHNCQUNiLElBQUksSUFBSXZDLEVBQUksRUFBR0EsRUFBSSxHQUFLQSxJQUN0Qm1DLEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsVUFBUWhCLElBQUssT0FBU3ZCLEVBQUdpQixNQUFPakIsR0FBSUEsU0FFOUMsR0FBYSxVQUFUa0MsRUFBa0IsQ0FDM0JDLEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsd0JBQ2IsSUFBSSxJQUFJdkMsRUFBSSxFQUFHQSxFQUFJLEdBQUtBLElBQ3RCbUMsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSxVQUFRaEIsSUFBSyxTQUFXdkIsRUFBR2lCLE1BQU9qQixHQUFJd0Msa0JBQWdCeEMsVUFFaEUsR0FBYSxTQUFUa0MsRUFBaUIsQ0FDMUJDLEVBQVFDLEtBQUtDLEVBQUFDLFFBQUFDLGNBQUEsdUJBQ2IsSUFBSSxJQUFJdkMsRUFBSSxLQUFNQSxFQUFJLElBQU9BLElBQzNCbUMsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSxVQUFRaEIsSUFBSyxRQUFVdkIsRUFBSWlCLE1BQU9qQixHQUFJQSxTQUVoRCxHQUFhLFNBQVRrQyxFQUFpQixDQUMxQkMsRUFBUUMsS0FBS0MsRUFBQUMsUUFBQUMsY0FBQSx1QkFDYixJQUFJLElBQUl2QyxFQUFJLEVBQUdBLEVBQUksRUFBSUEsSUFDckJtQyxFQUFRQyxLQUFLQyxFQUFBQyxRQUFBQyxjQUFBLFVBQVFoQixJQUFLLFFBQVV2QixFQUFHaUIsTUFBT2pCLEdBQUlBLElBR3RELE9BQU9tQyxLQUdPTSxXQUFULFNBQW9CbkMsR0FDekIsSUFBSW9DLFNBRUZBLEVBRGdCLGlCQUFkLElBQU9wQyxFQUFQLFlBQUFxQyxFQUFPckMsSUFDRixJQUFJc0MsS0FBS3RDLEdBRVRBLEVBRVQsSUFBSXVDLEVBQVMsR0FFYixPQURBQSxHQUFVSCxFQUFLSSxVQUFZLElBQU9OLGtCQUFnQkUsRUFBS0ssWUFBYyxJQUFNTCxFQUFLTSxpQkFJbEVDLGNBQVQsU0FBdUJDLEdBQzVCLEdBQVksS0FBUkEsRUFDRixNQUFPLEdBRU9DLFdBQVdELEVBQUssSUFDOUIsT0FBSUEsRUFBTSxJQUNERSxLQUFLQyxNQUFpQyxHQUEzQkYsV0FBV0QsRUFBSSxJQUFNLEtBQVksR0FBSyxJQUVqREEsR0FqRGIsTUFBQUksRUFBQTFELEVBQUEsdUNBQ0EyRCxFQUFBM0QsRUFBQSxLQXFEYTRELG1CQUNYLFNBQUFBLEVBQVlDLEdBQU8sbUdBQUFDLENBQUFDLEtBQUFILG9LQUFBSSxDQUFBRCxNQUFBSCxFQUFBSyxXQUFBbkQsT0FBQW9ELGVBQUFOLElBQUFyRCxLQUFBd0QsS0FDWEYsdVVBRmtCTSxpREFLakJDLEVBQU1DLEdBQ2IsSUFBSUMsRUFFSixPQURBQSxPQUFhQyxFQUNOLFdBQ0wsSUFBSUMsRUFBTUMsRUFJVixPQUhBQSxFQUFVVixLQUNWUyxFQUFPRSxVQUNQQyxhQUFhTCxHQUNOQSxFQUFhTSxXQUFXLFdBQzdCLE9BQU9SLEVBQUtTLE1BQU1KLEVBQVNELElBQzFCSCx1Q0FJSVMsR0FDVCxJQUFJQyxFQUFhQyxFQUFTQyxFQUFNQyxFQUFPQyxFQVN2QyxPQVJTcEIsS0FDVGlCLEVBQVVJLFNBQVN6QyxjQUFjLFFBQ2pDc0MsRUFGU2xCLEtBRUtzQixZQUNkTixFQUhTaEIsS0FHSXVCLHdCQUNiSCxFQUFJTCxFQUFFUyxNQUFRUixFQUFJUyxLQUFRUCxFQUFPLEVBRWpDQyxFQUFRLFFBREpKLEVBQUVXLE1BQVFWLEVBQUlXLElBQU9ULEVBQU8sR0FDWCxhQUFlRSxFQUFJLGVBQWlCRixFQUFPLGNBQWdCQSxFQUFPLE1BTjlFbEIsS0FPRjRCLGdCQUFnQkMsWUFBWVosR0FDNUJBLEVBQVFhLGFBQWEsUUFBU1gscUNBSXJDLEtBQU9uQixLQUFLNEIsZ0JBQWdCRyxZQUMxQi9CLEtBQUs0QixnQkFBZ0JJLFlBQVloQyxLQUFLNEIsZ0JBQWdCRyx3REFLeEQsSUFBTUUsRUFBU2pDLEtBQUtrQyxLQUFLQyxjQUNuQlAsRUFBa0JQLFNBQVN6QyxjQUFjLE9BQy9DZ0QsRUFBZ0JRLFVBQVksb0JBQzVCSCxFQUFPSSxpQkFBaUIsWUFBYXJDLEtBQUtzQyxZQUMxQ0wsRUFBT0ksaUJBQWlCLFVBQVdyQyxLQUFLdUMsU0FBU3ZDLEtBQUt3QyxRQUFTLE1BQy9EUCxFQUFPTCxnQkFBa0JBLEVBQ3pCSyxFQUFPSixZQUFZRCxvQ0FHWixJQUFBYSxFQUN1Q3pDLEtBQUtGLE1BRDVDNEMsRUFBQUQsRUFDQUUsZUFEQW5DLElBQUFrQyxFQUNVLEdBRFZBLEVBQUFFLEVBQUFILEVBQ2NJLHNCQURkckMsSUFBQW9DLEVBQytCLEtBRC9CQSxFQUVQLE9BQ0VsRSxFQUFBQyxRQUFBQyxjQUFBLE9BQUtrRSxJQUFJLGdCQUFnQlYsVUFBV08sRUFBU0ksUUFBU0YsRUFBZ0JaLE9BQU8sVUFDMUVqQyxLQUFLRixNQUFNa0QsU0FBV2hELEtBQUtGLE1BQU1rRCxTQUFVLDhGQzFHdkNDLFFBQVEsUUFDUkMsT0FBTyxPQUNQQyxPQUFPLE9BQ1BDLGlCQUFpQixDQUFFQyxNQUFPLEdBQUlDLEtBQU0sR0FBSUMsS0FBTSxHQUM5Q0Msa0JBQWtCLENBQUVILE1BQU8sR0FBSUMsS0FBSyxHQUFJQyxLQUFNLEdBQzlDRSxhQUFhLENBQUMsVUFBVyxXQUFZLFFBQVMsUUFBUyxNQUFPLE9BQVEsT0FBUSxTQUFVLFlBQWEsVUFBVyxXQUFZLFlBQzNINUUsa0JBQWtCLENBQUMsTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE9BQ2pHNkUsZ0JBQWdCLENBQUMsTUFBTyxNQUFPLE1BQU8sTUFBTyxNQUFPLE1BQU8sT0FDM0RDLFFBQVEsUUFDUkMsWUFBWSwyQkNUekJ4SCxFQUFBRCxRQUFBa0MsUUFBQSxtQ0NBQWpDLEVBQUFELFFBQUFrQyxRQUFBLDJCQ0FBakMsRUFBQUQsUUFBQWtDLFFBQUEsK2FDQUF3RixFQUFBNUgsRUFBQSx3Q0FFYTZILFNBQVMsU0FBQ0MsR0FFckIsT0FBT0MsVUFBTUMsS0FERCxXQUNMQyxFQUFBLEdBQW9CSCxLQUdoQkksU0FBUyxTQUFDSixHQUVyQixPQUFPQyxVQUFNQyxLQURELFdBQ0xDLEVBQUEsR0FBb0JILEtBR2hCSyxjQUFjLFdBRXpCLE9BQU9KLFVBQU1DLEtBREQsYUFDVyxLQUdaSSxhQUFhLFdBRXhCLE9BQU9MLFVBQU1DLEtBREQsV0FDVyxLQUdaSyxjQUFjLFNBQUNQLEdBRTFCLE9BQU9DLFVBQU1DLEtBREQsZ0JBQ0xDLEVBQUEsR0FBb0JILEtBR2hCUSxtQkFBbUIsU0FBQ1IsR0FFL0IsT0FBT0MsVUFBTUMsS0FERCxxQkFDV0YsSUFHWlMsc0JBQXNCLFNBQUNULEdBRWxDLE9BQU9DLFVBQU1DLEtBREQsd0JBQ1dGLElBR1pVLG9CQUFvQixTQUFDVixHQUVoQyxPQUFPQyxVQUFNQyxLQURELHdCQUNXRixJQUdaVyxlQUFlLFNBQUNYLEdBRTNCLE9BQU9DLFVBQU1DLEtBREQsaUJBQ1dGLElBR1pZLHdCQUF3QixXQUVuQyxPQUFPWCxVQUFNOUcsSUFERCwyR0MvQ2RqQixFQUFBLE1BQ0FBLEVBQUEsWUFDQUEsRUFBQSxTQUNBQSxFQUFBLE9BR0FBLEVBQUEsS0FDQUEsRUFBQSxJQUNBLElBQUEySSxFQUFBM0ksRUFBQSx1REFUQW9DLEVBQVEsR0FLUixJQUFJd0csRUFBVXhHLEVBQVEsSUFNaEJ5RyxFQUFhekcsRUFBUSxHQUFSQSxDQUF5QndHLEdBQ3RDRSxHQUFNLEVBQUFDLEVBQUFyRyxXQUNOc0csRUFBT0MsUUFBUUMsSUFBSUMsS0FFekJMLEVBQUlNLElBQUlSLEVBQVEsQ0FDWlMsT0FBUSxNQUNSQyxRQUFRLEVBQ1JDLE1BQU8sSUFBSVYsRUFBVyxDQUNsQlcsSUFBS1AsUUFBUUMsSUFBSU8sa0JBR3pCWCxFQUFJTSxJQUFJTSxVQUFXQyxXQUFXLENBQUVDLFVBQVUsS0FDMUNkLEVBQUlNLElBQUlNLFVBQVdHLFFBQ25CZixFQUFJTSxJQUFJVSxVQUFRQyxPQUFPLGlCQUN2QmpCLEVBQUlNLElBQUksVUFBV1UsVUFBUUMsT0FBTyxxQkFDbENqQixFQUFJTSxJQUFJVSxVQUFRQyxPQUFPLHFCQUd2QmpCLEVBQUlkLEtBQUssVUFBV2dDLFVBQ3BCbEIsRUFBSWQsS0FBSyxVQUFXaUMsVUFDcEJuQixFQUFJZCxLQUFLLFVBQVdrQyxVQUNwQnBCLEVBQUlkLEtBQUssWUFBYUcsZUFDdEJXLEVBQUlkLEtBQUssZUFBZ0JtQyxjQUN6QnJCLEVBQUlkLEtBQUssb0JBQXFCb0Msa0JBQzlCdEIsRUFBSWQsS0FBSyx1QkFBd0JxQyxxQkFDakN2QixFQUFJZCxLQUFLLHVCQUF3QlEscUJBQ2pDTSxFQUFJZCxLQUFLLGdCQUFpQnNDLGVBQzFCeEIsRUFBSTdILElBQUkseUJBQTBCeUgseUJBMkJsQ0ksRUFBSTdILElBQUksSUFBSyxTQUFDc0osRUFBS0MsR0FFZkEsRUFBSUMsS0F6Qkosa2xDQTRCSjNCLEVBQUk0QixPQUFPMUIsRUFBTSxXQUNiMkIsUUFBUUMsSUFBSSwyQkFBNEI1QixlQUc3QkYsNGdCQzFFZnBGLEVBQUExRCxFQUFBLGNBQ0FBLEVBQUEsSUFDQTZLLEVBQUE3SyxFQUFBLEdBQ0E4SyxFQUFBOUssRUFBQSwwREFFTStLLGNBQ0osU0FBQUEsRUFBWWxILGdHQUFPQyxDQUFBQyxLQUFBZ0gsR0FBQSxJQUFBQyxtS0FBQWhILENBQUFELE1BQUFnSCxFQUFBOUcsV0FBQW5ELE9BQUFvRCxlQUFBNkcsSUFBQXhLLEtBQUF3RCxLQUNYRixJQURXLE9BRWpCbUgsRUFBS0MsS0FBT0QsRUFBS0MsS0FBS3JKLEtBQVZvSixHQUNaQSxFQUFLaEIsT0FBU2dCLEVBQUtoQixPQUFPcEksS0FBWm9KLEdBQ2RBLEVBQUtmLE9BQVNlLEVBQUtmLE9BQU9ySSxLQUFab0osR0FDZEEsRUFBS0UsWUFBY0YsRUFBS0UsWUFBWXRKLEtBQWpCb0osR0FDbkJBLEVBQUtHLE1BQVEsQ0FDWEMsU0FBVSxHQUNWQyxTQUFVLEdBQ1ZDLFdBQVksVUFDWkMsV0FBWSxVQUNaQyxhQUFjLDJCQUNkQyxNQUFPQyxPQUFPQyxVQUVaRCxPQUFPQyxVQUNUWCxFQUFLRSxjQWZVRixxVUFERDdHLHVEQXFCaEIsRUFBQTBHLEVBQUF6QyxjQUFhd0QsS0FBSyxTQUFDQyxHQUNqQixJQUFNQSxFQUFLQyxLQUFLQyxNQUlkLE9BSEFMLE9BQU9DLFVBQVcsRUFDbEJoQixRQUFRQyxJQUFJLDRCQUNaYyxPQUFPTSxTQUFTQyxTQUdsQnRCLFFBQVFDLElBQUksMEJBQ1pjLE9BQU9NLFNBQVNDLFdBQ2ZDLE1BQU0sV0FDUHZCLFFBQVFDLElBQUksMEJBQ1pjLE9BQU9NLFNBQVNDLDBDQUtsQixPQUNFeEosRUFBQUMsUUFBQUMsY0FBQ3dKLEVBQUF6SixRQUFELEtBQ0VELEVBQUFDLFFBQUFDLGNBQUEsa0VBS0trSixHQUNMQSxFQUFLQyxPQUFTRCxFQUFLQyxLQUFLQyxPQUMxQmhJLEtBQUtGLE1BQU11SSxRQUFRNUosS0FBSyxRQUFTLElBQ1Ysb0JBQVprSixTQUNUQSxPQUFPQyxVQUFXLElBR3BCNUgsS0FBS3NJLFNBQUxwRSxFQUFBLEdBQWtCNEQsRUFBS0MsT0FFckJELEVBQUtDLE1BQVFELEVBQUtDLEtBQUtDLE9BQ3pCaEksS0FBS3VJLG9EQUtQLE9BQUl2SSxLQUFLb0gsTUFBTUMsU0FBU21CLE9BQVMsR0FDL0J4SSxLQUFLc0ksU0FBUyxDQUFDTixPQUFPLEVBQU1TLElBQUssZ0RBQzFCLEtBRUx6SSxLQUFLb0gsTUFBTUUsU0FBU2tCLE9BQVMsS0FDL0J4SSxLQUFLc0ksU0FBUyxDQUFDTixPQUFPLEVBQU1TLElBQUssZ0RBQzFCLDZDQU1UekksS0FBS3NJLFNBQVMsQ0FDWmYsV0FBWSxVQUNaQyxXQUFZLFVBQ1pDLGFBQWMsOERBSVQsSUFBQWlCLEVBQUExSSxLQUNIQSxLQUFLMkksWUFDUDNJLEtBQUtzSSxTQUFTLENBQUNkLFdBQVksbUJBQzNCLEVBQUFWLEVBQUFoRCxRQUFPLENBQUN1RCxTQUFVckgsS0FBS29ILE1BQU1DLFNBQVVDLFNBQVV0SCxLQUFLb0gsTUFBTUUsV0FDM0RPLEtBQUssU0FBQ0MsR0FDTFksRUFBS0UsV0FBV2QsS0FFakJLLE1BQU0sU0FBQ1UsR0FDTkgsRUFBS0gsa0JBQ0wzQixRQUFRQyxJQUFJLHNEQUtYaUMsR0FBZSxJQUFBQyxFQUFBL0ksS0FBQWdKLEVBQ09oSixLQUFLb0gsTUFBM0JDLEVBRGUyQixFQUNmM0IsU0FBVUMsRUFESzBCLEVBQ0wxQixTQUNYd0IsSUFDRnpCLEVBQVcsU0FDWEMsRUFBVyxpQkFFVHdCLEdBQWlCOUksS0FBSzJJLGFBTXhCLEVBQUE3QixFQUFBM0MsUUFBTyxDQUFDa0QsU0FBVUEsRUFBVUMsU0FBVUEsSUFBV08sS0FBSyxTQUFDQyxHQUNyRGlCLEVBQUtILFdBQVdkLEtBQ2ZLLE1BQU0sU0FBQ1UsR0FDUkUsRUFBS1Isa0JBQ0wzQixRQUFRQyxJQUFJLG1CQUFvQmdDLHNDQUs3QixJQUFBSSxFQUFBakosS0FBQWtKLEVBQ3dDbEosS0FBS29ILE1BQTdDRyxFQURBMkIsRUFDQTNCLFdBQVlDLEVBRFowQixFQUNZMUIsV0FBWUMsRUFEeEJ5QixFQUN3QnpCLGFBQy9CLE9BQ0UvSSxFQUFBQyxRQUFBQyxjQUFBLFdBQ0dvQixLQUFLa0gsT0FDTGxILEtBQUtvSCxNQUFNTSxNQUNaaEosRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLElBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLG9CQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxZQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxTQUFPd0QsVUFBVSxjQUFjK0csR0FBRyxnQkFBZ0JDLFlBQVksV0FBVzlMLE1BQU8wQyxLQUFLb0gsTUFBTUMsU0FBVWdDLFNBQVksU0FBQ3RJLEdBQUQsT0FBT2tJLEVBQUtYLFNBQVMsQ0FBQ2pCLFNBQVV0RyxFQUFFdUksT0FBT2hNLFNBQVNpQixLQUFLLFVBRTFLRyxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLG1CQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxTQUFPd0QsVUFBVSxjQUFjK0csR0FBRyxXQUFXQyxZQUFZLFdBQVc5TCxNQUFPMEMsS0FBS29ILE1BQU1FLFNBQVUrQixTQUFZLFNBQUN0SSxHQUFELE9BQU9rSSxFQUFLWCxTQUFTLENBQUNoQixTQUFVdkcsRUFBRXVJLE9BQU9oTSxTQUFTaUIsS0FBSyxlQUd0S3lCLEtBQUtvSCxNQUFNWSxPQUFTdEosRUFBQUMsUUFBQUMsY0FBQSxPQUFLdUssR0FBRyxXQUFXL0csVUFBVSxtQkFBbUJwQyxLQUFLb0gsTUFBTXFCLEtBQ2hGL0osRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxlQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxVQUNiMUQsRUFBQUMsUUFBQUMsY0FBQ21JLEVBQUFsSCxPQUFELENBQVE4QyxRQUFRLGlDQUFpQ0UsZUFBZ0Isa0JBQU1vRyxFQUFLL0MsUUFBTyxLQUFTcUIsSUFFOUY3SSxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFVBQ2IxRCxFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVEsaUNBQWlDRSxlQUFnQjdDLEtBQUtpRyxRQUFTdUIsS0FHbkY5SSxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGVBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLE9BQ2IxRCxFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVEsMkNBQTJDRSxlQUFnQixrQkFBTW9HLEVBQUsvQyxRQUFPLEtBQVF1QiwyQkFVdEdULGlGQzNKZixRQUFBL0ssRUFBQSxNQUNBQSxFQUFBLHdEQUVBLElBQU1zTixFQUFXQyxVQUFTQyxNQUFNLFdBQVksQ0FDMUNDLE1BQU8sQ0FDTG5MLEtBQU1vTCxPQUNON0csSUFBSyxTQUVQOEcsT0FBUSxDQUNKckwsS0FBTXNMLE9BQ05DLFVBQVUsRUFDVkMsTUFBTSxHQUVWQyxTQUFVLENBQ056TCxLQUFNb0wsT0FDTkcsVUFBVSxFQUNWQyxNQUFNLEVBQ05wTCxRQUFTLFVBRWJKLEtBQU0sQ0FDSkEsS0FBTW9MLE9BQ05HLFVBQVUsRUFDVkMsTUFBTSxFQUNOcEwsUUFBUyxXQUVYc0wsWUFBYSxDQUNYMUwsS0FBTW9MLE9BQ05HLFVBQVUsRUFDVkMsTUFBTSxHQUVSaEwsS0FBTSxDQUNKUixLQUFNVSxLQUNONkssVUFBVSxFQUNWQyxNQUFNLEVBQ05wTCxRQUFTTSxLQUFLaUwsT0FFaEJDLEdBQUksQ0FDRjVMLEtBQU1zTCxPQUNOQyxVQUFVLEVBQ1ZDLE1BQU0sR0FFUkssR0FBSSxDQUNGN0wsS0FBTXNMLE9BQ05DLFVBQVUsRUFDVkMsTUFBTSxHQUVSTSxJQUFLLENBQ0g5TCxLQUFNc0wsT0FDTkMsVUFBVSxFQUNWQyxNQUFNLEdBRVJPLEdBQUksQ0FDRi9MLEtBQU1zTCxPQUNOQyxVQUFVLEVBQ1ZDLE1BQU0sR0FFUlEsR0FBSSxDQUNGaE0sS0FBTXNMLE9BQ05DLFVBQVUsRUFDVkMsTUFBTSxlQUdLUixpRkM5RGYsUUFBQXROLEVBQUEsU0FDQUEsRUFBQSxPQUNBQSxFQUFBLHlEQUVBLElBQU11TyxFQUFhLElBQUloQixVQUFTaUIsT0FBTyxDQUNuQ0MsSUFBS2xCLFVBQVNpQixPQUFPRSxNQUFNQyxTQUMzQnZELFNBQVUsQ0FDTjlJLEtBQU1vTCxPQUNORyxVQUFVLEVBQ1ZlLFVBQVcsRUFDWGQsTUFBTSxHQUVWZSxRQUFTLENBQ0x2TSxLQUFNb0wsT0FDTkcsVUFBVSxFQUNWQyxNQUFNLEdBRVZ6QyxTQUFVLENBQ04vSSxLQUFNb0wsT0FDTkcsVUFBVSxFQUNWZSxVQUFXLEVBQ1hkLE1BQU0sR0FFVkwsTUFBTyxDQUNIbkwsS0FBTW9MLE9BQ05HLFVBQVUsR0FFZGlCLFFBQVMsQ0FDTCxDQUNJeE0sS0FBTWlMLFVBQVNpQixPQUFPRSxNQUFNQyxTQUM1QjlILElBQUssZUFLakIsU0FBU2tJLEVBQWNDLEVBQVNDLEdBQzVCQyxVQUFPQyxRQUFRLEdBQUksU0FBU3ZDLEVBQUt3QyxHQUN6QnhDLEVBQ0FqQyxRQUFRQyxJQUFJLG9DQUFxQ2dDLEdBRWpEc0MsVUFBT0csS0FBS0wsRUFBUVAsSUFBSWEsY0FBZ0JOLEVBQVEzRCxTQUFTa0UsV0FBWUgsRUFBTSxTQUFTeEMsRUFBS3lDLEdBQ2pGekMsRUFDQWpDLFFBQVFDLElBQUksb0NBQXFDZ0MsSUFFakRvQyxFQUFRdkIsTUFBUTRCLEVBQ2hCSixTQVFwQlYsRUFBV2lCLElBQUksT0FBUSxTQUFTUCxHQUM1QixJQUFJRCxFQUFVakwsS0FDVmlMLEVBQVFTLFdBQVcsWUFDbkJQLFVBQU9DLFFBQVEsR0FBSSxTQUFTdkMsRUFBS3dDLEdBQ3pCeEMsRUFDQWpDLFFBQVFDLElBQUksMEJBQTJCZ0MsR0FFdkNzQyxVQUFPRyxLQUFLTCxFQUFRM0QsU0FBVStELEVBQU0sU0FBU3hDLEVBQUt5QyxHQUMxQ3pDLEVBQ0FqQyxRQUFRQyxJQUFJLDBCQUEyQmdDLElBRXZDb0MsRUFBUTNELFNBQVdnRSxFQUNuQk4sRUFBY0MsRUFBU0MsUUFNdkNGLEVBQWNDLEVBQVNDLEtBSS9CLElBQU1TLEVBQVFuQyxVQUFTQyxNQUFNLFFBQVNlLGFBQ3ZCbUIsaUJDNUVmdlAsRUFBQUQsUUFBQWtDLFFBQUEsMkJDQUFqQyxFQUFBRCxRQUFBa0MsUUFBQSxpQ0NBQWpDLEVBQUFELFFBQUFrQyxRQUFBLDBCQ0FBakMsRUFBQUQsUUFBQWtDLFFBQUEsdVZDQUFzQixFQUFBMUQsRUFBQSxhQUNBQSxFQUFBLE1BQ0FBLEVBQUEsTUFDQUEsRUFBQSxNQUNBQSxFQUFBLDBEQUVxQjJQLGdyQkFBWXhMLGlEQUV6QixPQUNJMUIsRUFBQUMsUUFBQUMsY0FBQ2lOLEVBQUFsTixRQUFELHlCQUhTaU4saUJDTnJCeFAsRUFBQUQsUUFBQWtDLFFBQUEsK0JDQUFqQyxFQUFBRCxRQUFBa0MsUUFBQSx3RkNBQSxRQUFBcEMsRUFBQSxJQUNBNlAsRUFBQTdQLEVBQUEsT0FDQUEsRUFBQSxRQUNBQSxFQUFBLFNBQ0FBLEVBQUEsa0VBRWUsV0FDWCxPQUNJeUMsRUFBQUMsUUFBQUMsY0FBQ2tOLEVBQUFDLE9BQUQsS0FDSXJOLEVBQUFDLFFBQUFDLGNBQUNrTixFQUFBRSxNQUFELENBQU9DLEtBQUssU0FBU0MsT0FBQSxFQUFNQyxPQUFRLFNBQUNyTSxHQUFELE9BQVdwQixFQUFBQyxRQUFBQyxjQUFDd04sRUFBQXpOLFFBQVVtQixNQUN6RHBCLEVBQUFDLFFBQUFDLGNBQUNrTixFQUFBRSxNQUFELENBQU9DLEtBQUssSUFBSUMsT0FBQSxFQUFNQyxPQUFRLFNBQUNyTSxHQUFELE9BQVdwQixFQUFBQyxRQUFBQyxjQUFDd04sRUFBQXpOLFFBQVVtQixNQUNwRHBCLEVBQUFDLFFBQUFDLGNBQUNrTixFQUFBRSxNQUFELENBQU9DLEtBQUssUUFBUUMsT0FBQSxFQUFNQyxPQUFRLFNBQUNyTSxHQUFELE9BQVdwQixFQUFBQyxRQUFBQyxjQUFDeU4sRUFBQTFOLFFBQVNtQixNQUN2RHBCLEVBQUFDLFFBQUFDLGNBQUNrTixFQUFBRSxNQUFELENBQU9DLEtBQUssSUFBSUUsT0FBUSxTQUFDck0sR0FBRCxPQUFXcEIsRUFBQUMsUUFBQUMsY0FBQzBOLEVBQUEzTixRQUFhbUIsZ1ZDWjdESCxFQUFBMUQsRUFBQSxjQUNBQSxFQUFBLElBQ0E2UCxFQUFBN1AsRUFBQSwwREFFTXNRLGNBQ0osU0FBQUEsRUFBWXpNLGdHQUFPQyxDQUFBQyxLQUFBdU0sR0FBQSxJQUFBdEYsbUtBQUFoSCxDQUFBRCxNQUFBdU0sRUFBQXJNLFdBQUFuRCxPQUFBb0QsZUFBQW9NLElBQUEvUCxLQUFBd0QsS0FDWEYsSUFEVyxPQUVqQm1ILEVBQUtDLEtBQU9ELEVBQUtDLEtBQUtySixLQUFWb0osR0FGS0EscVVBREU3RywrQ0FPbkIsT0FDRTFCLEVBQUFDLFFBQUFDLGNBQUN3SixFQUFBekosUUFBRCxLQUNFRCxFQUFBQyxRQUFBQyxjQUFBLGlFQU1KLE9BQ0VGLEVBQUFDLFFBQUFDLGNBQUEsV0FDR29CLEtBQUtrSCxPQUNOeEksRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxxQkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsTUFBSXdELFVBQVUsOEJBQWQscUNBRUYxRCxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsTUFBSXdELFVBQVUseUJBQ1oxRCxFQUFBQyxRQUFBQyxjQUFBLFVBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsV0FDZjFELEVBQUFDLFFBQUFDLGNBQUNrTixFQUFBVSxRQUFELENBQVNDLEdBQUcsU0FBU3JLLFVBQVUsU0FBL0IsbUNBU0NtSyw4ZUN0Q2Y1TSxFQUFBMUQsRUFBQSxlQUNBQSxFQUFBLE1BQ0FBLEVBQUEsTUFDQTZLLEVBQUE3SyxFQUFBLEdBQ0EyRCxFQUFBM0QsRUFBQSxPQUNBQSxFQUFBLEtBQ0E4SyxFQUFBOUssRUFBQSxPQUNBQSxFQUFBLEtBQ0E2UCxFQUFBN1AsRUFBQSxrTEFFcUJ5USxjQUNuQixTQUFBQSxFQUFZNU0sZ0dBQU9DLENBQUFDLEtBQUEwTSxHQUFBLElBQUF6RixtS0FBQWhILENBQUFELE1BQUEwTSxFQUFBeE0sV0FBQW5ELE9BQUFvRCxlQUFBdU0sSUFBQWxRLEtBQUF3RCxLQUNYRixJQURXLE9BRWpCbUgsRUFBSzBGLGNBQWdCMUYsRUFBSzBGLGNBQWM5TyxLQUFuQm9KLEdBQ3JCQSxFQUFLYixXQUFhYSxFQUFLYixXQUFXdkksS0FBaEJvSixHQUNsQkEsRUFBSzJGLGlCQUFtQjNGLEVBQUsyRixpQkFBaUIvTyxLQUF0Qm9KLEdBQ3hCQSxFQUFLNEYsWUFBYzVGLEVBQUs0RixZQUFZaFAsS0FBakJvSixHQUNuQkEsRUFBSzZGLGFBQWU3RixFQUFLNkYsYUFBYWpQLEtBQWxCb0osR0FDcEJBLEVBQUs4RixjQUFnQjlGLEVBQUs4RixjQUFjbFAsS0FBbkJvSixHQUNyQkEsRUFBS1YsWUFBY1UsRUFBS1YsWUFBWTFJLEtBQWpCb0osR0FDbkJBLEVBQUtHLE1BQVEsQ0FDWDRGLFVBQVcvSixRQUNYZ0ssZ0JBQWdCLEVBQ2hCQyxVQUFVLEVBQ1ZDLFNBQVUsR0FDVkMsVUFBVyxHQUNYQyxTQUFVLEdBQ1ZDLFdBQVksR0FDWkMsV0FBWSxHQUNaQyxXQUFZLEdBQ1pDLGFBQWMsYUFFaEJ4RyxFQUFLeUcsV0FBYSxHQUNsQnpHLEVBQUswRyxXQXRCWTFHLHFVQURhN0csNERBMkI5QkosS0FBSzROLGFBQ0w1TixLQUFLc0csb0JBQ0x0RyxLQUFLNk4sc0VBR2dCLElBQ2RiLEVBQWFoTixLQUFLb0gsTUFBbEI0RixVQUNQLE9BQUlBLElBQWM3SixPQUNUbkQsS0FBS29ILE1BQU0rRixTQUNUSCxJQUFjL0osUUFDaEJqRCxLQUFLb0gsTUFBTWdHLFVBQ1RKLElBQWM5SixPQUNoQmxELEtBQUtvSCxNQUFNaUcsY0FEYiwyQ0FNUSxJQUNSTCxFQUFhaE4sS0FBS29ILE1BQWxCNEYsVUFDUCxPQUFJQSxJQUFjN0osT0FDVG5ELEtBQUtvSCxNQUFNK0YsU0FDVEgsSUFBYy9KLFFBQ2hCakQsS0FBS29ILE1BQU1nRyxVQUNUSixJQUFjOUosT0FDaEJsRCxLQUFLb0gsTUFBTWlHLGNBRGIsZ0RBS2EsSUFDYkwsRUFBYWhOLEtBQUtvSCxNQUFsQjRGLFVBQ1AsT0FBSUEsSUFBYzdKLE9BQ1QsV0FDRTZKLElBQWMvSixRQUNoQixZQUNFK0osSUFBYzlKLE9BQ2hCLGdCQURGLG9DQUtDNEssR0FBVyxJQUFBOUUsRUFDb0JoSixLQUFLb0gsTUFBMUIyRyxFQURDL0UsRUFDWmdFLFVBQWdCUyxFQURKekUsRUFDSXlFLGFBREpPLEVBRUloTyxLQUFLaU8saUJBQXZCOUQsRUFGYzZELEVBRWQ3RCxHQUFJRyxFQUZVMEQsRUFFVjFELEdBQUlDLEVBRk15RCxFQUVOekQsR0FBSUgsRUFGRTRELEVBRUY1RCxHQUVYOEQsRUFBWTNELFFBQXFCLElBQVJELEdBQXVCSCxFQUFNLElBQUlsTCxLQUFLc0wsRUFBSUQsRUFBSUgsR0FBTSxJQUFJbEwsS0FDbkZvRSxFQUFRNkssRUFBUzlPLFdBQ2pCaUwsRUFBTTZELEVBQVNDLFNBQ2ZwUCxFQUFPbVAsRUFBUy9PLFVBQ2hCbUUsRUFBTzRLLEVBQVM3TyxjQUVwQixJQUFLK0ssRUFBSSxDQUNQLElBQU1nRSxFQUFrQixJQUFJblAsS0FBS3FFLEVBQU1ELEVBQU8sR0FBRzhLLFNBQ2pEL0QsRUFBSzNLLEtBQUs0TyxNQUFNRCxFQUFrQkYsRUFBUy9PLFdBQWEsR0FTMUQsT0FOSWEsS0FBS29ILE1BQU1rRyxpQkFBZ0QsSUFBM0J0TixLQUFLb0gsTUFBTW1HLFlBQStCdk4sS0FBS29ILE1BQU1vRyxhQUN2RmxLLEVBQU9nTCxTQUFTdE8sS0FBS29ILE1BQU1vRyxZQUMzQm5LLEVBQVFpTCxTQUFTdE8sS0FBS29ILE1BQU1tRyxZQUM1Qm5ELEVBQUtrRSxTQUFTdE8sS0FBS29ILE1BQU1rRyxhQUVaLENBQUNTLE1BQUt6RCxHQUFJakgsRUFBT2dILE1BQUtELEtBQUlHLEdBQUdqSCxFQUFNNkcsR0FBR3BMLEVBQU0wTyxtREFJbEQsSUFBQS9FLEVBQUExSSxNQUNULEVBQUE4RyxFQUFBMUMsZUFBY3lELEtBQUssU0FBQ3BCLEdBQ2RBLEVBQUlzQixNQUFRdEIsRUFBSXNCLEtBQUs0RixTQUN2QmpGLEVBQUtKLFNBQVMsQ0FBRXFGLFNBQVVsSCxFQUFJc0IsS0FBSzRGLFdBRW5DakYsRUFBS2tFLHFCQUdSekUsTUFBTSxXQUNMTyxFQUFLa0UsK0RBSVMyQixFQUFvQlQsR0FBVyxJQUFBL0UsRUFBQS9JLEtBQ3pDK0QsRUFBUy9ELEtBQUt3TyxVQUFVVixHQUN4QlcsRUFBZ0J6TyxLQUFLME8sdUJBR3pCLEVBQUE1SCxFQUFBdEMscUJBQW9CVCxHQUFROEQsS0FBSyxTQUFDQyxHQUNoQ2lCLEVBQUtULFNBQUxxRyxFQUFBLEdBQWdCRixFQUFoQnZLLEVBQUEsR0FBcUM2RSxFQUFLM0IsTUFBTXFILEdBQWhELENBQWdFRyxjQUFjOUcsRUFBS0MsV0FDbEYsU0FBQ2MsR0FDRmpDLFFBQVFDLElBQUksd0NBQXlDZ0Msd0NBS2hEZ0csRUFBb0JmLEdBQVcsSUFBQTdFLEVBQUFqSixLQUNsQytELEVBQVMvRCxLQUFLd08sVUFBVVYsR0FDeEJXLEVBQWdCek8sS0FBSzBPLHVCQUd6QixFQUFBNUgsRUFBQXZDLGtCQUFpQlIsR0FBUThELEtBQUssU0FBQ0MsR0FBUyxJQUFBZ0gsRUFBQUMsRUFDNkJqSCxFQUFLQyxLQUFqRWlILEVBRCtCRCxFQUMvQkMsWUFBYUMsRUFEa0JGLEVBQ2xCRSxXQUFZQyxFQURNSCxFQUNORyxTQUFVQyxFQURKSixFQUNJSSxNQUFPL0UsRUFEWDJFLEVBQ1czRSxHQUFJRyxFQURmd0UsRUFDZXhFLEdBQUlELEVBRG5CeUUsRUFDbUJ6RSxHQUFJSCxFQUR2QjRFLEVBQ3VCNUUsR0FDN0RsQixFQUFLWCxVQUFMcUcsRUFBQUcsRUFBQSxHQUFnQkwsRUFBaEJ2SyxFQUFBLEdBQXFDK0UsRUFBSzdCLE1BQU1xSCxHQUFoRCxDQUFnRU8sY0FBYUMsYUFBWUMsV0FBVUMsUUFBTy9FLEtBQUlHLEtBQUlELEtBQUdILFFBQXJId0UsRUFBQUcsRUFBQSxhQUFxSXhFLEdBQXJJcUUsRUFBQUcsRUFBQSxhQUFxSjFFLEdBQXJKdUUsRUFBQUcsRUFBQSxhQUFxS3ZFLEdBQXJLdUUsS0FDRSxTQUFDakcsR0FDRmpDLFFBQVFDLElBQUksZ0NBQWlDZ0Msb0RBSzdCbUUsR0FBVyxJQUFBb0MsRUFBQXBQLEtBQ2hDQSxLQUFLc0ksU0FBUyxDQUFDMEUsVUFBV0EsRUFBV0UsVUFBVSxHQUFRLFdBQ3JEa0MsRUFBS3hCLGFBQ0x3QixFQUFLOUksOERBS1B0RyxLQUFLa0MsS0FBS21OLFNBQVNDLFVBQVVDLE9BQU8sWUFDcEN2UCxLQUFLa0MsS0FBS3NOLE1BQU1GLFVBQVVDLE9BQU8sVUFDN0J2UCxLQUFLa0MsS0FBS3VOLHNCQUNaelAsS0FBS2tDLEtBQUt3TixvQkFBb0JKLFVBQVVDLE9BQU8sV0FDL0N2UCxLQUFLa0MsS0FBS3VOLG9CQUFvQkgsVUFBVUMsT0FBTyxZQUVqRHZQLEtBQUtrQyxLQUFLeU4sZ0JBQWdCTCxVQUFVQyxPQUFPLGlEQUt2Q3ZQLEtBQUtvSCxNQUFNdUcsVUFDYixFQUFBN0csRUFBQXpDLGNBQWF3RCxLQUFLLFdBQ2pCRixPQUFPTSxTQUFTMkgsS0FBTyxXQUd4QmpJLE9BQU9NLFNBQVMySCxLQUFPLHFEQUlQLElBQ1hqQyxFQUFZM04sS0FBS29ILE1BQWpCdUcsU0FDUCxPQUNFalAsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxXQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLa0UsSUFBSSxRQUFPVixVQUFVLGFBQWFXLFFBQVMvQyxLQUFLMk0sZUFDbkRqTyxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLG9CQUNiMUQsRUFBQUMsUUFBQUMsY0FBQ21JLEVBQUFsSCxPQUFELENBQVE4QyxRQUFRLGNBQWNFLGVBQWdCN0MsS0FBSzRNLGtCQUFxQmUsRUFBdUIsU0FBWixXQUNuRmpQLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUSxjQUFjRSxlQUFnQixrQkFBTThFLE9BQU9rSSxLQUFLLHFEQUFoRSxrREFPQ3RRLEVBQUt1USxFQUFhQyxHQUFnQixJQUFBQyxFQUFBaFEsS0FDdkM4UCxFQUNGOVAsS0FBS3NJLFNBQVMsQ0FBQzJFLGVBQWdCMU4sRUFBS2dILGlCQUF3QyxJQUFwQndKLEVBQWtDQSxFQUFpQi9QLEtBQUtvSCxNQUFNYixZQUFhNEcsU0FBVSxHQUFJQyxVQUFXLEdBQUlDLFNBQVUsSUFBSyxXQUM3SzJDLEVBQUtwQyxXQUFXa0MsR0FDaEJFLEVBQUsxSixrQkFBa0J3SixLQUd6QjlQLEtBQUtzSSxTQUFTLENBQUMyRSxlQUFnQjFOLEVBQUtnSCxZQUFhd0osMENBS25EL1AsS0FBS3NJLFNBQVMsQ0FBQzJILFdBQVcsMkNBR2IsSUFBQUMsRUFBQWxRLEtBQ2JBLEtBQUtzSSxTQUFTLENBQUMySCxXQUFXLEtBQzFCLEVBQUFuSixFQUFBckMsbUJBQWtCLENBQUMwRSxHQUFJbkosS0FBS29ILE1BQU0rSSxxQkFBcUJoSCxLQUFLdEIsS0FBSyxTQUFDcEIsR0FDNURBLElBQ0Z5SixFQUFLdEMsWUFBVyxHQUFNLEdBQ3RCc0MsRUFBSzVKLG1CQUFrQixHQUFNLDBDQUt2QjhKLEdBQ1ZwUSxLQUFLc0ksU0FBUyxDQUFDL0IsYUFBYSxFQUFNOEosbUJBQW1CRCwwQ0FHekNBLEdBQ1pwUSxLQUFLc0ksU0FBUyxDQUFDMkgsV0FBVyxFQUFNRSxxQkFBcUJDLDRDQUlyRHBRLEtBQUtzSSxTQUFTLENBQUM0RSxVQUFXbE4sS0FBS29ILE1BQU04RixXQUNyQ2xOLEtBQUtrQyxLQUFLb08sZUFBZUMsVUFBWSxxREFHWkMsR0FBZ0IsSUFBQUMsRUFBQXpRLEtBQ3pDLElBQUt3USxFQUFnQixDQUVuQixJQURBLElBQU1FLEVBQVMsR0FDUHJVLEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUNwQnFVLEVBQU9qUyxLQUNMQyxFQUFBQyxRQUFBQyxjQUFBLE9BQUtoQixJQUFLLG9CQUFzQnZCLEdBQzlCcUMsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSx1QkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsb0JBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLFFBQU13RCxVQUFVLHdDQUVsQjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsb0NBR2pCMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxrQkFJckIsT0FBT3NPLEVBSVQsT0FEc0IxUSxLQUFLaU8saUJBQXBCZSxZQUVPMkIsZ0JBQWdCQyxJQUFJLFNBQUNDLEVBQWFDLEdBQzVDLE9BQUlMLEVBQUtySixNQUFNOEYsVUFBWXVELEVBQUsvQyxXQUFXK0MsRUFBS3JKLE1BQU00RixhQUFleUQsRUFBS3JKLE1BQU04RixVQUFZNEQsRUFBUSxHQUM5RkwsRUFBS3JKLE1BQU04RixXQUNidUQsRUFBSy9DLFdBQVcrQyxFQUFLckosTUFBTTRGLFlBQWEsR0FHeEN0TyxFQUFBQyxRQUFBQyxjQUFBLE9BQUtoQixJQUFLLG9CQUFzQmtULEdBQzlCcFMsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSx1QkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsb0JBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLG9CQUFvQnlPLEVBQVk3RyxVQUMvQ3RMLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUscUJBQW9CLEVBQUEyRSxFQUFBakksWUFBVytSLEVBQVk5UixPQUMxREwsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxvQkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS21FLFFBQVMsa0JBQU0wTixFQUFLbEssWUFBTHJDLEVBQUEsR0FBcUIyTSxLQUFlRSxPQUFPLE9BQU9DLFFBQVEsZUFBZUMsTUFBTSxRQUNqR3ZTLEVBQUFDLFFBQUFDLGNBQUEsUUFBTWpDLEVBQUUsc2VBQ1IrQixFQUFBQyxRQUFBQyxjQUFBLFFBQU1qQyxFQUFFLHN3QkFJZCtCLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsdUNBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFNBQVNqQixNQUFRLENBQUMrUCxTQUFVTCxFQUFZTSxRQUFVLFFBR25FelMsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGtDQUFrQyxJQUFJeU8sRUFBWWpILFFBRWpFbEwsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxvQkFDWnlPLEVBQVlNLFFBQVUsTUFFekJ6UyxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLDBCQUViMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLbUUsUUFBUyxrQkFBTTBOLEVBQUsxRCxjQUFjLENBQUM1RCxHQUFJMEgsRUFBWTFILE1BQU1pSSxLQUFLLFVBQVVMLE9BQU8sT0FBT0MsUUFBUSxnQkFBZ0JDLE1BQU0sUUFDdkh2UyxFQUFBQyxRQUFBQyxjQUFBLFFBQU1qQyxFQUFFLDhKQUNSK0IsRUFBQUMsUUFBQUMsY0FBQSxRQUFNakMsRUFBRSw4SkFDUitCLEVBQUFDLFFBQUFDLGNBQUEsUUFBTWpDLEVBQUUscXlDQUNSK0IsRUFBQUMsUUFBQUMsY0FBQSxRQUFNakMsRUFBRSxrS0FLaEIrQixFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGtCQUlaLDRDQU1GN0QsR0FBTSxJQUFBOFMsRUFBQXJSLEtBQ0osU0FBVHpCLEVBQ0Z5QixLQUFLc0ksU0FBUyxDQUFDbUYsYUFBYyxRQUFTLFdBQ3BDNEQsRUFBS3pELFlBQVcsR0FBTSxHQUN0QnlELEVBQUsvSyxtQkFBa0IsR0FBTSxLQUViLGNBQVQvSCxHQUNUeUIsS0FBS3NJLFNBQVMsQ0FBQ21GLGFBQWMsYUFBYyxXQUN6QzRELEVBQUt6RCxZQUFXLEdBQU0sR0FDdEJ5RCxFQUFLL0ssbUJBQWtCLEdBQU0sa0RBS2QsSUFBQWdMLEVBQUF0UixLQUNiaU8sRUFBaUJqTyxLQUFLaU8saUJBRFQvRSxFQUUyQ2xKLEtBQUtvSCxNQUE1RDRGLEVBRlk5RCxFQUVaOEQsVUFGWXVFLEVBQUFySSxFQUVEZ0UsZ0JBRkMxTSxJQUFBK1EsS0FFaUI1RCxFQUZqQnpFLEVBRWlCeUUsU0FBVUYsRUFGM0J2RSxFQUUyQnVFLGFBRXhDK0MsRUFBaUJ2QyxFQUFlZSxZQUNwQyxPQUNFdFEsRUFBQUMsUUFBQUMsY0FBQSxXQUtFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUtrRSxJQUFJLGlCQUFpQlYsVUFBVyxnQ0FBa0M4SyxFQUFXLHFCQUF1QixLQUN2R3hPLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsa0JBQ2IxRCxFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVMscUNBQXdELGNBQWpCOEssRUFBK0Isb0JBQXNCLElBQUs1SyxlQUFnQixrQkFBTXlPLEVBQUtFLGFBQWEsZUFBMUosZUFDQTlTLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUyxzQ0FBeUQsY0FBakI4SyxFQUErQixtQkFBcUIsb0JBQXFCNUssZUFBZ0Isa0JBQU15TyxFQUFLRSxhQUFhLFVBQTFLLFdBRUY5UyxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUseUJBQ2EsSUFBcEJvTyxHQUEwRSxJQUF2Q3pULE9BQU8wVSxLQUFLakIsR0FBZ0JoSSxPQUNyRTlKLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsMkJBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLE1BQU1XLFFBQVMsa0JBQU11TyxFQUFLbEwsWUFBVyxLQUFwRCxxQkFDRXVILEdBQVlqUCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGlCQUFnQjFELEVBQUFDLFFBQUFDLGNBQUEsS0FBR2dSLEtBQUssVUFBU2xSLEVBQUFDLFFBQUFDLGNBQUEsd0JBQWhELDJCQUVoQkYsRUFBQUMsUUFBQUMsY0FBQSxXQUNJb08sSUFBYzdKLE9BQU9uRCxLQUFLMFIsMkJBQTJCbEIsR0FBa0IsS0FDeEV4RCxJQUFjL0osUUFBUWpELEtBQUswUiwyQkFBMkJsQixHQUFrQixLQUN4RXhELElBQWM5SixPQUFPbEQsS0FBSzBSLDJCQUEyQmxCLEdBQWtCLFNBTWhGOVIsRUFBQUMsUUFBQUMsY0FBQ21JLEVBQUFsSCxPQUFELENBQVE4QyxRQUFRLGdCQUFnQkUsZUFBZ0Isa0JBQU15TyxFQUFLSyxrQkFDekRqVCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFXOEssRUFBVyxpQkFBbUIsR0FBSXBLLElBQUksY0FBYzhPLE1BQU0sNkJBQTZCWCxNQUFNLEtBQUtGLE9BQU8sS0FBS0MsUUFBUSxhQUNwSXRTLEVBQUFDLFFBQUFDLGNBQUEsUUFBTWpDLEVBQUUsc0RBR1orQixFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFVBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUtrRSxJQUFJLGtCQUFrQlYsVUFBVyxvQkFDcEMxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLElBQ2YxRCxFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVEsdUJBQXVCRSxlQUFnQixrQkFBTXlPLEVBQUtsTCxZQUFXLEtBQTdFLG9EQVFWLElBQU1ySCxFQUFPLElBQUlFLEtBQ1g0UyxFQUFZcE8sYUFBVzFFLEVBQUtLLFlBRWxDLE9BRGlCTCxFQUFLSSxVQUNKLElBQU0wUyxFQUFZLElBQU05UyxFQUFLTSx5REFFOUIsSUFDVjJOLEVBQWFoTixLQUFLb0gsTUFBbEI0RixVQURVOEUsRUFFSzlSLEtBQUtpTyxpQkFBcEIzRCxFQUZVd0gsRUFFVnhILEdBQUlDLEVBRk11SCxFQUVOdkgsR0FBS0gsRUFGQzBILEVBRUQxSCxHQUNaMkgsRUFBZ0IsR0FDaEJDLEdBQWlCLEVBQ2pCQyxHQUFpQixFQWVyQixPQWJJakYsSUFBYy9KLFNBQ2hCOE8sT0FBZ0MsSUFBUnpILEVBQXNCN0csYUFBVzZHLEdBQU0sT0FDL0QwSCxFQUF3QixJQUFQMUgsRUFDakIySCxFQUF3QixLQUFQM0gsR0FDUjBDLElBQWM3SixRQUN2QjRPLEVBQWlCM0gsRUFBTSxRQUFXQSxFQUFNLE9BQ3hDNEgsRUFBd0IsSUFBUDVILEVBQ2pCNkgsRUFBd0IsSUFBUDdILElBRWpCMkgsRUFBZ0J4SCxHQUFVLE9BQzFCMEgsRUFBd0IsT0FBUDFILEdBR1osQ0FBQ3dILGdCQUFlQyxpQkFBZ0JDLHFEQUc5QjFULEVBQU1nQixHQUFLLElBQUEyUyxFQUFBbFMsS0FDaEJtUyxFQUFjLEdBQ2Q1VCxJQUFTNEUsT0FDWGdQLEVBQWMsQ0FBQzdFLFdBQVkvTixHQUNsQmhCLElBQVMwRSxRQUNsQmtQLEVBQWMsQ0FBQzVFLFdBQVloTyxHQUNsQmhCLElBQVMyRSxTQUNsQmlQLEVBQWMsQ0FBQzNFLFdBQVlqTyxJQUU3QlMsS0FBS3NJLFNBQUxwRSxFQUFBLEdBQWtCaU8sR0FBYyxXQUM5QkQsRUFBS3RFLFlBQVcsR0FBTSxHQUN0QnNFLEVBQUs1TCxtQkFBa0IsR0FBTSxzQ0FJeEIsSUFBQThMLEVBQUFwUyxLQUFBcVMsRUFDZ0ZyUyxLQUFLb0gsTUFBckY0RixFQURBcUYsRUFDQXJGLFVBQVdDLEVBRFhvRixFQUNXcEYsZUFBa0MxRyxHQUQ3QzhMLEVBQzJCbkYsU0FEM0JtRixFQUM2QzlMLGFBQWE4SixFQUQxRGdDLEVBQzBEaEMsbUJBRDFEaUMsRUFFeUZ0UyxLQUFLaU8saUJBRjlGc0UsRUFBQUQsRUFFQXBELGdCQUZBMU8sSUFBQStSLE9BRVcvUixFQUZYK1IsRUFBQUMsRUFBQUYsRUFFc0JuRCxhQUZ0QjNPLElBQUFnUyxPQUU4QmhTLEVBRjlCZ1MsRUFBQUMsRUFBQUgsRUFFeUMxRCxnQkFGekNwTyxJQUFBaVMsT0FFb0RqUyxFQUZwRGlTLEVBQUFDLEVBQUFKLEVBRStEckQsa0JBRi9Eek8sSUFBQWtTLE9BRTRFbFMsRUFGNUVrUyxFQUFBQyxFQUdpRDNTLEtBQUs0UyxtQkFIdERELEVBR0FaLGNBSEFZLEVBR2VYLGVBSGZXLEVBRytCVixlQUN0QyxPQUNFdlQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxJQUNiMUQsRUFBQUMsUUFBQUMsY0FBQ2tOLEVBQUErRyxPQUFELENBQVFDLE1BQU83RixFQUFnQjhGLFFBQVMsaUJBQU0sa0NBQzlDclUsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUtrRSxJQUFJLFdBQVdWLFVBQVcscUJBQXdCNkssR0FBa0IxRyxFQUFlLFdBQWEsSUFBS3hELFFBQVMsa0JBQU1xUCxFQUFLaE0sWUFBVyxNQUN4SXBHLEtBQUtnVCxvQkFDTnRVLEVBQUFDLFFBQUFDLGNBQUEsT0FBS2tFLElBQUksY0FBY1YsVUFBVSxlQUMvQjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsSUFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS2tFLElBQUksc0JBQXNCVixVQUFVLG9DQUN2QzFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsWUFDYjFELEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUSxzQkFBc0JFLGVBQWdCN0MsS0FBSzJNLGVBQ3pEak8sRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxZQUFZNlEsSUFBSSxvQkFJbkN2VSxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFdBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFVBQWYsbUJBQ0ExRCxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsUUFBTXdELFVBQVUsT0FBaEIsTUFDQTFELEVBQUFDLFFBQUFDLGNBQUEsUUFBTXdELFVBQVUsb0JBQXFDLElBQWQ4TSxFQUE0QkEsRUFBVyxNQUVoRnhRLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsY0FDYjFELEVBQUFDLFFBQUFDLGNBQUEsV0FBS0YsRUFBQUMsUUFBQUMsY0FBQSxRQUFNd0QsVUFBVSxPQUFPcEMsS0FBS2tULHFCQUlyQ3hVLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsMkJBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGFBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsVUFBUXlLLFNBQVUsU0FBQ3RJLEdBQUQsT0FBT3FSLEVBQUtlLFdBQVdoUSxPQUFNcEMsRUFBRXVJLE9BQU9oTSxRQUFRNkwsR0FBRyx3QkFBd0I3TCxNQUFPMEMsS0FBS29ILE1BQU1rRyxhQUMxRyxFQUFBdkcsRUFBQXpJLGVBQWMsU0FFakJJLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFRZ0QsZUFBZ0Isa0JBQU11UCxFQUFLZ0IsdUJBQXVCalEsU0FBUVIsUUFBUyxtQ0FBcUNxSyxJQUFjN0osT0FBTyxvQkFBc0IsS0FBM0osUUFFQXpFLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVcsZ0JBQWtCNEssSUFBYzdKLE9BQU8sTUFBTyxRQUdsRXpFLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsYUFDYjFELEVBQUFDLFFBQUFDLGNBQUEsVUFBUXlLLFNBQVUsU0FBQ3RJLEdBQUQsT0FBT3FSLEVBQUtlLFdBQVdsUSxRQUFPbEMsRUFBRXVJLE9BQU9oTSxRQUFRNkwsR0FBRyx5QkFBeUI3TCxNQUFPMEMsS0FBS29ILE1BQU1tRyxhQUM1RyxFQUFBeEcsRUFBQXpJLGVBQWMsVUFFakJJLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFRZ0QsZUFBZ0Isa0JBQU11UCxFQUFLZ0IsdUJBQXVCblEsVUFBU04sUUFBUyxtQ0FBcUNxSyxJQUFjL0osUUFBUSxvQkFBc0IsS0FBN0osU0FFQXZFLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVcsZ0JBQWtCNEssSUFBYy9KLFFBQVEsTUFBTyxPQUVqRXZFLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsYUFDYjFELEVBQUFDLFFBQUFDLGNBQUEsVUFBUXlLLFNBQVUsU0FBQ3RJLEdBQUQsT0FBT3FSLEVBQUtlLFdBQVdqUSxPQUFNbkMsRUFBRXVJLE9BQU9oTSxRQUFRNkwsR0FBRyx3QkFBd0I3TCxNQUFPMEMsS0FBS29ILE1BQU1vRyxhQUM1RyxFQUFBekcsRUFBQXpJLGVBQWMsU0FFZkksRUFBQUMsUUFBQUMsY0FBQ21JLEVBQUFsSCxPQUFELENBQVFnRCxlQUFnQixrQkFBTXVQLEVBQUtnQix1QkFBdUJsUSxTQUFRUCxRQUFTLG1DQUFxQ3FLLElBQWM5SixPQUFPLG9CQUFzQixLQUEzSixRQUVBeEUsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVyxnQkFBa0I0SyxJQUFjOUosT0FBTyxNQUFPLFFBR2xFeEUsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxzQkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsVUFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsc0JBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQU1xUyxNQUFNLEtBQUtGLE9BQU8sS0FBS0MsUUFBUSxhQUFZdFMsRUFBQUMsUUFBQUMsY0FBQSxRQUFNakMsRUFBRSw4R0FFM0QrQixFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLG9CQUFvQixrQkFBaUMsSUFBWCtNLEVBQXdCQSxFQUFPLE9BRzFGelEsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxXQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSx3QkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsV0FBVzZPLE1BQU0sS0FBS0YsT0FBTyxLQUFLQyxRQUFRLGFBQVl0UyxFQUFBQyxRQUFBQyxjQUFBLFFBQU1qQyxFQUFFLDZHQUUvRStCLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsb0JBQW9CLGNBQWdCNk0sUUFBNEMsSUFBdkJBLEVBQVdyRixPQUEwQnFGLEVBQVdyRixPQUFTLFFBR3BJNUosS0FBS3FULHVCQUdUekUsR0FBWUEsRUFBUzBFLGlCQUFvQjFFLEVBQVMwRSxnQkFBZ0I5SyxPQUFTLEVBQzFFOUosRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSwyQkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS2tFLElBQUksc0JBQXNCVixVQUFVLGtCQUN2QzFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsaUNBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLFlBQU8sbUJBRVJvTyxJQUFjN0osT0FBUXpFLEVBQUFDLFFBQUFDLGNBQUMyVSxFQUFBNVUsUUFBRCxDQUFPaVEsU0FBVUEsRUFBVWIsSUFBS2YsSUFBZSxLQUNyRUEsSUFBYy9KLFFBQVN2RSxFQUFBQyxRQUFBQyxjQUFDMlUsRUFBQTVVLFFBQUQsQ0FBT2lRLFNBQVVBLEVBQVViLElBQUtmLElBQWUsS0FDdEVBLElBQWM5SixPQUFReEUsRUFBQUMsUUFBQUMsY0FBQzJVLEVBQUE1VSxRQUFELENBQU9pUSxTQUFVQSxFQUFVYixJQUFLZixJQUFlLE9BRWpFLE9BR2RDLEVBQ0N2TyxFQUFBQyxRQUFBQyxjQUFBLFdBQ0dGLEVBQUFDLFFBQUFDLGNBQUM0VSxFQUFBN1UsUUFBRCxDQUFZeUgsV0FBWXBHLEtBQUtvRyxjQUN2QixLQUNWRyxFQUNDN0gsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFDNFUsRUFBQTdVLFFBQUQsQ0FBWXlILFdBQVlwRyxLQUFLb0csV0FBWWlLLG1CQUFvQkEsS0FDdEQsS0FDVnJRLEtBQUtvSCxNQUFNNkksV0FBYXZSLEVBQUFDLFFBQUFDLGNBQUM2VSxFQUFBOVUsUUFBRCxDQUFPK1UsZUFBZ0IxVCxLQUFLNk0sWUFBYThHLGdCQUFpQjNULEtBQUs4TSxtQ0FuZTNFSixnZkNWckIvTSxFQUFBMUQsRUFBQSx1Q0FDQTZLLEVBQUE3SyxFQUFBLEdBQ0EyRCxFQUFBM0QsRUFBQSxHQUNBOEssRUFBQTlLLEVBQUEsT0FFcUIyWCxjQUNuQixTQUFBQSxFQUFZOVQsZ0dBQU9DLENBQUFDLEtBQUE0VCxHQUFBLElBQUEzTSxtS0FBQWhILENBQUFELE1BQUE0VCxFQUFBMVQsV0FBQW5ELE9BQUFvRCxlQUFBeVQsSUFBQXBYLEtBQUF3RCxLQUNYRixJQUNObUgsRUFBSzRNLFdBQWE1TSxFQUFLNE0sV0FBV2hXLEtBQWhCb0osR0FDbEJBLEVBQUs2TSxpQkFBbUI3TSxFQUFLNk0saUJBQWlCalcsS0FBdEJvSixHQUN4QkEsRUFBS3lLLDJCQUE2QnpLLEVBQUt5SywyQkFBMkI3VCxLQUFoQ29KLEdBQ2xDQSxFQUFLOE0sNEJBQThCOU0sRUFBSzhNLDRCQUE0QmxXLEtBQWpDb0osR0FDbkNBLEVBQUsrTSxZQUFjL00sRUFBSytNLFlBQVluVyxLQUFqQm9KLEdBQ25CLElBQUsyQyxFQUFTLEdBQ1RJLEVBQVcsR0FDWGlLLEVBQU0sR0FDTjVRLEVBQVEsR0FDUkMsRUFBTyxHQUNSMkcsRUFBYyxHQUNsQixHQUFJbkssRUFBTXVRLG1CQUFvQixDQUM1QnpHLEVBQVM5SixFQUFNdVEsbUJBQW1CekcsT0FDbENJLEVBQVdsSyxFQUFNdVEsbUJBQW1CckcsU0FDcENDLEVBQWNuSyxFQUFNdVEsbUJBQW1CcEcsWUFDdkMsSUFBSWxMLEVBQU8sSUFBSUUsS0FBS2EsRUFBTXVRLG1CQUFtQnRSLE1BQzdDa1YsRUFBTWxWLEVBQUtJLFVBQ1hrRSxFQUFRdEUsRUFBS0ssV0FDYmtFLEVBQU92RSxFQUFLTSxjQXBCRyxPQXVCakI0SCxFQUFLRyxNQUFRLENBQ1g3SSxLQUFNLFVBQ05xTCxPQUFRQSxFQUNSSSxTQUFVQSxFQUNWQyxZQUFhQSxFQUNiZ0ssSUFBS0EsRUFDTDVRLE1BQU9BLEVBQ1BDLEtBQU1BLEVBQ04wRSxNQUFPLEdBQ1BrTSxtQkFBb0IsSUFoQ0xqTixxVUFEbUI3Ryw0REFxQ2xCLElBQUFzSSxFQUFBMUksTUFDbEIsRUFBQThHLEVBQUFuQyx5QkFBd0JrRCxLQUFLLFNBQUNwQixHQUN4QkEsRUFBSXNCLE9BQVN0QixFQUFJc0IsS0FBS2MsSUFDeEJILEVBQUtKLFNBQVMsQ0FBQzRMLG1CQUFvQnpOLEVBQUlzQixLQUFLQSxLQUFLb00sTUFBTSxFQUFFLEtBRXpEdk4sUUFBUUMsSUFBSSx1Q0FHaEJ3QixRQUFRK0wsVUFBVSxRQUFTLGdCQUMzQnpNLE9BQU8wTSxXQUFhclUsS0FBS2dVLGdEQUdmTSxHQUNWM00sT0FBTzBNLFdBQWEsS0FDcEJyVSxLQUFLRixNQUFNc0csWUFBVyx3REFJdEIsT0FDRTFILEVBQUFDLFFBQUFDLGNBQUEsV0FDRUYsRUFBQUMsUUFBQUMsY0FBQSxPQUFLaEIsSUFBSSxpQkFBaUJ3RSxVQUFVLDRCQUNsQzFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsbUNBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLFFBQU13RCxVQUFVLHdDQUVsQjFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsb0VBT1o3RCxHQUNUeUIsS0FBS3NJLFNBQVMsQ0FBQy9KLEtBQU1BLHlDQUdWZ0IsR0FDUEEsR0FBT1MsS0FBS29ILE1BQU1ZLE1BQU00QixPQUMxQjVKLEtBQUtzSSxTQUFTLENBQUNzQixPQUFRckssRUFBS3lJLE1BQU0sS0FFbENoSSxLQUFLc0ksU0FBUyxDQUFDc0IsT0FBUXJLLDJDQUlaQSxHQUNUQSxHQUFPUyxLQUFLb0gsTUFBTVksTUFBTWdDLFNBQzFCaEssS0FBS3NJLFNBQVMsQ0FBQzBCLFNBQVV6SyxFQUFLeUksTUFBTSxLQUVwQ2hJLEtBQUtzSSxTQUFTLENBQUMwQixTQUFVekssOENBSVgsSUFBQXlKLEVBQ1doSixLQUFLb0gsTUFBekI2TSxFQURTakwsRUFDVGlMLElBQUs1USxFQURJMkYsRUFDSjNGLE1BQU9DLEVBREgwRixFQUNHMUYsS0FDYixJQUFJckUsS0FBS3FQLFNBQVNoTCxHQUFPZ0wsU0FBU2pMLEdBQVFpTCxTQUFTMkYsSUFBUSxJQUFJaFYsTUFDbkVlLEtBQUtzSSxTQUFTLENBQUNOLE1BQU0seUNBSWJ6SSxHQUNWLElBQUkyTyxFQUFXLElBQUlqUCxLQUNuQixHQUFJTSxJQUFRcUUsWUFBVyxDQUNyQixJQUFJN0UsRUFBTyxJQUFJRSxLQUFLaVAsRUFBU3FHLFFBQVFyRyxFQUFTL08sVUFBWSxJQUMxRCtPLEVBQVduUCxFQUViLE1BQU8sQ0FBRWtWLElBQUsvRixFQUFTL08sVUFBV2tFLE1BQU82SyxFQUFTOU8sV0FBWWtFLEtBQU00SyxFQUFTN08sa0RBR3BFRSxHQUFLLElBQUF3SixFQUFBL0ksS0FDZCxHQUFJVCxJQUFRb0UsUUFBTyxDQUNqQixJQUFNNlEsRUFBV3hVLEtBQUt5VSxZQUFZOVEsU0FDbEMzRCxLQUFLc0ksU0FBTHBFLEVBQUEsQ0FBZ0J3USxVQUFTLEVBQU1DLGNBQWMsR0FBVUgsR0FBVyxXQUNoRXpMLEVBQUs2TCx5QkFFRixHQUFJclYsR0FBT3FFLFlBQVcsQ0FDM0IsSUFBTTRRLEVBQVd4VSxLQUFLeVUsWUFBWTdRLGFBQ2xDNUQsS0FBS3NJLFNBQUxwRSxFQUFBLENBQWdCd1EsVUFBVSxFQUFPQyxjQUFjLEdBQVNILEdBQVcsV0FDakV6TCxFQUFLNkwseUJBR1A1VSxLQUFLc0ksU0FBTHBFLEVBQUEsR0FBa0IzRSxHQUFNLFdBQ3RCd0osRUFBSzZMLGtCQUNMLElBQU1DLEVBQWdCOUwsRUFBSzBMLFlBQVk5USxTQUNqQ21SLEVBQW9CL0wsRUFBSzBMLFlBQVk3USxhQUhmc0YsRUFJREgsRUFBSzNCLE1BQXpCNk0sRUFKcUIvSyxFQUlyQitLLElBQUs1USxFQUpnQjZGLEVBSWhCN0YsTUFBT0MsRUFKUzRGLEVBSVQ1RixLQUNmMlEsRUFBSXpJLGFBQWVxSixFQUFjWixJQUFJekksWUFBY25JLEVBQU1tSSxhQUFlcUosRUFBY3hSLE1BQU1tSSxZQUFjbEksRUFBS2tJLGFBQWVxSixFQUFjdlIsS0FBS2tJLFdBQ25KekMsRUFBS1QsU0FBUyxDQUFDb00sVUFBVSxFQUFNQyxjQUFjLElBQ3BDVixFQUFJekksYUFBZXNKLEVBQWtCYixJQUFJekksWUFBY25JLEVBQU1tSSxhQUFlc0osRUFBa0J6UixNQUFNbUksWUFBY2xJLEVBQUtrSSxhQUFlc0osRUFBa0J4UixLQUFLa0ksV0FDdEt6QyxFQUFLVCxTQUFTLENBQUNvTSxVQUFVLEVBQU9DLGNBQWMsSUFFOUM1TCxFQUFLVCxTQUFTLENBQUNvTSxVQUFVLEVBQU9DLGNBQWMsNENBTXhDLElBQUF0QyxFQUNlclMsS0FBS29ILE1BQXpCNk0sRUFESzVCLEVBQ0w0QixJQUFLNVEsRUFEQWdQLEVBQ0FoUCxNQUFPQyxFQURQK08sRUFDTy9PLEtBQ2J5UixFQUFVLFlBRWhCLE9BQUtBLEVBQVFDLEtBQUtmLElBQVNjLEVBQVFDLEtBQUszUixJQURwQixVQUMyQzJSLEtBQUsxUixHQUkzRCxJQUFJckUsS0FBS3FQLFNBQVNoTCxHQUFPZ0wsU0FBU2pMLEdBQVFpTCxTQUFTMkYsSUFBUSxJQUFJaFYsTUFDdEVlLEtBQUtzSSxTQUFTLENBQUNOLE1BQU8sQ0FBQ2pKLEtBQU0seUNBQ3RCLElBR1BpQixLQUFLakIsS0FBTyxJQUFJRSxLQUFLcVAsU0FBU2hMLEdBQU9nTCxTQUFTakwsR0FBUWlMLFNBQVMyRixLQUN4RCxJQVRQalUsS0FBS3NJLFNBQVMsQ0FBQ04sTUFBTyxDQUFDakosS0FBTSxtQ0FDdEIsNENBWVQsSUFEZWtXLEVBRVlqVixLQUFLb0gsTUFBekJ3QyxFQUZRcUwsRUFFUnJMLE9BQVFJLEVBRkFpTCxFQUVBakwsU0FDZixPQUFLSixHQUZLLGdCQUVVb0wsS0FBS3BMLEdBSXBCSSxJQUlBaEssS0FBS2tWLGVBSFJsVixLQUFLc0ksU0FBUyxDQUFDTixNQUFPLENBQUNnQyxTQUFVLHNDQUMxQixJQUxQaEssS0FBS3NJLFNBQVMsQ0FBQ04sTUFBTyxDQUFDNEIsT0FBUSxvQ0FDeEIsOENBV1EsSUFBQVgsRUFBQWpKLEtBQUFtVixFQUMrQ25WLEtBQUtvSCxNQUE5RHdDLEVBRFV1TCxFQUNWdkwsT0FBMEJyTCxHQURoQjRXLEVBQ0ZsQixJQURFa0IsRUFDRzlSLE1BREg4UixFQUNVN1IsS0FEVjZSLEVBQ2dCNVcsTUFBTXlMLEVBRHRCbUwsRUFDc0JuTCxTQUFVQyxFQURoQ2tMLEVBQ2dDbEwsWUFDM0NtTCxFQUFzQnBWLEtBQUtxVixpQkFFakMsR0FEQXJWLEtBQUtzSSxTQUFTLENBQUNnTixlQUFlLElBQzFCRixFQUFxQixDQUN2QixJQUFNclcsRUFBT2lCLEtBQUtqQixLQUNadUwsRUFBS3ZMLEVBQUtLLFdBQ1ZtTCxFQUFLeEwsRUFBS00sY0FDVitPLEVBQWtCLElBQUluUCxLQUFLc0wsRUFBSUQsRUFBSSxHQUFHNkQsU0FDdEMvRCxFQUFLM0ssS0FBSzRPLE1BQU1ELEVBQWtCclAsRUFBS0ksV0FBYSxHQUNwRGtMLEVBQU10TCxFQUFLb1AsU0FDWGhFLEVBQUtwTCxFQUFLSSxVQUNWNEUsRUFBUyxDQUFFNkYsU0FBUXJMLE9BQU1RLE9BQU11TCxLQUFJQyxLQUFJSCxLQUFJQyxNQUFLRixLQUFJSCxXQUFVQyxlQUNwRWxHLEVBQU9pRyxTQUFVakcsRUFBT2lHLFNBQVNELE9BQU93TCxVQUFVLEVBQUUsR0FBR0MsY0FBZ0J6UixFQUFPaUcsU0FBU0QsT0FBT3dMLFVBQVUsR0FDcEd2VixLQUFLRixNQUFNdVEsb0JBQ2J0TSxFQUFPb0YsR0FBS25KLEtBQUtGLE1BQU11USxtQkFBbUJsSCxJQUMxQyxFQUFBckMsRUFBQXBDLGNBQWFYLEdBQVE4RCxLQUFLLFNBQUNDLEdBQ3pCbUIsRUFBS25KLE1BQU1zRyxZQUFXLEdBQU8sR0FBTSxJQUNsQyxTQUFDeUMsR0FDRmpDLFFBQVFDLElBQUkseUJBQXlCZ0MsR0FDckNJLEVBQUtYLFNBQVMsQ0FBQ2dOLGVBQWUsUUFHaEMsRUFBQXhPLEVBQUF4QyxhQUFZUCxHQUFROEQsS0FBSyxTQUFDNE4sR0FDeEJ4TSxFQUFLbkosTUFBTXNHLFlBQVcsR0FBTyxJQUM1QixTQUFDeUMsR0FDRmpDLFFBQVFDLElBQUksK0JBQStCZ0MsR0FDM0NJLEVBQUtYLFNBQVMsQ0FBQ2dOLGVBQWUsV0FJbEN0VixLQUFLc0ksU0FBUyxDQUFDZ04sZUFBZSx3REFJTnZVLEdBQ3RCQSxFQUFFdUksT0FBT2dHLFVBQVVvRyxTQUFTLHNCQUM5QjFWLEtBQUtzSSxTQUFTLENBQUUwQixTQUFVakosRUFBRXVJLE9BQU9xTSxjQUFjQywrREFJMUIsSUFBQXhHLEVBQUFwUCxLQUN6QixPQUNFdEIsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxhQUFhVyxRQUFTL0MsS0FBSytULDZCQUN2Qy9ULEtBQUtvSCxNQUFNOE0sbUJBQW1CdEQsSUFBSSxTQUFDaUYsR0FDbEMsT0FDRW5YLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUyxvQkFBc0J5TSxFQUFLaEksTUFBTTRDLFNBQVM4TCxnQkFBa0JELEVBQU03TCxTQUFTOEwsY0FBZ0IsMEJBQTJCLHdCQUNwSUQsRUFBTTdMLDhDQVFWLElBQUFnRyxFQUFBaFEsS0FBQStWLEVBQ2tFL1YsS0FBS29ILE1BQXZFN0ksRUFEQXdYLEVBQ0F4WCxLQUFNcUwsRUFETm1NLEVBQ01uTSxPQUEwQkksR0FEaEMrTCxFQUNjOUIsSUFEZDhCLEVBQ21CMVMsTUFEbkIwUyxFQUMwQnpTLEtBRDFCeVMsRUFDZ0MvTCxVQUFVaEMsRUFEMUMrTixFQUMwQy9OLE1BQU9zTixFQURqRFMsRUFDaURULGNBQ3hELE9BQ0U1VyxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLDJCQUEyQitHLEdBQUcsb0JBQzNDekssRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSw4QkFDYjFELEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUyxpQkFBNEIsWUFBVHBFLEVBQXFCLGVBQWlCLElBQUtzRSxlQUFnQixrQkFBTW1OLEVBQUs2RCxXQUFXLGFBQXJILFdBQ0FuVixFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVMsaUJBQTRCLFdBQVRwRSxFQUFvQixlQUFpQixJQUFLc0UsZUFBZ0Isa0JBQU1tTixFQUFLNkQsV0FBVyxZQUFwSCxXQUVGblYsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxxQkFDYjFELEVBQUFDLFFBQUFDLGNBQUEsaUJBQ0FGLEVBQUFDLFFBQUFDLGNBQUEsU0FBT3dELFVBQVcsZUFBaUI0RixFQUFNNEIsT0FBUyxhQUFlLElBQUtvTSxnQkFBYyxNQUFNelgsS0FBSyxPQUFPNEssR0FBRyxZQUFZQyxZQUFZLFNBQVNDLFNBQVUsU0FBQ3RJLEdBQUQsT0FBT2lQLEVBQUtpRyxhQUFhbFYsRUFBRXVJLE9BQU9oTSxRQUFRQSxNQUFPc00sSUFDck1sTCxFQUFBQyxRQUFBQyxjQUFBLFFBQU13RCxVQUFVLG9CQUFoQixPQUNDNEYsRUFBTTRCLE9BQVNsTCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLFlBQVk0RixFQUFNNEIsUUFBZ0IsTUFFbkVsTCxFQUFBQyxRQUFBQyxjQUFBLE9BQU13RCxVQUFVLHVCQUNkMUQsRUFBQUMsUUFBQUMsY0FBQSxTQUFPd0QsVUFBVyxlQUFpQjRGLEVBQU1nQyxTQUFXLGFBQWUsSUFBS2dNLGdCQUFjLE1BQU96WCxLQUFLLE9BQU80SyxHQUFHLGNBQWNDLFlBQVksV0FBV0MsU0FBVSxTQUFDdEksR0FBRCxPQUFPaVAsRUFBS2tHLGVBQWVuVixFQUFFdUksT0FBT2hNLFFBQVFBLE1BQU8wTSxJQUM5TXRMLEVBQUFDLFFBQUFDLGNBQUEsUUFBTXdELFVBQVUsb0JBQWhCLE9BQ0M0RixFQUFNZ0MsU0FBV3RMLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsWUFBWTRGLEVBQU1nQyxVQUFrQixLQUMzQixJQUF6Q2hLLEtBQUtvSCxNQUFNOE0sbUJBQW1CMUwsT0FBZXhJLEtBQUswUiw2QkFBK0IxUixLQUFLbVcsNEJBRXpGelgsRUFBQUMsUUFBQUMsY0FBQSxPQUFNd0QsVUFBVSxxQ0FDZDFELEVBQUFDLFFBQUFDLGNBQUEsU0FBT3VLLEdBQUcsaUJBQWlCL0csVUFBVSxhQUFhZ0gsWUFBWSxjQUFjQyxTQUFVLFNBQUN0SSxHQUFELE9BQU9pUCxFQUFLMUgsU0FBUyxDQUFFMkIsWUFBYWxKLEVBQUV1SSxPQUFPaE0sU0FBU0EsTUFBTzBDLEtBQUtvSCxNQUFNNkMsZUFFaEt2TCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGtCQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxVQUFRa0UsSUFBSSxNQUFNVixVQUFVLE9BQU9pSCxTQUFVLFNBQUN0SSxHQUFELE9BQU9pUCxFQUFLb0csV0FBVyxDQUFDbkMsSUFBS2xULEVBQUV1SSxPQUFPaE0sU0FBU0EsTUFBTzBDLEtBQUtvSCxNQUFNNk0sTUFBTSxFQUFBbE4sRUFBQXpJLGVBQWMsUUFDbElJLEVBQUFDLFFBQUFDLGNBQUEsVUFBUWtFLElBQUksUUFBUVYsVUFBVSxPQUFPaUgsU0FBVSxTQUFDdEksR0FBRCxPQUFPaVAsRUFBS29HLFdBQVcsQ0FBQy9TLE1BQU90QyxFQUFFdUksT0FBT2hNLFNBQVNBLE1BQU8wQyxLQUFLb0gsTUFBTS9ELFFBQVEsRUFBQTBELEVBQUF6SSxlQUFjLFVBQ3hJSSxFQUFBQyxRQUFBQyxjQUFBLFVBQVFrRSxJQUFJLE9BQU9WLFVBQVUsT0FBT2lILFNBQVUsU0FBQ3RJLEdBQUQsT0FBT2lQLEVBQUtvRyxXQUFXLENBQUM5UyxLQUFNdkMsRUFBRXVJLE9BQU9oTSxTQUFTQSxNQUFPMEMsS0FBS29ILE1BQU05RCxPQUFPLEVBQUF5RCxFQUFBekksZUFBYyxTQUNySUksRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxjQUNiMUQsRUFBQUMsUUFBQUMsY0FBQ21JLEVBQUFsSCxPQUFELENBQVE4QyxRQUFTLG9CQUFzQjNDLEtBQUtvSCxNQUFNc04sU0FBVywwQkFBMkIsdUJBQXdCN1IsZUFBZ0Isa0JBQU1tTixFQUFLb0csV0FBV3pTLFdBQXRKLFNBQ0FqRixFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVMsb0JBQXNCM0MsS0FBS29ILE1BQU11TixhQUFlLDBCQUEyQix1QkFBd0I5UixlQUFnQixrQkFBTW1OLEVBQUtvRyxXQUFXeFMsZUFBMUosY0FFRG9FLEVBQU1qSixLQUFPTCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGlCQUFpQjRGLEVBQU1qSixNQUFjLE1BRXBFTCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLGNBQ2IxRCxFQUFBQyxRQUFBQyxjQUFDbUksRUFBQWxILE9BQUQsQ0FBUThDLFFBQVMsc0JBQXdCMlMsRUFBZ0IsYUFBZSxJQUFLelMsZUFBZ0I3QyxLQUFLOFQsa0JBQWxHLDZCQTlQV0YsNFVDRHJCalUsRUFBQTFELEVBQUEsdUNBQ0EyRCxFQUFBM0QsRUFBQSxHQUNBOEssRUFBQTlLLEVBQUEsR0FMQSxJQU9xQm9hLGNBQ25CLFNBQUFBLEVBQVl2VyxnR0FBT0MsQ0FBQUMsS0FBQXFXLEdBQUEsSUFBQXBQLG1LQUFBaEgsQ0FBQUQsTUFBQXFXLEVBQUFuVyxXQUFBbkQsT0FBQW9ELGVBQUFrVyxJQUFBN1osS0FBQXdELEtBQ1hGLElBRFcsT0FFakJtSCxFQUFLcVAsWUFBY3JQLEVBQUtxUCxZQUFZelksS0FBakJvSixHQUZGQSxxVUFEYzdHLDREQU8zQnVILFFBQVVBLE9BQU90RixrQkFDbkJzRixPQUFPdEYsaUJBQWlCLFdBQVksV0FDbENrVSxNQUFNLCtEQUtDQyxFQUFjQyxFQUFjQyxHQUl2QyxJQUhBLElBQU1DLEVBQWdCLEdBQ2hCNUksRUFBTS9OLEtBQUtGLE1BQU1pTyxJQUNuQjZJLEVBQVksRUFDUjlGLEVBQVEsRUFBR0EsRUFBUTBGLEVBQWFoTyxPQUFTLEVBQUdzSSxJQUFTLENBQzNELElBQUkrRixFQUFZLEdBQ2hCLEdBQUk5SSxJQUFRNUssT0FDVjBULEVBQVluVCxnQkFBY2tULEtBQWFwQixtQkFDbEMsR0FBSXpILElBQVE3SyxPQUNqQjJULEVBQVloWSxrQkFBZ0IrWCxLQUFhcEIsbUJBQ3BDLEdBQUl6SCxJQUFROUssUUFBUSxDQUN6QixHQUFJNk4sRUFBUSxHQUFNLEVBQ2hCLFNBRUYrRixFQUFZL0YsRUFFZDZGLEVBQWNsWSxLQUNaQyxFQUFBQyxRQUFBQyxjQUFBLEtBQUdoQixJQUFLLFNBQVdrVCxHQUNqQnBTLEVBQUFDLFFBQUFDLGNBQUEsU0FDQUYsRUFBQUMsUUFBQUMsY0FBQSxRQUFNd0QsVUFBVSxLQUFLaEIsRUFBR29WLEVBQWExRixHQUFRTSxLQUFLLFVBQVUwRixFQUFHTCxFQUFhM0YsR0FBUyxFQUFHaUcsU0FBUyxJQUFJQyxXQUFXLFdBQVUsRUFBQWpRLEVBQUF6SCxlQUFjb1gsRUFBb0I1RixLQUM1SnBTLEVBQUFDLFFBQUFDLGNBQUEsVUFBUXFZLEdBQUlULEVBQWExRixHQUFRb0csR0FBSVQsRUFBYTNGLEdBQVFxRyxPQUFPLFVBQVUvRixLQUFLLFVBQVVqVSxFQUFFLE1BQU1pYSxZQUFZLE1BQzlHMVksRUFBQUMsUUFBQUMsY0FBQSxRQUFNd0QsVUFBVSxLQUFLaEIsRUFBR29WLEVBQWExRixHQUFRTSxLQUFLLFVBQVUwRixFQUFHTyxJQUFZTixTQUFTLElBQUlDLFdBQVcsVUFBVUgsTUFLbkgsT0FBT0Ysd0NBR0ssSUFBQWxVLEVBQ1l6QyxLQUFLRixNQUF0QjhPLEVBREtuTSxFQUNMbU0sU0FBVWIsRUFETHRMLEVBQ0tzTCxJQUNYeUksRUFBZSxHQUNmQyxFQUFlLEdBQ2ZDLEVBQXNCLEdBQ3RCbE8sRUFBU3BGLGlCQUFlMkssR0FDeEJ1SixFQUFVOVQsa0JBQWdCdUssR0FDMUJ3SixFQUFTM0ksRUFBUzRJLFVBQ2xCQyxFQTFESSxJQTBENEJqUCxFQUNsQ2tQLEVBQWUzSixJQUFROUssUUFBUSxHQUFLLEVBRXBDMFUsRUFBTSxHQXNCVixJQW5CQW5CLEVBQWEvWCxLQUFLLEdBQ2xCZ1ksRUFBYWhZLEtBaEVGLEtBaUVYaVksRUFBb0JqWSxLQUFLLElBQ3pCbVEsRUFBUzBFLGdCQUFnQnNFLFFBQVEsU0FBQy9CLEdBQ2hDLEtBQU9BLEVBQU1nQyxTQUFXSCxHQUFjLENBQ3BDLElBQU1JLEVBQVF0QixFQUFhQSxFQUFhaE8sT0FBUyxHQUVqRCxHQURBZ08sRUFBYS9YLEtBQU1xWixFQUFRTCxHQUN2QjVCLEVBQU1nQyxXQUFhSCxFQUFlLEVBQUcsQ0FDdkMsSUFBTXZHLEVBQVkwRSxFQUFNak0sT0FBUzJOLEVBQVUsSUFDM0NkLEVBQWFoWSxLQXhFUixJQXdFd0I0WSxLQUFnQmxHLEdBQzdDdUYsRUFBb0JqWSxLQUFLb1gsRUFBTWpNLGFBRS9CNk0sRUFBYWhZLEtBM0VSLEtBNEVMaVksRUFBb0JqWSxLQUFLLElBRTNCaVosT0FJRUosRUFBVUksR0FBYyxDQUM1QixJQUFNSSxFQUFRdEIsRUFBYUEsRUFBYWhPLE9BQVMsR0FDakRnTyxFQUFhL1gsS0FBTXFaLEVBQVFMLEdBQzNCaEIsRUFBYWhZLEtBckZKLEtBc0ZUaVosSUFDQWhCLEVBQW9CalksS0FBSyxJQUUzQixJQUFNcVosRUFBUXRCLEVBQWFBLEVBQWFoTyxPQUFTLEdBQ2pEZ08sRUFBYS9YLEtBQU1xWixFQUFRTCxHQUMzQmhCLEVBQWFoWSxLQTNGRixLQTRGWGlZLEVBQW9CalksS0FBSyxJQUV6QixJQUFLLElBQUlwQyxFQUFJLEVBQUdBLEVBQUltYSxFQUFhaE8sT0FBUW5NLElBQ3ZDc2IsR0FBTyxJQUFNbkIsRUFBYW5hLEdBQUssSUFBTW9hLEVBQWFwYSxHQUFLLElBRXpELE9BQUlzYixFQUVBalosRUFBQUMsUUFBQUMsY0FBQSxXQUVFRixFQUFBQyxRQUFBQyxjQUFBLE9BQUtvUyxRQUFVckosUUFBVUEsT0FBT29RLE9BQU85RyxNQUFRLElBQU0sa0JBQXFCLGtCQUFxQjlQLE1BQU8sQ0FBQzZXLE9BQVEsU0FDN0d0WixFQUFBQyxRQUFBQyxjQUFBLFlBQVVxWixPQUFRTixFQUFLdlYsVUFBVSxrQkFDaENwQyxLQUFLa1ksYUFBYTFCLEVBQWNDLEVBQWNDLEtBS2hELHNDQUlQLE9BQ0VoWSxFQUFBQyxRQUFBQyxjQUFBLFdBQ0dvQixLQUFLc1csa0NBNUdPRCw0VUNSckIxVyxFQUFBMUQsRUFBQSx1Q0FDQThLLEVBQUE5SyxFQUFBLE9BRXFCa2MsY0FDbkIsU0FBQUEsRUFBWXJZLEdBQU8sbUdBQUFDLENBQUFDLEtBQUFtWSxvS0FBQWxZLENBQUFELE1BQUFtWSxFQUFBalksV0FBQW5ELE9BQUFvRCxlQUFBZ1ksSUFBQTNiLEtBQUF3RCxLQUNYRix1VUFGeUJNLGlEQUl4QixJQUFBcUMsRUFDbUN6QyxLQUFLRixNQUF4QzRULEVBREFqUixFQUNBaVIsZUFBZ0JDLEVBRGhCbFIsRUFDZ0JrUixnQkFDdkIsT0FDRWpWLEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsaUJBQ2IxRCxFQUFBQyxRQUFBQyxjQUFBLE9BQUt3RCxVQUFVLDBCQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSxlQUNiMUQsRUFBQUMsUUFBQUMsY0FBQSxPQUFLd0QsVUFBVSw2QkFBZiwyQ0FHQTFELEVBQUFDLFFBQUFDLGNBQUEsT0FBS3dELFVBQVUsTUFDYjFELEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUSwrQ0FBK0NFLGVBQWdCOFEsR0FBL0UsV0FDQWpWLEVBQUFDLFFBQUFDLGNBQUNtSSxFQUFBbEgsT0FBRCxDQUFROEMsUUFBUSwrQ0FBK0NFLGVBQWdCNlEsR0FBL0UsaUNBZk95RSxnQ0NIckIsSUFBSTNPLEVBQVduTCxFQUFRLEdBQ3ZCbUwsRUFBUzRPLFFBQVVDLE9BQU9ELFFBQzFCNU8sRUFBUzhPLFFBQVFwVCxRQUFRQyxJQUFJTyxhQUFjLENBQUU2UyxnQkFBZ0IsSUFBUTFRLEtBQUssV0FDdEVqQixRQUFRQyxJQUFJLG9CQUNkLFNBQUM5RixHQUNDNkYsUUFBUUMsSUFBSTlGLEtBRWhCM0UsRUFBT0QsUUFBVSxDQUFDcU4sbWFDUGxCdk4sRUFBQSxTQUNBQSxFQUFBLE1BQ0FBLEVBQUEsVUFDQUEsRUFBQSxLQUNBMkQsRUFBQTNELEVBQUEsT0FDQUEsRUFBQSxnTEFFYWdLLFNBQVMsU0FBQ3VTLEVBQVMvQyxHQUFhLElBQUFnRCxFQUNjRCxFQUFRRSxLQUR0QkMsRUFBQUYsRUFDakNwUixnQkFEaUM3RyxJQUFBbVksRUFDdEIsR0FEc0JBLEVBQUFDLEVBQUFILEVBQ2xCblIsZ0JBRGtCOUcsSUFBQW9ZLEVBQ1AsR0FET0EsRUFFckNDLEdBRnFDSixFQUNIM04sUUFDM0IsSUFBSWEsVUFBTSxDQUNqQmpCLElBQUtsQixVQUFTbUIsTUFBTUMsV0FDcEJ2RCxTQUFVQSxFQUNWQyxTQUFVQSxLQUVkcUUsVUFBTW1OLEtBQUssQ0FBRXpSLFNBQVVBLElBQVlRLEtBQUssU0FBQ3BCLEdBQ2pDQSxFQUFJK0IsT0FBUyxFQUNiaU4sRUFBUy9PLEtBQUssQ0FBRXNCLE9BQU8sRUFBTVMsSUFBSyw0QkFFbENvUSxFQUFLRSxPQUFPbFIsS0FBSyxTQUFDbVIsR0FDZFIsRUFBUTNULFFBQVE2RSxNQUFRc1AsRUFBSXRQLE1BQzVCK0wsRUFBUy9PLEtBQUssQ0FBRXNCLE9BQU8sRUFBT1MsSUFBSyx3QkFDcEMsU0FBQzFILEdBQ0EwVSxFQUFTd0QsT0FBTyxLQUFLdlMsS0FBSzNGLE1BR25DLFNBQUNBLEdBQ0EwVSxFQUFTL08sS0FBSzNGLEdBQ2Q2RixRQUFRQyxJQUFJOUYsTUFJUG1GLFNBQVMsU0FBQ3NTLEVBQVMvQyxHQUFhLElBQUF5RCxFQUNjVixFQUFRRSxLQUR0QlMsRUFBQUQsRUFDakM3UixnQkFEaUM3RyxJQUFBMlksRUFDdEIsR0FEc0JBLEVBQUFDLEVBQUFGLEVBQ2xCNVIsZ0JBRGtCOUcsSUFBQTRZLEVBQ1AsR0FET0EsRUFBQUYsRUFDSHBPLFFBQ3RDbEUsUUFBUUMsSUFBSTJSLEVBQVEzVCxRQUFRZ1UsTUFDNUJsTixVQUFNME4sUUFBUSxDQUFFaFMsU0FBVUEsSUFBWVEsS0FBSyxTQUFDbVIsR0FDcENBLEVBQ0E3TixVQUFPbU8sUUFBUWhTLEVBQVUwUixFQUFJMVIsU0FBVSxTQUFTdUIsR0FDdkNBLEVBSUQ0TSxFQUFTL08sS0FBSyxDQUFFc0IsT0FBTyxFQUFNUyxJQUFLLHNCQUhsQytQLEVBQVEzVCxRQUFRNkUsTUFBUXNQLEVBQUl0UCxNQUM1QitMLEVBQVMvTyxLQUFLLENBQUVzQixPQUFPLEVBQU9TLElBQUssZUFNM0NnTixFQUFTL08sS0FBSyxDQUFFc0IsT0FBTyxFQUFNUyxJQUFLLDJCQUV2QyxTQUFDMUgsR0FDQTBVLEVBQVMvTyxLQUFLM0YsR0FDZDZGLFFBQVFDLElBQUk5RixNQUlQb0YsU0FBUyxTQUFDcVMsRUFBUy9DLEdBQzVCK0MsRUFBUTNULFFBQVE2RSxNQUFRLEtBQ3hCK0wsRUFBUy9PLEtBQUssQ0FBRXNCLE9BQU8sRUFBT1MsSUFBSyxhQUcxQnJFLGNBQWMsU0FBQ29VLEVBQVMvQyxHQUNqQyxHQUFJK0MsRUFBUTNULFFBQVE2RSxNQUFPLENBQ3ZCLElBQU1BLEVBQVE4TyxFQUFRM1QsUUFBUTZFLE1BQzlCaUMsVUFBTTBOLFFBQVEsQ0FBRTNQLE1BQU9BLElBQVE3QixLQUFLLFNBQUNwQixHQUNqQyxHQUFJQSxFQUFLLENBQ0wsSUFBTVksRUFBV1osRUFBSVksU0FDckJvTyxFQUFTL08sS0FBSyxDQUFFaUgsU0FBVSxDQUFDdEcsU0FBVUEsVUFFckNvTyxFQUFTL08sS0FBSyxDQUFFc0IsT0FBTyxFQUFNUyxJQUFLLDJCQUV2QyxTQUFDMUgsR0FDQTBVLEVBQVMvTyxLQUFLM0YsR0FDZDZGLFFBQVFDLElBQUk5RixVQUdoQjBVLEVBQVMvTyxLQUFLLEtBQUtBLEtBQUssQ0FBQ3NCLE9BQU8sS0FNM0I1QixhQUFhLFNBQUNvUyxFQUFTL0MsR0FBYSxJQUFBOEQsRUFDdEJmLEVBQVFFLEtBQXpCOU8sRUFEdUMyUCxFQUN2QzNQLE9BQVE3SyxFQUQrQndhLEVBQy9CeGEsS0FEK0J5YSxFQUVpQmhCLEVBQVFFLEtBQTdEdE8sRUFGb0NvUCxFQUVwQ3BQLEdBQUlDLEVBRmdDbVAsRUFFaENuUCxJQUFLQyxFQUYyQmtQLEVBRTNCbFAsR0FBSUMsRUFGdUJpUCxFQUV2QmpQLEdBQUlKLEVBRm1CcVAsRUFFbkJyUCxHQUFJNUwsRUFGZWliLEVBRWZqYixLQUFNeUwsRUFGU3dQLEVBRVR4UCxTQUFVQyxFQUZEdVAsRUFFQ3ZQLFlBR3hDN0QsRUFBYSxDQUFFd0QsT0FGckJBLEVBQVMwRSxTQUFTMUUsR0FFV0ksV0FBVWpMLEtBRHZDQSxFQUFPLElBQUlFLEtBQUtGLEdBQzZCUixPQUFNNkwsS0FBSUMsTUFBS0MsS0FBSUMsS0FBSUosS0FBSUYsZUFDL0MsSUFBSVYsVUFBSnJGLEVBQUEsQ0FDckJ3RixNQUFPOE8sRUFBUTNULFFBQVE2RSxPQUNwQnRELElBRVkyUyxPQUFPbFIsS0FBSyxTQUFDbVIsR0FDNUJ2RCxFQUFTL08sS0FBS3NTLElBQ2YsU0FBQ25RLEdBQ0FqQyxRQUFRQyxJQUFJLDZCQUE4QmdDLEdBQzFDNE0sRUFBU3dELE9BQU8sS0FBS3ZTLEtBQUttQyxNQUlyQnhDLGlCQUFpQixTQUFDbVMsRUFBUy9DLEdBQ3BDLElBQU0vTCxFQUFROE8sRUFBUTNULFFBQVE2RSxNQUFROE8sRUFBUTNULFFBQVE2RSxNQUFRLEdBRTlELFNBQVMrUCxFQUFxQjVRLEVBQUtkLEdBQy9CLEdBQUljLEVBQ0E2USxRQUFRaFQsS0FBSyxLQUFLQSxLQUFLbUMsT0FDcEIsQ0FDSCxJQUFJbUcsRUFBYyxHQUFJQyxFQUFXLEdBQ2pDbFMsT0FBTzBVLEtBQUsxSixHQUFNNkksSUFBSSxTQUFDaFQsR0FDSSxZQUFuQm1LLEVBQUtuSyxHQUFLVyxLQUNWeVEsRUFBY2pILEVBQUtuSyxHQUNPLFdBQW5CbUssRUFBS25LLEdBQUtXLE9BQ2pCMFEsRUFBYWxILEVBQUtuSyxNQUcxQixJQUFJdVIsU0FBT0QsU0FDUEYsR0FBZUEsRUFBWTJCLGlCQUMzQjNCLEVBQVkyQixnQkFBZ0JDLElBQUksU0FBQ0MsR0FDN0IsSUFBSU0sRUFBVU4sRUFBWWpILFFBQVVvRixFQUFZcEYsT0FBUyxLQUN6RGlILEVBQVlNLFFBQVUxUixLQUFLQyxNQUFnQixJQUFWeVIsR0FBaUIsTUFFdERoQyxFQUFRSCxFQUFZcEYsUUFFcEJ1RixFQUFRLEVBRVJGLEdBQWNBLEVBQVcwQixpQkFDekIxQixFQUFXMEIsZ0JBQWdCQyxJQUFJLFNBQUNDLEdBQzVCLElBQUlNLEVBQVVOLEVBQVlqSCxRQUFVcUYsRUFBV3JGLE9BQVMsS0FDeERpSCxFQUFZTSxRQUFVMVIsS0FBS0MsTUFBZ0IsSUFBVnlSLEdBQWlCLE1BRXREakMsRUFBV0QsRUFBV3JGLE9BQVN1RixHQUUvQkQsRUFBVyxFQUFJQyxFQTFCaEIsSUFBQXdLLEVBNEJ1Qm5CLEVBQVFFLEtBQTFCbk8sRUE1QkxvUCxFQTRCS3BQLEdBQUlELEVBNUJUcVAsRUE0QlNyUCxHQUFJRixFQTVCYnVQLEVBNEJhdlAsR0FBSUQsRUE1QmpCd1AsRUE0QmlCeFAsR0FDcEJzTCxFQUFTL08sS0FBSyxDQUFFeUQsR0FBR0EsRUFBSUcsR0FBSUEsRUFBSUMsR0FBSUEsRUFBSUgsR0FBSUEsRUFBSTRFLFlBQWFBLEVBQWFDLFdBQVlBLEVBQVlFLE1BQU9BLEVBQU9ELFNBQVVBLEtBS2pJLElBU00wSyxFQUFTLENBQ1hDLE9BQVEsQ0FDSm5QLElBQUssQ0FBRW5NLEtBQU0sU0FDYnFMLE9BQVEsQ0FBRWtRLEtBQU0sV0FDaEJ2YixLQUFNLENBQUV3YixPQUFVLFNBQ2xCcEosZ0JBQWlCLENBQUVxSixNQUFPLENBQUVoUSxTQUFVLFlBQWFKLE9BQVEsVUFBVzdLLEtBQU0sUUFBU29LLEdBQUksT0FBUWMsWUFBYSxtQkFHaEhnUSxFQUFTLENBQUVDLFFBQVMsb0JBQ3RCQyxFQUFPLEdBRVBBLEVBRGlCLGNBekRFM0IsRUFBUUUsS0FBeEJqTCxhQTBESSxDQUFFMk0sTUFBTyxDQUFFQywwQkFBMkIsSUFFdEMsQ0FBRUQsTUFBTyxDQUFFRSx3QkFBeUIsSUFFL0MsSUFBTUMsRUFBVSxDQUNaVixPQUFRLENBQ0puUCxJQUFLLENBQUVuTSxLQUFNLFNBQ2JxTCxPQUFRLENBQUVtUSxPQUFVLFdBQ3BCeGIsS0FBTSxDQUFFd2IsT0FBVSxTQUNsQnBKLGdCQUFpQixDQUFFcUosTUFBTyxzQkFyRWVRLEVBMEVoQmhDLEVBQVFFLEtBQWpDM0ssRUExRXlDeU0sRUEwRXpDek0sSUFBSzNELEVBMUVvQ29RLEVBMEVwQ3BRLEdBQUlFLEVBMUVnQ2tRLEVBMEVoQ2xRLEdBQUlDLEVBMUU0QmlRLEVBMEU1QmpRLEdBMUU0QmlRLEVBMEV4Qm5RLElBQ3JCMEQsSUFBUTdLLE9BQ1JxRyxVQUFTa1IsVUFBVSxDQUNmLENBQUVDLE9BQVEsQ0FBRWhSLE1BQU9BLElBQ25CLENBQUVnUixPQUFRLENBQUVuUSxHQUFJK0QsU0FBUy9ELEtBRlZyRyxFQUFBLEdBR1YwVixHQUhVMVYsRUFBQSxHQUlWK1YsR0FKVS9WLEVBQUEsR0FJSWlXLEdBSkpqVyxFQUFBLEdBSWdCcVcsR0FDL0IsQ0FBRUksU0FBVSxDQUFFalEsSUFBSyxFQUFHZCxPQUFRLEVBQUdyTCxLQUFNLEVBQUdvUyxnQkFBaUIsTUFDNURpSyxjQUFhLEdBQU1DLEtBQUtwQixHQUNwQjFMLElBQVE5SyxRQUNmc0csVUFBU2tSLFVBQVUsQ0FDZixDQUFFQyxPQUFRLENBQUVoUixNQUFPQSxJQUNuQixDQUFFZ1IsT0FBUSxDQUFFblEsR0FBSStELFNBQVMvRCxLQUFRLENBQUVtUSxPQUFRLENBQUVwUSxHQUFJZ0UsU0FBU2hFLEtBRjNDcEcsRUFBQSxHQUdWMFYsR0FIVTFWLEVBQUEsR0FJVitWLEdBSlUvVixFQUFBLEdBSUlpVyxHQUpKalcsRUFBQSxHQUlnQnFXLEdBQy9CLENBQUVJLFNBQVUsQ0FBRWpRLElBQUssRUFBR2QsT0FBUSxFQUFHckwsS0FBTSxFQUFHb1MsZ0JBQWlCLE1BQzVEaUssY0FBYSxHQUFNQyxLQUFLcEIsR0FDcEIxTCxJQUFRNUssUUFDZm9HLFVBQVNrUixVQUFVLENBQ2YsQ0FBRUMsT0FBUSxDQUFFaFIsTUFBT0EsSUFDbkIsQ0FBRWdSLE9BQVEsQ0FBRW5RLEdBQUkrRCxTQUFTL0QsS0FBUSxDQUFFbVEsT0FBUSxDQUFFcFEsR0FBSWdFLFNBQVNoRSxLQUFRLENBQUVvUSxPQUFRLENBQUV0USxHQUFJa0UsU0FBU2xFLEtBRjVFbEcsRUFBQSxHQUdWMFYsR0FIVTFWLEVBQUEsR0FJVitWLEdBSlUvVixFQUFBLEdBSUlpVyxHQUpKalcsRUFBQSxHQUlnQnFXLEdBQy9CLENBQUVJLFNBQVUsQ0FBRWpRLElBQUssRUFBR2QsT0FBUSxFQUFHckwsS0FBTSxFQUFHb1MsZ0JBQWlCLE1BQzVEaUssY0FBYSxHQUFNQyxLQUFLcEIsSUFJdEJuVCxvQkFBb0IsU0FBQ2tTLEVBQVMvQyxHQUN2QyxTQUFTcUYsRUFBaUJqUyxFQUFLZCxHQUMzQixHQUFJYyxFQUNBNlEsUUFBUWhULEtBQUssS0FBS0EsS0FBS21DLFFBRXZCLEdBQUlkLEdBQVFBLEVBQUssSUFBTUEsRUFBSyxHQUFHdUwsZ0JBQWlCLENBQzVDLElBQUlrRSxFQUFZM04sT0FBT2tSLGlCQUN2QmhULEVBQUssR0FBR3VMLGdCQUFnQnNFLFFBQVEsU0FBQS9CLEdBQ3hCMkIsRUFBWTNCLEVBQU1qTSxTQUNsQjROLEVBQVkzQixFQUFNak0sVUFHMUI3QixFQUFLLEdBQUd5UCxVQUFZQSxFQUNwQi9CLEVBQVMvTyxLQUFUeEMsRUFBQSxHQUFrQjZELEVBQUssVUFFdkIwTixFQUFTL08sS0FBSyxJQUkxQixJQUFNZ0QsRUFBUThPLEVBQVEzVCxRQUFRNkUsTUFBUThPLEVBQVEzVCxRQUFRNkUsTUFBUSxHQW5CVnNSLEVBb0IxQnhDLEVBQVFFLEtBQTNCM0ssRUFwQjZDaU4sRUFvQjdDak4sSUFBS3hELEVBcEJ3Q3lRLEVBb0J4Q3pRLEdBQUlELEVBcEJvQzBRLEVBb0JwQzFRLEdBQUlGLEVBcEJnQzRRLEVBb0JoQzVRLEdBQ2hCMkQsSUFBUTdLLE9BQ1JxRyxVQUFTa1IsVUFBVSxDQUNmLENBQUNDLE9BQVEsQ0FBRWhSLE1BQU9BLElBQ2xCLENBQUNnUixPQUFRLENBQUVuUSxHQUFJQSxJQUNmLENBQUNtUSxPQUFRLENBQUVuYyxLQUFNLFlBQ2pCLENBQUNzYixPQUFRLENBQUVuUCxJQUFLLENBQUVKLEdBQUksT0FBUVYsT0FBUSxDQUFDa1EsS0FBTSxXQUFZelcsTUFBTyxDQUFDMFcsT0FBVSxTQUMzRSxDQUFDSyxNQUFPLENBQUUvVyxNQUFPLElBQ2pCLENBQUN3VyxPQUFRLENBQUNuUCxJQUFLLEtBQU11USxZQUFhLENBQUNuQixLQUFRLFdBQVl4RyxnQkFBaUIsQ0FBQzBHLE1BQVEsQ0FBRXBRLE9BQVEsVUFBV2lPLFNBQVUsYUFDaEgsQ0FBQzhDLFNBQVUsQ0FBQ2pRLElBQUssTUFDZGtRLGNBQWEsR0FBTUMsS0FBS0MsR0FDeEIvTSxJQUFROUssUUFDZnNHLFVBQVNrUixVQUFVLENBQ2YsQ0FBQ0MsT0FBUSxDQUFFaFIsTUFBT0EsSUFDbEIsQ0FBQ2dSLE9BQVEsQ0FBRW5RLEdBQUlBLElBQ2YsQ0FBQ21RLE9BQVEsQ0FBRXBRLEdBQUlBLElBQ2YsQ0FBQ29RLE9BQVEsQ0FBRW5jLEtBQU0sWUFDakIsQ0FBQ3NiLE9BQVEsQ0FBRW5QLElBQUssQ0FBQ1AsR0FBSSxPQUFRUCxPQUFRLENBQUNrUSxLQUFRLFdBQVkzUCxHQUFJLENBQUM0UCxPQUFVLFNBQ3pFLENBQUNLLE1BQU8sQ0FBQ2pRLEdBQUksSUFDYixDQUFDMFAsT0FBUSxDQUFDblAsSUFBSyxLQUFNdVEsWUFBYSxDQUFDbkIsS0FBUSxXQUFZeEcsZ0JBQWlCLENBQUMwRyxNQUFPLENBQUNwUSxPQUFRLFVBQVdpTyxTQUFVLFVBQzlHLENBQUM4QyxTQUFVLENBQUNqUSxJQUFJLE1BQ2JrUSxjQUFhLEdBQU1DLEtBQUtDLEdBQ3hCL00sSUFBUTVLLFFBQ2ZvRyxVQUFTa1IsVUFBVSxDQUNmLENBQUNDLE9BQVEsQ0FBRWhSLE1BQU9BLElBQ2xCLENBQUNnUixPQUFRLENBQUVuUSxHQUFJQSxJQUNmLENBQUNtUSxPQUFRLENBQUVwUSxHQUFJQSxJQUNmLENBQUNvUSxPQUFRLENBQUV0USxHQUFJQSxJQUNmLENBQUNzUSxPQUFRLENBQUVuYyxLQUFNLFlBQ2pCLENBQUNzYixPQUFRLENBQUVuUCxJQUFLLENBQUNMLElBQUssUUFBU1QsT0FBUSxDQUFDa1EsS0FBTSxXQUFZelAsSUFBSyxDQUFDMFAsT0FBVSxVQUMxRSxDQUFDSyxNQUFPLENBQUUvUCxJQUFLLElBQ2YsQ0FBQ3dQLE9BQVEsQ0FBRW5QLElBQUssS0FBTXVRLFlBQWEsQ0FBQ25CLEtBQU0sV0FBYXhHLGdCQUFpQixDQUFDMEcsTUFBTyxDQUFDcFEsT0FBUSxVQUFXaU8sU0FBVSxXQUM5RyxDQUFDOEMsU0FBVSxDQUFDalEsSUFBSyxNQUNka1EsY0FBYSxHQUFNQyxLQUFLQyxJQUkxQnJXLG9CQUFvQixTQUFDK1QsRUFBUy9DLEdBQWEsSUFDN0N0TSxFQUFNcVAsRUFBUUUsS0FBZHZQLEdBQ1BJLFVBQVMyUixpQkFBaUIsQ0FBQ3hRLElBQUt2QixJQUFLdEIsS0FBSyxTQUFDbVIsR0FDdkN2RCxFQUFTL08sS0FBS3NTLE1BSVR6UyxjQUFjLFNBQUNpUyxFQUFTL0MsR0FBYSxJQUFBMEYsRUFDekIzQyxFQUFRRSxLQUF4QjlPLEVBRHlDdVIsRUFDekN2UixPQUFRN0ssRUFEaUNvYyxFQUNqQ3BjLEtBRGlDcWMsRUFFb0I1QyxFQUFRRSxLQUFqRXZQLEVBRnFDaVMsRUFFckNqUyxHQUFJaUIsRUFGaUNnUixFQUVqQ2hSLEdBQUlDLEVBRjZCK1EsRUFFN0IvUSxJQUFLQyxFQUZ3QjhRLEVBRXhCOVEsR0FBSUMsRUFGb0I2USxFQUVwQjdRLEdBQUlKLEVBRmdCaVIsRUFFaEJqUixHQUFJNUwsRUFGWTZjLEVBRVo3YyxLQUFNeUwsRUFGTW9SLEVBRU5wUixTQUFVQyxFQUZKbVIsRUFFSW5SLFlBQ2xETCxFQUFTMEUsU0FBUzFFLEdBQ2xCN0ssRUFBTyxJQUFJRSxLQUFLRixHQUVoQndLLFVBQVM4UixpQkFDTCxDQUFDM1EsSUFBS3ZCLEdBQ04sQ0FBQ21TLEtBQU0sQ0FBQzFSLE9BQVVBLEVBQVFJLFNBQVlBLEVBQVVqTCxLQUFRQSxFQUFNUixLQUFRQSxFQUFNNkwsR0FBTUEsRUFBSUQsR0FBTUEsRUFBSUcsR0FBTUEsRUFBSUMsR0FBTUEsRUFBSUYsSUFBT0EsRUFBS0osWUFBZUEsSUFDL0ksQ0FBQ3NSLFFBQU8sRUFBTUMsbUJBQW9CLElBQ3BDM1QsS0FBSyxTQUFDbVIsR0FDSnZELEVBQVMvTyxLQUFLLENBQUNtQyxLQUFLLE9BSWZsRSx3QkFBd0IsU0FBQzZULEVBQVMvQyxHQUFhLElBQ2pEL0wsRUFBUzhPLEVBQVEzVCxRQUFqQjZFLE1BQ1BILFVBQVNrUixVQUFVLENBQ2YsQ0FBQ0MsT0FBUSxDQUFDaFIsTUFBT0EsSUFDakIsQ0FBQ2dSLE9BQVEsQ0FBQ25jLEtBQU0sWUFDaEIsQ0FBQ3NiLE9BQVEsQ0FBQ25QLElBQUssWUFBYVYsU0FBVSxDQUFDK1AsT0FBVSxhQUFjMEIsTUFBTyxDQUFDM0IsS0FBTSxLQUM3RSxDQUFDTSxNQUFPLENBQUNxQixPQUFVLElBQ25CLENBQUNkLFNBQVUsQ0FBQ2pRLElBQU8sRUFBR1YsU0FBVSxFQUFHeVIsTUFBTyxNQUN2Q2IsY0FBYSxHQUFNQyxLQUFLLFNBQVNoUyxFQUFLZCxHQUNqQ2MsRUFDQTRNLEVBQVN3RCxPQUFPLEtBQUt2UyxLQUFLLENBQUNzQixPQUFPLEVBQU1TLElBQUtJLElBRTdDNE0sRUFBU3dELE9BQU8sS0FBS3ZTLEtBQUssQ0FBQ3NCLE9BQU8sRUFBT0QsaUJBQVVBLHdCQ2xTbkUzTCxFQUFBRCxRQUFBa0MsUUFBQSxrQ0NBQWpDLEVBQUFELFFBQUFrQyxRQUFBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2J1aWxkL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTsiLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7TU9OVEhTTkFNRVNIT1JUfSBmcm9tICcuLi9jb25zdGFudHMvY29uc3RhbnRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlck9wdGlvbnModHlwZSkge1xuICBjb25zdCBvcHRpb25zID0gW107XG4gIGlmICh0eXBlID09PSAnZGF5Jykge1xuICAgIG9wdGlvbnMucHVzaCg8b3B0aW9uPkRheTwvb3B0aW9uPik7XG4gICAgZm9yKGxldCBpID0gMTsgaSA8IDMyIDsgaSsrKSB7XG4gICAgICBvcHRpb25zLnB1c2goPG9wdGlvbiBrZXk9eydkYXlfJyArIGl9IHZhbHVlPXtpfT57aX08L29wdGlvbj4pO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbW9udGgnKSB7XG4gICAgb3B0aW9ucy5wdXNoKDxvcHRpb24+TW9udGg8L29wdGlvbj4pO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCAxMiA7IGkrKykge1xuICAgICAgb3B0aW9ucy5wdXNoKDxvcHRpb24ga2V5PXsnbW9udGhfJyArIGl9IHZhbHVlPXtpfT57TU9OVEhTTkFNRVNIT1JUW2ldfTwvb3B0aW9uPik7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICd5ZWFyJykge1xuICAgIG9wdGlvbnMucHVzaCg8b3B0aW9uPlllYXI8L29wdGlvbj4pO1xuICAgIGZvcihsZXQgaSA9IDIwMjA7IGkgPiAyMDAwIDsgaS0tKSB7XG4gICAgICBvcHRpb25zLnB1c2goPG9wdGlvbiBrZXk9eyd5ZWFyXycgKyBpfSAgdmFsdWU9e2l9PntpfTwvb3B0aW9uPik7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICd3ZWVrJykge1xuICAgIG9wdGlvbnMucHVzaCg8b3B0aW9uPldlZWs8L29wdGlvbj4pO1xuICAgIGZvcihsZXQgaSA9IDE7IGkgPCA2IDsgaSsrKSB7XG4gICAgICBvcHRpb25zLnB1c2goPG9wdGlvbiBrZXk9eyd3ZWVrXycgKyBpfSB2YWx1ZT17aX0+e2l9PC9vcHRpb24+KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGQpIHtcbiAgbGV0IGRhdGU7XG4gIGlmICh0eXBlb2YoZCkgIT09ICdvYmplY3QnKSB7XG4gICAgZGF0ZSA9IG5ldyBEYXRlKGQpO1xuICB9IGVsc2Uge1xuICAgIGRhdGUgPSBkO1xuICB9XG4gIGxldCByZXN1bHQgPSAnJztcbiAgcmVzdWx0ICs9IGRhdGUuZ2V0RGF0ZSgpICsgJyAnICsgIE1PTlRIU05BTUVTSE9SVFtkYXRlLmdldE1vbnRoKCldICsgJyAnICsgZGF0ZS5nZXRGdWxsWWVhcigpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYW1vdW50T25HcmFwaCh2YWwpIHtcbiAgaWYgKHZhbCA9PT0gJycpIHtcbiAgICByZXR1cm4gJyc7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdmFsdWUgPSBwYXJzZUZsb2F0KHZhbCwgMTApO1xuICAgIGlmICh2YWwgPiAxMDAwKSB7XG4gICAgICByZXR1cm4gTWF0aC5yb3VuZChwYXJzZUZsb2F0KHZhbC8xMDAwLCAxMCkgKiAxMCkgLyAxMCArICdLJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFJpcHBsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICB9XG5cbiAgZGVib3VuY2UoZnVuYywgZGVsYXkpIHtcbiAgICB2YXIgaW5EZWJvdW5jZTtcbiAgICBpbkRlYm91bmNlID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBhcmdzLCBjb250ZXh0O1xuICAgICAgY29udGV4dCA9IHRoaXM7XG4gICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgY2xlYXJUaW1lb3V0KGluRGVib3VuY2UpO1xuICAgICAgcmV0dXJuIGluRGVib3VuY2UgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgIH0sIGRlbGF5KTtcbiAgICB9O1xuICB9XG5cbiAgc2hvd1JpcHBsZShlKSB7XG4gICAgdmFyIHBvcywgcmlwcGxlLCByaXBwbGVyLCBzaXplLCBzdHlsZSwgeCwgeTtcbiAgICByaXBwbGUgPSB0aGlzO1xuICAgIHJpcHBsZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgc2l6ZSA9IHJpcHBsZS5vZmZzZXRXaWR0aDtcbiAgICBwb3MgPSByaXBwbGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgeCA9IGUucGFnZVggLSBwb3MubGVmdCAtIChzaXplIC8gMik7XG4gICAgeSA9IGUucGFnZVkgLSBwb3MudG9wIC0gKHNpemUgLyAyKTtcbiAgICBzdHlsZSA9ICd0b3A6JyArIHkgKyAncHg7IGxlZnQ6ICcgKyB4ICsgJ3B4OyBoZWlnaHQ6ICcgKyBzaXplICsgJ3B4OyB3aWR0aDogJyArIHNpemUgKyAncHg7JztcbiAgICByaXBwbGUucmlwcGxlQ29udGFpbmVyLmFwcGVuZENoaWxkKHJpcHBsZXIpO1xuICAgIHJldHVybiByaXBwbGVyLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBzdHlsZSk7XG4gIH1cblxuICBjbGVhblVwKCkge1xuICAgIHdoaWxlICh0aGlzLnJpcHBsZUNvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICB0aGlzLnJpcHBsZUNvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLnJpcHBsZUNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCByaXBwbGUgPSB0aGlzLnJlZnMudGFyZ2V0RWxlbWVudDtcbiAgICBjb25zdCByaXBwbGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByaXBwbGVDb250YWluZXIuY2xhc3NOYW1lID0gJ3JpcHBsZS0tY29udGFpbmVyJztcbiAgICByaXBwbGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5zaG93UmlwcGxlKTtcbiAgICByaXBwbGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuZGVib3VuY2UodGhpcy5jbGVhblVwLCAyMDAwKSk7XG4gICAgcmlwcGxlLnJpcHBsZUNvbnRhaW5lciA9IHJpcHBsZUNvbnRhaW5lcjtcbiAgICByaXBwbGUuYXBwZW5kQ2hpbGQocmlwcGxlQ29udGFpbmVyKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7Y2xhc3NlcyA9IFwiXCIsIG9uQ2xpY2tIYW5kbGVyID0gbnVsbH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHJlZj1cInRhcmdldEVsZW1lbnRcIiBjbGFzc05hbWU9e2NsYXNzZXN9IG9uQ2xpY2s9e29uQ2xpY2tIYW5kbGVyfSByaXBwbGU9XCJyaXBwbGVcIj5cbiAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW4gPyB0aGlzLnByb3BzLmNoaWxkcmVuOiBudWxsfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IE1PTlRIID0gJ21vbnRoJztcbmV4cG9ydCBjb25zdCBZRUFSID0gJ3llYXInO1xuZXhwb3J0IGNvbnN0IFdFRUsgPSAnd2Vlayc7XG5leHBvcnQgY29uc3QgRElWSVNJT05MRU5HVEggPSB7IG1vbnRoOiAzMSwgeWVhcjogMTIsIHdlZWs6IDd9OyBcbmV4cG9ydCBjb25zdCBNQVhMRU5HVEhQRVJUQUIgPSB7IG1vbnRoOiAzMSwgeWVhcjoxMSwgd2VlazogNn07XG5leHBvcnQgY29uc3QgTU9OVEhTTkFNRSA9IFsnSmFudWFyeScsICdGZWJydWFyeScsICdNYXJjaCcsICdBcHJpbCcsICdNYXknLCAnSnVuZScsICdKdWx5JywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2N0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddO1xuZXhwb3J0IGNvbnN0ICBNT05USFNOQU1FU0hPUlQgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJywgJ09jdCcsICdOb3YnLCAnRGVjJ107XG5leHBvcnQgY29uc3QgV0VFS05BTUVTSE9SVCA9IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J107XG5leHBvcnQgY29uc3QgVE9EQVkgPSAndG9kYXknO1xuZXhwb3J0IGNvbnN0IFlFU1RFUkRBWSA9ICd5ZXN0ZXJkYXknO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3Qtcm91dGVyLWRvbVwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdC1oZWxtZXRcIik7IiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuZXhwb3J0IGNvbnN0IHNpZ251cCA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9zaWdudXAvJztcbiAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCB7Li4ucGFyYW1zfSk7XG59XG5cbmV4cG9ydCBjb25zdCBzaWduaW4gPSAocGFyYW1zKSA9PiB7XG4gIGNvbnN0IHVybCA9ICcvc2lnbmluLyc7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgey4uLnBhcmFtc30pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0VXNlckluZm8gPSAoKSA9PiB7XG4gIGNvbnN0IHVybCA9ICcvdXNlcmluZm8vJztcbiAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCB7fSk7XG59XG5cbmV4cG9ydCBjb25zdCBsb2dvdXRVc2VyID0gKCkgPT4ge1xuICBjb25zdCB1cmwgPSAnL2xvZ291dC8nO1xuICByZXR1cm4gYXhpb3MucG9zdCh1cmwsIHt9KTtcbn1cblxuZXhwb3J0IGNvbnN0IG5ld19leHBlbnNlID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL25ld19leHBlbnNlLyc7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgey4uLnBhcmFtc30pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0X2V4cGVuc2VfZGF0YSA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9nZXRfZXhwZW5zZV9kYXRhLycgO1xuICByZXR1cm4gYXhpb3MucG9zdCh1cmwsIHBhcmFtcyk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRfZXhwZW5zZV9zdW1tYXJ5ID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL2dldF9leHBlbnNlX3N1bW1hcnkvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUV4cGVuc2VEYXRlID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB1cmwgPSAnL2RlbGV0ZV9leHBlbnNlX2RhdGUvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGNvbnN0IGVkaXRfZXhwZW5zZSA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgdXJsID0gJy9lZGl0X2V4cGVuc2UvJyA7XG4gIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldEZyZXF1ZW50Q2F0ZWdvcmllcyA9ICgpID0+IHtcbiAgY29uc3QgdXJsID0gJy9nZXRGcmVxdWVudENhdGVnb3JpZXMvJztcbiAgcmV0dXJuIGF4aW9zLmdldCh1cmwpO1xufSIsInJlcXVpcmUoJy4vY29uZmlnL2NvbmZpZycpO1xuaW1wb3J0ICdiYWJlbC1wb2x5ZmlsbCc7XG5pbXBvcnQgZW52IGZyb20gJy4vY29uZmlnL2NvbmZpZyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbnZhciBzZXNzaW9uID0gcmVxdWlyZSgnZXhwcmVzcy1zZXNzaW9uJyk7XG5cbmltcG9ydCBBcHAgZnJvbSAnLi4vc3JjL2FwcCdcbmltcG9ydCAnLi9kYi9tb25nb29zZSc7XG5pbXBvcnQge3NpZ25VcCwgc2lnbkluLCBuZXdFeHBlbnNlLCBnZXRFeHBlbnNlRGF0YSwgZ2V0RXhwZW5zZVN1bW1hcnksIGRlbGV0ZUV4cGVuc2VEYXRlLCBsb2dvdXQsIGdldFVzZXJJbmZvLCBlZGl0RXhwZW5zZSwgZ2V0RnJlcXVlbnRDYXRlZ29yaWVzfSBmcm9tICcuL2FwaS9hcGlDYWxscyc7XG5cbmNvbnN0IE1vbmdvU3RvcmUgPSByZXF1aXJlKCdjb25uZWN0LW1vbmdvJykoc2Vzc2lvbik7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVDtcblxuYXBwLnVzZShzZXNzaW9uKHtcbiAgICBzZWNyZXQ6ICdmb28nLFxuICAgIHJlc2F2ZTogdHJ1ZSxcbiAgICBzdG9yZTogbmV3IE1vbmdvU3RvcmUoe1xuICAgICAgICB1cmw6IHByb2Nlc3MuZW52Lk1PTkdPTEFCX1VSSVxuICAgIH0pXG59KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ2J1aWxkL3B1YmxpYycpKTtcbmFwcC51c2UoJy9zdHlsZXMnLCBleHByZXNzLnN0YXRpYygnc3JjL3BhZ2VzL3N0eWxlcycpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3NyYy9wYWdlcy9zdGF0aWMnKSk7XG5cbi8vIEFQSSBDYWxsc1xuYXBwLnBvc3QoJy9zaWdudXAnLCBzaWduVXApO1xuYXBwLnBvc3QoJy9zaWduaW4nLCBzaWduSW4pO1xuYXBwLnBvc3QoJy9sb2dvdXQnLCBsb2dvdXQpO1xuYXBwLnBvc3QoJy91c2VyaW5mbycsIGdldFVzZXJJbmZvKTtcbmFwcC5wb3N0KCcvbmV3X2V4cGVuc2UnLCBuZXdFeHBlbnNlKTtcbmFwcC5wb3N0KCcvZ2V0X2V4cGVuc2VfZGF0YScsIGdldEV4cGVuc2VEYXRhKTtcbmFwcC5wb3N0KCcvZ2V0X2V4cGVuc2Vfc3VtbWFyeScsIGdldEV4cGVuc2VTdW1tYXJ5KTtcbmFwcC5wb3N0KCcvZGVsZXRlX2V4cGVuc2VfZGF0ZScsIGRlbGV0ZUV4cGVuc2VEYXRlKTtcbmFwcC5wb3N0KCcvZWRpdF9leHBlbnNlJywgZWRpdEV4cGVuc2UpO1xuYXBwLmdldCgnL2dldEZyZXF1ZW50Q2F0ZWdvcmllcycsIGdldEZyZXF1ZW50Q2F0ZWdvcmllcyk7XG5cblxuY29uc3QgbG9hZEh0bWwgPSAoY29udGVudCkgPT4ge1xuICAgIHJldHVybiAoYFxuICAgICAgICA8aHRtbD5cbiAgICAgICAgICAgIDxoZWFkPlxuICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwibWFuaWZlc3RcIiBocmVmPVwiL21hbmlmZXN0Lmpzb25cIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9pbWcvYnVkZ2V0NjQucG5nXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIvc3R5bGVzL2NvbW1vbi5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvaG9tZS5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvbG9naW4uY3NzXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIvc3R5bGVzL25ld19leHBlbnNlLmNzc1wiPlxuICAgICAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiB0eXBlPVwidGV4dC9jc3NcIiBocmVmPVwiL3N0eWxlcy9ub3Rmb3VuZC5jc3NcIj5cbiAgICAgICAgICAgICAgICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIi9zdHlsZXMvcG9wdXAuY3NzXCI+XG4gICAgICAgICAgICAgICAgPGxpbmsgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnNcIiByZWw9XCJzdHlsZXNoZWV0XCI+XG4gICAgICAgICAgICA8L2hlYWQ+XG4gICAgICAgICAgICA8Ym9keT5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwicm9vdFwiPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxzY3JpcHQgc3JjID0gXCIvc3dSZWdpc3RlcmVyLmpzXCI+XG4gICAgICAgICAgICAgICAgPC9zY3JpcHQ+XG4gICAgICAgICAgICAgICAgPHNjcmlwdCBzcmM9XCJjbGllbnRfYnVuZGxlLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgICAgICA8L2JvZHk+XG4gICAgICAgIDwvaHRtbD5gKTtcbn07XG5cbmFwcC5nZXQoJyonLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGxvYWRIdG1sKCk7XG4gICAgcmVzLnNlbmQodGVtcGxhdGUpO1xufSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXIgU3RhcnRlZCBvbiBQb3J0OiAnLCBwb3J0KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWxtZXQgZnJvbSAncmVhY3QtaGVsbWV0JztcbmltcG9ydCB7c2lnbnVwLCBzaWduaW4sIGxvZ291dFVzZXJ9IGZyb20gJy4uL2FwaUNhbGxzL0FwaUNhbGxzJztcbmltcG9ydCB7IFJpcHBsZX0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuXG5jbGFzcyBMb2dpbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGVhZCA9IHRoaXMuaGVhZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2lnblVwID0gdGhpcy5zaWduVXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNpZ25JbiA9IHRoaXMuc2lnbkluLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zaWdub3V0VXNlciA9IHRoaXMuc2lnbm91dFVzZXIuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdXNlcm5hbWU6ICcnLFxuICAgICAgcGFzc3dvcmQ6ICcnLFxuICAgICAgc2lnbmluVGV4dDogJ1NpZ24gSW4nLFxuICAgICAgc2lnbnVwVGV4dDogJ1NpZ24gVXAnLFxuICAgICAgY29udGludWVUZXh0OiAnQ29udGludWUgd2l0aCBUZXN0IExvZ2luJyxcbiAgICAgIGxvYWQ6ICF3aW5kb3cuc2lnbmVkSW5cbiAgICB9XG4gICAgaWYgKHdpbmRvdy5zaWduZWRJbikge1xuICAgICAgdGhpcy5zaWdub3V0VXNlcigpO1xuICAgIH1cbiAgfVxuXG4gIHNpZ25vdXRVc2VyKCkge1xuICAgIGxvZ291dFVzZXIoKS50aGVuKChyZXNwKSA9PiB7XG4gICAgICBpZiAoIShyZXNwLmRhdGEuZXJyb3IpKSB7XG4gICAgICAgIHdpbmRvdy5zaWduZWRJbiA9IGZhbHNlO1xuICAgICAgICBjb25zb2xlLmxvZygnU2lnbmluZyBvdXQgc3VjY2VzcycpO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKCd1bmFibGUgdG8gc2lnbm91dCB1c2VyJyk7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSkuY2F0Y2goKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3VuYWJsZSB0byBzaWdub3V0IHVzZXInKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9KVxuICB9XG5cbiAgaGVhZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhlbG1ldD5cbiAgICAgICAgPHRpdGxlPkV4cGVuc2UgTG9naW48L3RpdGxlPlxuICAgICAgPC9IZWxtZXQ+XG4gICAgKTtcbiAgfVxuXG4gIHN1Y2Nlc3NmdWwocmVzcCkge1xuICAgIGlmIChyZXNwLmRhdGEgJiYgIXJlc3AuZGF0YS5lcnJvcikge1xuICAgICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goJy9ob21lJywge30pO1xuICAgICAgaWYgKHR5cGVvZih3aW5kb3cpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3aW5kb3cuc2lnbmVkSW4gPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsuLi5yZXNwLmRhdGF9KTtcbiAgICB9XG4gICAgaWYgKHJlc3AuZGF0YSAmJiByZXNwLmRhdGEuZXJyb3IpIHtcbiAgICAgIHRoaXMucmVzZXRCdXR0b25UZXh0KCk7XG4gICAgfVxuICB9XG5cbiAgaXNWYWxpZCgpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS51c2VybmFtZS5sZW5ndGggPCA1KSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtlcnJvcjogdHJ1ZSwgbXNnOiAnVXNlcm5hbWUgbXVzdCBiZSBncmVhdGVyIHRoYW4gNCBDaGFyYWN0ZXJzJ30pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAodGhpcy5zdGF0ZS5wYXNzd29yZC5sZW5ndGggPCA4KSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtlcnJvcjogdHJ1ZSwgbXNnOiAnUGFzc3dvcmQgbXVzdCBiZSBncmVhdGVyIHRoYW4gNyBDaGFyYWN0ZXJzJ30pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJlc2V0QnV0dG9uVGV4dCgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNpZ25pblRleHQ6ICdTaWduIEluJyxcbiAgICAgIHNpZ251cFRleHQ6ICdTaWduIFVwJyxcbiAgICAgIGNvbnRpbnVlVGV4dDogJ0NvbnRpbnVlIHdpdGggVGVzdCBMb2dpbidcbiAgICB9KTtcbiAgfVxuXG4gIHNpZ25VcCgpIHtcbiAgICBpZiAodGhpcy5pc1ZhbGlkKCkpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe3NpZ251cFRleHQ6ICdTaWduaW5nIHVwLi4uJ30pO1xuICAgICAgc2lnbnVwKHt1c2VybmFtZTogdGhpcy5zdGF0ZS51c2VybmFtZSwgcGFzc3dvcmQ6IHRoaXMuc3RhdGUucGFzc3dvcmR9KVxuICAgICAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgICAgdGhpcy5zdWNjZXNzZnVsKHJlc3ApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIHRoaXMucmVzZXRCdXR0b25UZXh0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gU2lnbnVwJyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBzaWduSW4od2l0aFRlc3RDcmVkcykge1xuICAgIGxldCB7dXNlcm5hbWUsIHBhc3N3b3JkfSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKHdpdGhUZXN0Q3JlZHMpIHtcbiAgICAgIHVzZXJuYW1lID0gJ2RoaWxpcCc7XG4gICAgICBwYXNzd29yZCA9ICdkaGlsaXBkaGlsaXAnO1xuICAgIH1cbiAgICBpZiAod2l0aFRlc3RDcmVkcyB8fCB0aGlzLmlzVmFsaWQoKSkge1xuICAgICAgLy8gaWYgKHdpdGhUZXN0Q3JlZHMpIHtcbiAgICAgIC8vICAgdGhpcy5zZXRTdGF0ZSh7Y29udGludWVUZXh0OiAnQ29udGludWluZyB3aXRoIFRlc3QgTG9naW4uLi4nfSk7XG4gICAgICAvLyB9IGVsc2Uge1xuICAgICAgLy8gICB0aGlzLnNldFN0YXRlKHtzaWduaW5UZXh0OiAnU2lnbmluZyBpbi4uLid9KTtcbiAgICAgIC8vIH1cbiAgICAgIHNpZ25pbih7dXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmR9KS50aGVuKChyZXNwKSA9PiB7XG4gICAgICAgIHRoaXMuc3VjY2Vzc2Z1bChyZXNwKTtcbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgdGhpcy5yZXNldEJ1dHRvblRleHQoKTtcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBTaWduSW4nLCBlcnIpO1xuICAgICAgfSk7IFxuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7c2lnbmluVGV4dCwgc2lnbnVwVGV4dCwgY29udGludWVUZXh0fSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHt0aGlzLmhlYWQoKX1cbiAgICAgICAge3RoaXMuc3RhdGUubG9hZCAmJlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpZWxkc0RpdiBwYWRCMTBcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VybmFtZVwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJsb2dpbklucHV0IFwiIGlkPVwibG9naW5Vc2VybmFtZVwiIHBsYWNlaG9sZGVyPSdVc2VybmFtZScgdmFsdWU9e3RoaXMuc3RhdGUudXNlcm5hbWV9IG9uQ2hhbmdlID0geyhlKSA9PiB0aGlzLnNldFN0YXRlKHt1c2VybmFtZTogZS50YXJnZXQudmFsdWV9KX0gdHlwZT1cInRleHRcIi8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhc3N3b3JkIHBhZFQxMFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJsb2dpbklucHV0IFwiIGlkPVwibG9naW5Qd2RcIiBwbGFjZWhvbGRlcj0nUGFzc3dvcmQnIHZhbHVlPXt0aGlzLnN0YXRlLnBhc3N3b3JkfSBvbkNoYW5nZSA9IHsoZSkgPT4gdGhpcy5zZXRTdGF0ZSh7cGFzc3dvcmQ6IGUudGFyZ2V0LnZhbHVlfSl9IHR5cGU9XCJwYXNzd29yZFwiLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHt0aGlzLnN0YXRlLmVycm9yICYmIDxkaXYgaWQ9XCJlcnJvckRpdlwiIGNsYXNzTmFtZT1cInRleHRDZW50ZXIgcmVkIFwiPnt0aGlzLnN0YXRlLm1zZ308L2Rpdj59XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXIgXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmV3IGRpXCI+XG4gICAgICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPVwiaW4tYmwgbmV3QnRuIGxvZ2luQnRucyB0aGVtZUJnXCIgb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMuc2lnbkluKGZhbHNlKX0+e3NpZ25pblRleHR9PC9SaXBwbGU+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5ldyBkaVwiPlxuICAgICAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz1cImluLWJsIG5ld0J0biBsb2dpbkJ0bnMgdGhlbWVCZ1wiIG9uQ2xpY2tIYW5kbGVyPXt0aGlzLnNpZ25VcH0+e3NpZ251cFRleHR9PC9SaXBwbGU+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXIgXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmV3XCI+XG4gICAgICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPVwiaW4tYmwgbmV3QnRuIGxvZ2luQnRucyB0ZXN0TG9naW4gdGhlbWVCZ1wiIG9uQ2xpY2tIYW5kbGVyPXsoKSA9PiB0aGlzLnNpZ25Jbih0cnVlKX0+e2NvbnRpbnVlVGV4dH08L1JpcHBsZT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBMb2dpbjsiLCJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IFVzZXJzIGZyb20gJy4vdXNlck1vZGVsJztcblxuY29uc3QgRXhwZW5zZXMgPSBtb25nb29zZS5tb2RlbCgnRXhwZW5zZXMnLCB7XG4gIHRva2VuOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlZjogJ1VzZXJzJ1xuICB9LFxuICBhbW91bnQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgdHJpbTogdHJ1ZVxuICB9LFxuICBjYXRlZ29yeToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICB0cmltOiB0cnVlLFxuICAgICAgZGVmYXVsdDogJ290aGVycydcbiAgfSxcbiAgdHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZSxcbiAgICBkZWZhdWx0OiAnZXhwZW5zZSdcbiAgfSxcbiAgZGVzY3JpcHRpb246IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgZGF0ZToge1xuICAgIHR5cGU6IERhdGUsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHRyaW06IHRydWUsXG4gICAgZGVmYXVsdDogRGF0ZS5ub3coKVxuICB9LFxuICBkZDoge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICB3dzoge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICBkb3c6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgbW06IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgeXk6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHRyaW06IHRydWVcbiAgfVxufSk7XG5leHBvcnQgZGVmYXVsdCBFeHBlbnNlczsiLCJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IEV4cGVuc2VzIGZyb20gJy4vZXhwZW5zZU1vZGVsJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0anMnO1xuXG5jb25zdCBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgX2lkOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgdXNlcm5hbWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgbWlubGVuZ3RoOiA1LFxuICAgICAgICB0cmltOiB0cnVlXG4gICAgfSxcbiAgICBlbWFpbElkOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgICAgICB0cmltOiB0cnVlXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICBtaW5sZW5ndGg6IDgsXG4gICAgICAgIHRyaW06IHRydWVcbiAgICB9LFxuICAgIHRva2VuOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlXG4gICAgfSxcbiAgICBleHBlbnNlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwgXG4gICAgICAgICAgICByZWY6ICdFeHBlbnNlcydcbiAgICAgICAgfVxuICAgIF1cbn0pO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVRva2VuKHVzZXJEb2MsIG5leHQpIHtcbiAgICBiY3J5cHQuZ2VuU2FsdCgxMCwgZnVuY3Rpb24oZXJyLCBzYWx0KXtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZW5lcmF0ZSBTYWx0IGZvciBUb2tlbicsIGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBiY3J5cHQuaGFzaCh1c2VyRG9jLl9pZC50b0hleFN0cmluZygpICsgdXNlckRvYy5wYXNzd29yZC50b1N0cmluZygpLCBzYWx0LCBmdW5jdGlvbihlcnIsIGhhc2gpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gZ2VuZXJhdGUgSGFzaCBmb3IgVG9rZW4nLCBlcnIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHVzZXJEb2MudG9rZW4gPSBoYXNoO1xuICAgICAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuLy8gU3BlY2lmaWMgdG8gYWxsIGVudHJpZXMgaW4gZG9jdW1lbnQsICd0aGlzJyByZWZlcnMgdG8gYSBkb2N1bWVudFxuVXNlclNjaGVtYS5wcmUoJ3NhdmUnLCBmdW5jdGlvbihuZXh0KSB7XG4gICAgdmFyIHVzZXJEb2MgPSB0aGlzO1xuICAgIGlmICh1c2VyRG9jLmlzTW9kaWZpZWQoJ3Bhc3N3b3JkJykpIHtcbiAgICAgICAgYmNyeXB0LmdlblNhbHQoMTAsIGZ1bmN0aW9uKGVyciwgc2FsdCl7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZW5lcmF0ZSBTYWx0JywgZXJyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYmNyeXB0Lmhhc2godXNlckRvYy5wYXNzd29yZCwgc2FsdCwgZnVuY3Rpb24oZXJyLCBoYXNoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gZ2VuZXJhdGUgSGFzaCcsIGVycik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyRG9jLnBhc3N3b3JkID0gaGFzaDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlVG9rZW4odXNlckRvYywgbmV4dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZ2VuZXJhdGVUb2tlbih1c2VyRG9jLCBuZXh0KTtcbiAgICB9XG59KTtcblxuY29uc3QgVXNlcnMgPSBtb25nb29zZS5tb2RlbCgnVXNlcnMnLCBVc2VyU2NoZW1hKTtcbmV4cG9ydCBkZWZhdWx0IFVzZXJzOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJjcnlwdGpzXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXBvbHlmaWxsXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV4cHJlc3NcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYm9keS1wYXJzZXJcIik7IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTd2l0Y2gsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBIb21lIGZyb20gJy4vcGFnZXMvY29tcG9uZW50cy9Mb2dpbic7XG5pbXBvcnQgUm91dGVzIGZyb20gJy4vcGFnZXMvcm91dGVzL3JvdXRlcyc7XG5pbXBvcnQge1NlcnZlclJvdXRlcn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJvdXRlcy8+XG4gICAgICAgICk7XG4gICAgfVxufSIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJvdXRlclwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJheGlvc1wiKTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtCcm93c2VyUm91dGVyLCBTd2l0Y2gsIFJvdXRlfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBMb2dpbiBmcm9tICcuLi9jb21wb25lbnRzL0xvZ2luJztcbmltcG9ydCBOb3RGb3VuZCBmcm9tICcuLi9jb21wb25lbnRzL05vdEZvdW5kJ1xuaW1wb3J0IEhvbWUgZnJvbSAnLi4vY29tcG9uZW50cy9Ib21lJztcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD0nL2xvZ2luJyBleGFjdCByZW5kZXI9eyhwcm9wcykgPT4gPExvZ2luIHsuLi5wcm9wc30vPn0vPlxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9Jy8nIGV4YWN0IHJlbmRlcj17KHByb3BzKSA9PiA8TG9naW4gey4uLnByb3BzfS8+fS8+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD0nL2hvbWUnIGV4YWN0IHJlbmRlcj17KHByb3BzKSA9PiA8SG9tZSB7Li4ucHJvcHN9Lz59Lz5cbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPScqJyByZW5kZXI9eyhwcm9wcykgPT4gPE5vdEZvdW5kIHsuLi5wcm9wc30vPn0vPlxuICAgICAgICA8L1N3aXRjaD5cbiAgICApO1xufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEhlbG1ldCBmcm9tICdyZWFjdC1oZWxtZXQnO1xuaW1wb3J0IHtOYXZMaW5rfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuY2xhc3MgTm90Rm91bmQgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhlYWQgPSB0aGlzLmhlYWQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhlYWQoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxIZWxtZXQ+XG4gICAgICAgIDx0aXRsZT5QYWdlIE5vdCBGb3VuZDwvdGl0bGU+XG4gICAgICA8L0hlbG1ldD5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5oZWFkKCl9XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibm90Zm91bmRDb250YWluZXJcIj5cbiAgICAgICAgICA8aDUgY2xhc3NOYW1lPVwibm90Rm91bmRUZXh0IGZiIHRleHRDZW50ZXJcIj5Tb3JyeSwgdGhpcyBwYWdlIGRvZXMgbm90IGV4aXN0ITwvaDU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJub3Rmb3VuZFVMIHRleHRDZW50ZXJcIj5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibHVlQnRuXCI+XG4gICAgICAgICAgICAgIDxOYXZMaW5rIHRvPScvbG9naW4nIGNsYXNzTmFtZT1cIndoaXRlXCI+IExvZ2luIDwvTmF2TGluaz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTm90Rm91bmQ7IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVsbWV0IGZyb20gJ3JlYWN0LWhlbG1ldCc7XG5pbXBvcnQgTmV3RXhwZW5zZSBmcm9tICcuL05ld0V4cGVuc2UnO1xuaW1wb3J0IHtnZXRfZXhwZW5zZV9kYXRhLCBnZXRfZXhwZW5zZV9zdW1tYXJ5LCBnZXRVc2VySW5mbywgbG9nb3V0VXNlciwgZGVsZXRlRXhwZW5zZURhdGV9IGZyb20gJy4uL2FwaUNhbGxzL0FwaUNhbGxzJztcbmltcG9ydCB7TU9OVEgsIFlFQVIsIFdFRUssIE1PTlRIU05BTUUsIE1PTlRIU05BTUVTSE9SVH0gZnJvbSAnLi4vY29uc3RhbnRzL2NvbnN0YW50cyc7XG5pbXBvcnQgR3JhcGggZnJvbSAnLi9HcmFwaCc7XG5pbXBvcnQge3JlbmRlck9wdGlvbnMsIGZvcm1hdERhdGUsIFJpcHBsZX0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAnO1xuaW1wb3J0IHtQcm9tcHR9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb21lIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5sZWZ0TWVudUNsaWNrID0gdGhpcy5sZWZ0TWVudUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5uZXdFeHBlbnNlID0gdGhpcy5uZXdFeHBlbnNlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5uYXZpZ2F0ZVRvU2lnbkluID0gdGhpcy5uYXZpZ2F0ZVRvU2lnbkluLmJpbmQodGhpcyk7XG4gICAgdGhpcy5jYW5jZWxQb3B1cCA9IHRoaXMuY2FuY2VsUG9wdXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNvbmZpcm1Qb3B1cCA9IHRoaXMuY29uZmlybVBvcHVwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5kZWxldGVFeHBlbnNlID0gdGhpcy5kZWxldGVFeHBlbnNlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5lZGl0RXhwZW5zZSA9IHRoaXMuZWRpdEV4cGVuc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgYWN0aXZlVGFiOiBNT05USCxcbiAgICAgIHNob3dOZXdFeHBlbnNlOiBmYWxzZSxcbiAgICAgIHZpZXdNb3JlOiBmYWxzZSxcbiAgICAgIHdlZWtEYXRhOiB7fSxcbiAgICAgIG1vbnRoRGF0YToge30sXG4gICAgICB5ZWFyRGF0YToge30sXG4gICAgICBzZWxlY3RvcldXOiAnJyxcbiAgICAgIHNlbGVjdG9yTU06ICcnLFxuICAgICAgc2VsZWN0b3JZWTogJycsXG4gICAgICBhY3RpdmVGaWx0ZXI6ICdzcGVudFJhdGUnXG4gICAgfVxuICAgIHRoaXMudmlld2VkTW9yZSA9IHt9O1xuICAgIHRoaXMudXNlckluZm8oKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZ2V0RXhwZW5zZSgpO1xuICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkoKTtcbiAgICB0aGlzLnVwZGF0ZVRvZ2dsZXJDb250ZW50KCk7XG4gIH1cblxuICB1cGRhdGVUb2dnbGVyQ29udGVudCgpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFifSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gV0VFSykge1xuICAgICAgcmV0dXJuIHRoaXMuc3RhdGUud2Vla0RhdGE7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IE1PTlRIKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGF0ZS5tb250aERhdGE7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IFlFQVIpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLnllYXJEYXRhO1xuICAgIH1cbiAgfVxuXG4gIC8vIFRvIGdpdmUgdGhlIHByb3AgaW4gdGhlIHN0YXRlIHRvIGNoZWNrIGF2YWlsYWJpbGl0eSBvZiBkYXRhXG4gIGN1cnJlbnRUYWJEYXRhKCkge1xuICAgIGNvbnN0IHthY3RpdmVUYWJ9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAoYWN0aXZlVGFiID09PSBXRUVLKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGF0ZS53ZWVrRGF0YTtcbiAgICB9IGVsc2UgaWYgKGFjdGl2ZVRhYiA9PT0gTU9OVEgpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YXRlLm1vbnRoRGF0YTtcbiAgICB9IGVsc2UgaWYgKGFjdGl2ZVRhYiA9PT0gWUVBUikge1xuICAgICAgcmV0dXJuIHRoaXMuc3RhdGUueWVhckRhdGE7XG4gICAgfVxuICB9XG5cbiAgZmluZEN1cnJlbnREYXRhUHJvcCgpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFifSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKGFjdGl2ZVRhYiA9PT0gV0VFSykge1xuICAgICAgcmV0dXJuICd3ZWVrRGF0YSc7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IE1PTlRIKSB7XG4gICAgICByZXR1cm4gJ21vbnRoRGF0YSc7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IFlFQVIpIHtcbiAgICAgIHJldHVybiAneWVhckRhdGEnO1xuICAgIH1cbiAgfVxuXG4gIGdldFBhcmFtcyh0b2dnbGVWYWwpIHtcbiAgICBjb25zdCB7YWN0aXZlVGFiOiB0YWIsIGFjdGl2ZUZpbHRlcn0gPSB0aGlzLnN0YXRlO1xuICAgIGxldCB7ZGQsIG1tLCB5eSwgd3d9ID0gdGhpcy5jdXJyZW50VGFiRGF0YSgpO1xuXG4gICAgY29uc3QgY3VyckRhdGUgPSAoeXkgJiYgdHlwZW9mKG1tKSAhPT0gJ3VuZGVmaW5lZCcgJiYgZGQpID8gbmV3IERhdGUoeXksIG1tLCBkZCkgOiBuZXcgRGF0ZSgpO1xuICAgIGxldCBtb250aCA9IGN1cnJEYXRlLmdldE1vbnRoKCk7XG4gICAgbGV0IGRvdyA9IGN1cnJEYXRlLmdldERheSgpO1xuICAgIGxldCBkYXRlID0gY3VyckRhdGUuZ2V0RGF0ZSgpO1xuICAgIGxldCB5ZWFyID0gY3VyckRhdGUuZ2V0RnVsbFllYXIoKTtcblxuICAgIGlmICghd3cpIHtcbiAgICAgIGNvbnN0IGZpcnN0RGF5b2ZNb250aCA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKS5nZXREYXkoKTtcbiAgICAgIHd3ID0gTWF0aC5jZWlsKChmaXJzdERheW9mTW9udGggKyBjdXJyRGF0ZS5nZXREYXRlKCkpIC8gNyk7XG4gICAgfVxuICAgIFxuICAgIGlmICh0aGlzLnN0YXRlLnNlbGVjdG9yV1cgJiYgdHlwZW9mKHRoaXMuc3RhdGUuc2VsZWN0b3JNTSkgIT09ICd1bmRlZmluZWQnICYmIHRoaXMuc3RhdGUuc2VsZWN0b3JZWSkge1xuICAgICAgeWVhciA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JZWSk7XG4gICAgICBtb250aCA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JNTSk7XG4gICAgICB3dyA9IHBhcnNlSW50KHRoaXMuc3RhdGUuc2VsZWN0b3JXVyk7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHt0YWIsIG1tOiBtb250aCwgZG93LCB3dywgeXk6eWVhciwgZGQ6ZGF0ZSwgYWN0aXZlRmlsdGVyfTtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG5cbiAgdXNlckluZm8oKSB7XG4gICAgZ2V0VXNlckluZm8oKS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMuZGF0YSAmJiByZXMuZGF0YS51c2VySW5mbykge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXNlckluZm86IHJlcy5kYXRhLnVzZXJJbmZvfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm5hdmlnYXRlVG9TaWduSW4oKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLm5hdmlnYXRlVG9TaWduSW4oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldEV4cGVuc2VTdW1tYXJ5KGxvYWROZXdTdW1tYXJ5RGF0YSwgdG9nZ2xlVmFsKSB7XG4gICAgY29uc3QgcGFyYW1zID0gdGhpcy5nZXRQYXJhbXModG9nZ2xlVmFsKTtcbiAgICBjb25zdCBhY3RpdmVUYWJEYXRhID0gdGhpcy5maW5kQ3VycmVudERhdGFQcm9wKCk7XG5cbiAgICAvLyBpZiAoT2JqZWN0LmtleXModGhpcy5zdGF0ZVthY3RpdmVUYWJEYXRhXSkubGVuZ3RoID09PSAwIHx8IGxvYWROZXdTdW1tYXJ5RGF0YSkge1xuICAgICAgZ2V0X2V4cGVuc2Vfc3VtbWFyeShwYXJhbXMpLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7W2FjdGl2ZVRhYkRhdGFdIDogey4uLnRoaXMuc3RhdGVbYWN0aXZlVGFiRGF0YV0sIHBsb3REYXRhOiB7Li4ucmVzcC5kYXRhfX19KTtcbiAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBHZXQgRXhwZW5zZSBTdW1tYXJ5IERldGFpbHMnLCBlcnIpO1xuICAgICAgfSk7XG4gICAgLy8gfVxuICB9XG5cbiAgZ2V0RXhwZW5zZShsb2FkTmV3RXhwZW5zZURhdGEsIHRvZ2dsZVZhbCkge1xuICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuZ2V0UGFyYW1zKHRvZ2dsZVZhbCk7XG4gICAgY29uc3QgYWN0aXZlVGFiRGF0YSA9IHRoaXMuZmluZEN1cnJlbnREYXRhUHJvcCgpO1xuICAgIFxuICAgIC8vIGlmIChPYmplY3Qua2V5cyh0aGlzLnN0YXRlW2FjdGl2ZVRhYkRhdGFdKS5sZW5ndGggPT09IDAgfHwgbG9hZE5ld0V4cGVuc2VEYXRhKSB7XG4gICAgICBnZXRfZXhwZW5zZV9kYXRhKHBhcmFtcykudGhlbigocmVzcCkgPT4ge1xuICAgICAgICBjb25zdCB7ZXhwZW5zZUxpc3QsIGluY29tZUxpc3QsIHN0YW5kaW5nLCBzcGVudCwgd3csIHl5LCBtbSwgZGR9ID0gcmVzcC5kYXRhO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtbYWN0aXZlVGFiRGF0YV0gOiB7Li4udGhpcy5zdGF0ZVthY3RpdmVUYWJEYXRhXSwgZXhwZW5zZUxpc3QsIGluY29tZUxpc3QsIHN0YW5kaW5nLCBzcGVudCwgd3csIHl5LCBtbSxkZH0sIHNlbGVjdG9yTU06bW0sIHNlbGVjdG9yV1c6IHd3LCBzZWxlY3RvcllZOiB5eX0pO1xuICAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gR2V0IEV4cGVuc2UgRGV0YWlscycsIGVycik7XG4gICAgICAgfSk7XG4gICAgLy8gfVxuICB9XG5cbiAgY2hhbmdlRXhwZW5zZURheUZvcm1hdChhY3RpdmVUYWIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHthY3RpdmVUYWI6IGFjdGl2ZVRhYiwgdmlld01vcmU6IGZhbHNlfSwgKCkgPT4ge1xuICAgICAgdGhpcy5nZXRFeHBlbnNlKCk7XG4gICAgICB0aGlzLmdldEV4cGVuc2VTdW1tYXJ5KCk7XG4gICAgfSk7XG4gIH1cblxuICBsZWZ0TWVudUNsaWNrKCkge1xuICAgIHRoaXMucmVmcy5iYWNrRHJvcC5jbGFzc0xpc3QudG9nZ2xlKCdiYWNrRHJvcCcpO1xuICAgIHRoaXMucmVmcy5wb3B1cC5jbGFzc0xpc3QudG9nZ2xlKCdyaWdodDAnKTtcbiAgICBpZiAodGhpcy5yZWZzLm90aGVySGFsZkxhbmRpbmdUeHQpIHtcbiAgICAgIHRoaXMucmVmcy5maXJzdEhhbGZMYW5kaW5nVHh0LmNsYXNzTGlzdC50b2dnbGUoJ3NjYWxlOTAnKTtcbiAgICAgIHRoaXMucmVmcy5vdGhlckhhbGZMYW5kaW5nVHh0LmNsYXNzTGlzdC50b2dnbGUoJ3NjYWxlOTAnKTtcbiAgICB9XG4gICAgdGhpcy5yZWZzLmFkZEJ0bkNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdkbicpO1xuICAgIFxuICB9XG5cbiAgbmF2aWdhdGVUb1NpZ25JbigpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS51c2VySW5mbykge1xuICAgICAgbG9nb3V0VXNlcigpLnRoZW4oKCkgPT4ge1xuICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9sb2dpbic7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9sb2dpbic7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyTGVmdE1lbnVCYXIoKSB7XG4gICAgY29uc3Qge3VzZXJJbmZvfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZW51QmFyXCI+XG4gICAgICAgIDxkaXYgcmVmPVwicG9wdXBcImNsYXNzTmFtZT1cInBvcHVwIHppOSBcIiBvbkNsaWNrPXt0aGlzLmxlZnRNZW51Q2xpY2t9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZUJhciBpbi1ibCBmbFwiPlxuICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPVwibWVudS1vcHRpb25cIiBvbkNsaWNrSGFuZGxlcj17dGhpcy5uYXZpZ2F0ZVRvU2lnbklufT57KCF1c2VySW5mbyA/ICdTaWduIEluJyA6ICdMb2dvdXQnKX08L1JpcHBsZT5cbiAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz1cIm1lbnUtb3B0aW9uXCIgb25DbGlja0hhbmRsZXI9eygpID0+IHdpbmRvdy5vcGVuKFwiaHR0cHM6Ly9kaGlsaXBrbXIuZ2l0aHViLmlvL21hdGVyaWFsaXplZFJlc3VtZS9cIil9PkFib3V0IE1lPC9SaXBwbGU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIG5ld0V4cGVuc2UodmFsLCBzYXZlU3VjY2VzcywgZWRpdEV4cGVuc2VWYWwpIHtcbiAgICBpZiAoc2F2ZVN1Y2Nlc3MpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dOZXdFeHBlbnNlOiB2YWwsIGVkaXRFeHBlbnNlOiB0eXBlb2YoZWRpdEV4cGVuc2VWYWwpICE9PSAndW5kZWZpbmVkJyA/IGVkaXRFeHBlbnNlVmFsIDogdGhpcy5zdGF0ZS5lZGl0RXhwZW5zZSwgd2Vla0RhdGE6IHt9LCBtb250aERhdGE6IHt9LCB5ZWFyRGF0YToge319LCAoKSA9PiB7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZShzYXZlU3VjY2Vzcyk7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkoc2F2ZVN1Y2Nlc3MpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dOZXdFeHBlbnNlOiB2YWwsIGVkaXRFeHBlbnNlOiBlZGl0RXhwZW5zZVZhbH0pO1xuICAgIH1cbiAgfVxuXG4gIGNhbmNlbFBvcHVwKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dQb3B1cDogZmFsc2UgfSk7XG4gIH1cblxuICBjb25maXJtUG9wdXAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1BvcHVwOiBmYWxzZX0pO1xuICAgIGRlbGV0ZUV4cGVuc2VEYXRlKHtpZDogdGhpcy5zdGF0ZS5kZWxldGVUcmFuc2FjdGlvbk9iai5pZH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcykge1xuICAgICAgICB0aGlzLmdldEV4cGVuc2UodHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZVN1bW1hcnkodHJ1ZSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBlZGl0RXhwZW5zZShvYmopIHtcbiAgICB0aGlzLnNldFN0YXRlKHtlZGl0RXhwZW5zZTogdHJ1ZSwgZWRpdFRyYW5zYWN0aW9uT2JqOm9ian0pO1xuICB9XG5cbiAgZGVsZXRlRXhwZW5zZShvYmopIHtcbiAgICB0aGlzLnNldFN0YXRlKHtzaG93UG9wdXA6IHRydWUsIGRlbGV0ZVRyYW5zYWN0aW9uT2JqOm9ian0pO1xuICB9XG5cbiAgY2xpY2tWaWV3TW9yZSgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHt2aWV3TW9yZTogIXRoaXMuc3RhdGUudmlld01vcmV9KTtcbiAgICB0aGlzLnJlZnMudHJhbnNhY3RlZENhcmQuc2Nyb2xsVG9wID0gMDtcbiAgfVxuXG4gIHJlbmRlcklubmVyVHJhbnNhY3Rpb25jYXJkKGhhc0xpc3REZWZpbmVkKSB7XG4gICAgaWYgKCFoYXNMaXN0RGVmaW5lZCkge1xuICAgICAgY29uc3QgbG9hZGVyID0gW107XG4gICAgICBmb3IobGV0IGkgPSAwOyBpIDwgMjsgaSsrKXtcbiAgICAgICAgbG9hZGVyLnB1c2goXG4gICAgICAgICAgPGRpdiBrZXk9eyd0cmFuc2FjdGlvbl90eXBlXycgKyBpfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJhbnNhY3RlZENhcmRJbm5lclwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRJbm5lcmhlYWRpbmdcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjYXRfcGVyY2VudCBwcm9ncmVzc0JhciBmbCBtMCBtdDEwXCI+PC9zcGFuPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzc0JhciBibCB0ZXh0Q2VudGVyIG10MzBcIiA+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRCcmRyQnRtXCI+PC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbG9hZGVyO1xuICAgIH1cblxuICAgIGNvbnN0IHtleHBlbnNlTGlzdH0gPSB0aGlzLmN1cnJlbnRUYWJEYXRhKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIGV4cGVuc2VMaXN0LnRyYW5zYWN0aW9uTGlzdC5tYXAoKHRyYW5zYWN0aW9uLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS52aWV3TW9yZSB8fCB0aGlzLnZpZXdlZE1vcmVbdGhpcy5zdGF0ZS5hY3RpdmVUYWJdIHx8ICF0aGlzLnN0YXRlLnZpZXdNb3JlICYmIGluZGV4IDwgMikge1xuICAgICAgICAgIGlmICh0aGlzLnN0YXRlLnZpZXdNb3JlKSB7XG4gICAgICAgICAgICB0aGlzLnZpZXdlZE1vcmVbdGhpcy5zdGF0ZS5hY3RpdmVUYWJdID0gdHJ1ZTsgLy8gVG8gbm90IHJlbW92ZSBlbGVtZW50IGZyb20gRE9NIG9uIGNsaWNraW5nIHZpZXcgTW9yZSBhZ2FpblxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBrZXk9eyd0cmFuc2FjdGlvbl90eXBlXycgKyBpbmRleH0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJhbnNhY3RlZENhcmRJbm5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZElubmVyaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXQgdzMzIGluLWJsIHRsXCI+e3RyYW5zYWN0aW9uLmNhdGVnb3J5fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXQgdzMzIGluLWJsIHRjXCI+e2Zvcm1hdERhdGUodHJhbnNhY3Rpb24uZGF0ZSl9PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdCB3MzMgaW4tYmwgdHJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHN2ZyBvbkNsaWNrPXsoKSA9PiB0aGlzLmVkaXRFeHBlbnNlKHsuLi50cmFuc2FjdGlvbn0pfSBoZWlnaHQ9XCIxNXB4XCIgdmlld0JveD1cIjAgLTEgNDUwIDQwMFwiIHdpZHRoPVwiMTVweFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJtMzcwLjU4OTg0NCAyNTAuOTcyNjU2Yy01LjUyMzQzOCAwLTEwIDQuNDc2NTYzLTEwIDEwdjg4Ljc4OTA2M2MtLjAxOTUzMiAxNi41NjI1LTEzLjQzNzUgMjkuOTg0Mzc1LTMwIDMwaC0yODAuNTg5ODQ0Yy0xNi41NjI1LS4wMTU2MjUtMjkuOTgwNDY5LTEzLjQzNzUtMzAtMzB2LTI2MC41ODk4NDRjLjAxOTUzMS0xNi41NTg1OTQgMTMuNDM3NS0yOS45ODA0NjkgMzAtMzBoODguNzg5MDYyYzUuNTIzNDM4IDAgMTAtNC40NzY1NjMgMTAtMTAgMC01LjUxOTUzMS00LjQ3NjU2Mi0xMC0xMC0xMGgtODguNzg5MDYyYy0yNy42MDE1NjIuMDMxMjUtNDkuOTY4NzUgMjIuMzk4NDM3LTUwIDUwdjI2MC41OTM3NWMuMDMxMjUgMjcuNjAxNTYzIDIyLjM5ODQzOCA0OS45Njg3NSA1MCA1MGgyODAuNTg5ODQ0YzI3LjYwMTU2Mi0uMDMxMjUgNDkuOTY4NzUtMjIuMzk4NDM3IDUwLTUwdi04OC43OTI5NjljMC01LjUyMzQzNy00LjQ3NjU2My0xMC0xMC0xMHptMCAwXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJtMzc2LjYyODkwNiAxMy40NDE0MDZjLTE3LjU3NDIxOC0xNy41NzQyMTgtNDYuMDY2NDA2LTE3LjU3NDIxOC02My42NDA2MjUgMGwtMTc4LjQwNjI1IDE3OC40MDYyNWMtMS4yMjI2NTYgMS4yMjI2NTYtMi4xMDU0NjkgMi43MzgyODItMi41NjY0MDYgNC40MDIzNDRsLTIzLjQ2MDkzNyA4NC42OTkyMTljLS45NjQ4NDQgMy40NzI2NTYuMDE1NjI0IDcuMTkxNDA2IDIuNTYyNSA5Ljc0MjE4NyAyLjU1MDc4MSAyLjU0Njg3NSA2LjI2OTUzMSAzLjUyNzM0NCA5Ljc0MjE4NyAyLjU2NjQwNmw4NC42OTkyMTktMjMuNDY0ODQzYzEuNjY0MDYyLS40NjA5MzggMy4xNzk2ODctMS4zNDM3NSA0LjQwMjM0NC0yLjU2NjQwN2wxNzguNDAyMzQzLTE3OC40MTAxNTZjMTcuNTQ2ODc1LTE3LjU4NTkzNyAxNy41NDY4NzUtNDYuMDU0Njg3IDAtNjMuNjQwNjI1em0tMjIwLjI1NzgxMiAxODQuOTA2MjUgMTQ2LjAxMTcxOC0xNDYuMDE1NjI1IDQ3LjA4OTg0NCA0Ny4wODk4NDQtMTQ2LjAxNTYyNSAxNDYuMDE1NjI1em0tOS40MDYyNSAxOC44NzUgMzcuNjIxMDk0IDM3LjYyNS01Mi4wMzkwNjMgMTQuNDE3OTY5em0yMjcuMjU3ODEyLTE0Mi41NDY4NzUtMTAuNjA1NDY4IDEwLjYwNTQ2OS00Ny4wOTM3NS00Ny4wOTM3NSAxMC42MDkzNzQtMTAuNjA1NDY5YzkuNzYxNzE5LTkuNzYxNzE5IDI1LjU4OTg0NC05Ljc2MTcxOSAzNS4zNTE1NjMgMGwxMS43MzgyODEgMTEuNzM0Mzc1YzkuNzQ2MDk0IDkuNzczNDM4IDkuNzQ2MDk0IDI1LjU4OTg0NCAwIDM1LjM1OTM3NXptMCAwXCIvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3NCYXIgYmwgdGV4dENlbnRlciBtYXJnaW5UMjVcIiA+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpbGxlZFwiIHN0eWxlPSB7e21heFdpZHRoOiB0cmFuc2FjdGlvbi5wZXJjZW50ICsgJyUnfX0+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWRSMTUgcGFkTDEwIGNhdCB3MzMgaW4tYmwgdGxcIj57J+KCuScrdHJhbnNhY3Rpb24uYW1vdW50fVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdCB3MzMgaW4tYmwgdGNcIj5cbiAgICAgICAgICAgICAgICAgICAge3RyYW5zYWN0aW9uLnBlcmNlbnQgKyAnICUnfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZFI3IGNhdCB3MzMgaW4tYmwgdHJcIj5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8c3ZnIG9uQ2xpY2s9eygpID0+IHRoaXMuZGVsZXRlRXhwZW5zZSh7aWQ6IHRyYW5zYWN0aW9uLmlkfSl9IGZpbGw9XCIjYTIwNDA0XCIgaGVpZ2h0PVwiMTVweFwiIHZpZXdCb3g9XCItNDAgMCA0NTAgNDAwXCIgd2lkdGg9XCIxNXB4XCIgPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJtMjMyLjM5ODQzOCAxNTQuNzAzMTI1Yy01LjUyMzQzOCAwLTEwIDQuNDc2NTYzLTEwIDEwdjE4OWMwIDUuNTE5NTMxIDQuNDc2NTYyIDEwIDEwIDEwIDUuNTIzNDM3IDAgMTAtNC40ODA0NjkgMTAtMTB2LTE4OWMwLTUuNTIzNDM3LTQuNDc2NTYzLTEwLTEwLTEwem0wIDBcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIm0xMTQuMzk4NDM4IDE1NC43MDMxMjVjLTUuNTIzNDM4IDAtMTAgNC40NzY1NjMtMTAgMTB2MTg5YzAgNS41MTk1MzEgNC40NzY1NjIgMTAgMTAgMTAgNS41MjM0MzcgMCAxMC00LjQ4MDQ2OSAxMC0xMHYtMTg5YzAtNS41MjM0MzctNC40NzY1NjMtMTAtMTAtMTB6bTAgMFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwibTI4LjM5ODQzOCAxMjcuMTIxMDk0djI0Ni4zNzg5MDZjMCAxNC41NjI1IDUuMzM5ODQzIDI4LjIzODI4MSAxNC42Njc5NjggMzguMDUwNzgxIDkuMjg1MTU2IDkuODM5ODQ0IDIyLjIwNzAzMiAxNS40MjU3ODEgMzUuNzMwNDY5IDE1LjQ0OTIxOWgxODkuMjAzMTI1YzEzLjUyNzM0NC0uMDIzNDM4IDI2LjQ0OTIxOS01LjYwOTM3NSAzNS43MzA0NjktMTUuNDQ5MjE5IDkuMzI4MTI1LTkuODEyNSAxNC42Njc5NjktMjMuNDg4MjgxIDE0LjY2Nzk2OS0zOC4wNTA3ODF2LTI0Ni4zNzg5MDZjMTguNTQyOTY4LTQuOTIxODc1IDMwLjU1ODU5My0yMi44MzU5MzggMjguMDc4MTI0LTQxLjg2MzI4Mi0yLjQ4NDM3NC0xOS4wMjM0MzctMTguNjkxNDA2LTMzLjI1MzkwNi0zNy44Nzg5MDYtMzMuMjU3ODEyaC01MS4xOTkyMTh2LTEyLjVjLjA1ODU5My0xMC41MTE3MTktNC4wOTc2NTctMjAuNjA1NDY5LTExLjUzOTA2My0yOC4wMzEyNS03LjQ0MTQwNi03LjQyMTg3NS0xNy41NTA3ODEtMTEuNTU0Njg3NS0yOC4wNjI1LTExLjQ2ODc1aC04OC43OTY4NzVjLTEwLjUxMTcxOS0uMDg1OTM3NS0yMC42MjEwOTQgNC4wNDY4NzUtMjguMDYyNSAxMS40Njg3NS03LjQ0MTQwNiA3LjQyNTc4MS0xMS41OTc2NTYgMTcuNTE5NTMxLTExLjUzOTA2MiAyOC4wMzEyNXYxMi41aC01MS4xOTkyMTljLTE5LjE4NzUuMDAzOTA2LTM1LjM5NDUzMSAxNC4yMzQzNzUtMzcuODc4OTA3IDMzLjI1NzgxMi0yLjQ4MDQ2OCAxOS4wMjczNDQgOS41MzUxNTcgMzYuOTQxNDA3IDI4LjA3ODEyNiA0MS44NjMyODJ6bTIzOS42MDE1NjIgMjc5Ljg3ODkwNmgtMTg5LjIwMzEyNWMtMTcuMDk3NjU2IDAtMzAuMzk4NDM3LTE0LjY4NzUtMzAuMzk4NDM3LTMzLjV2LTI0NS41aDI1MHYyNDUuNWMwIDE4LjgxMjUtMTMuMzAwNzgyIDMzLjUtMzAuMzk4NDM4IDMzLjV6bS0xNTguNjAxNTYyLTM2Ny41Yy0uMDY2NDA3LTUuMjA3MDMxIDEuOTgwNDY4LTEwLjIxODc1IDUuNjc1NzgxLTEzLjg5NDUzMSAzLjY5MTQwNi0zLjY3NTc4MSA4LjcxNDg0My01LjY5NTMxMyAxMy45MjU3ODEtNS42MDU0NjloODguNzk2ODc1YzUuMjEwOTM3LS4wODk4NDQgMTAuMjM0Mzc1IDEuOTI5Njg4IDEzLjkyNTc4MSA1LjYwNTQ2OSAzLjY5NTMxMyAzLjY3MTg3NSA1Ljc0MjE4OCA4LjY4NzUgNS42NzU3ODIgMTMuODk0NTMxdjEyLjVoLTEyOHptLTcxLjE5OTIxOSAzMi41aDI3MC4zOTg0MzdjOS45NDE0MDYgMCAxOCA4LjA1ODU5NCAxOCAxOHMtOC4wNTg1OTQgMTgtMTggMThoLTI3MC4zOTg0MzdjLTkuOTQxNDA3IDAtMTgtOC4wNTg1OTQtMTgtMThzOC4wNTg1OTMtMTggMTgtMTh6bTAgMFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwibTE3My4zOTg0MzggMTU0LjcwMzEyNWMtNS41MjM0MzggMC0xMCA0LjQ3NjU2My0xMCAxMHYxODljMCA1LjUxOTUzMSA0LjQ3NjU2MiAxMCAxMCAxMCA1LjUyMzQzNyAwIDEwLTQuNDgwNDY5IDEwLTEwdi0xODljMC01LjUyMzQzNy00LjQ3NjU2My0xMC0xMC0xMHptMCAwXCIvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkQnJkckJ0bVwiPjwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgKTtcbiAgfVxuXG4gIGNoYW5nZUZpbHRlcih0eXBlKSB7XG4gICAgaWYgKHR5cGUgPT09ICdkYXRlJykge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7YWN0aXZlRmlsdGVyOiAnZGF0ZSd9LCAoKSA9PiB7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZSh0cnVlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5nZXRFeHBlbnNlU3VtbWFyeSh0cnVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3NwZW50UmF0ZScpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2FjdGl2ZUZpbHRlcjogJ3NwZW50UmF0ZSd9LCAoKSA9PiB7XG4gICAgICAgIHRoaXMuZ2V0RXhwZW5zZSh0cnVlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5nZXRFeHBlbnNlU3VtbWFyeSh0cnVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGdldFRyYW5zYWN0aW9uQ2FyZCgpIHtcbiAgICBjb25zdCBjdXJyZW50VGFiRGF0YSA9IHRoaXMuY3VycmVudFRhYkRhdGEoKTtcbiAgICBjb25zdCB7YWN0aXZlVGFiLCB2aWV3TW9yZSA9IGZhbHNlLCB1c2VySW5mbywgYWN0aXZlRmlsdGVyfSA9IHRoaXMuc3RhdGU7XG4gICAgLy8gY29uc3QgaGFzTm9EYXRhID0gY3VycmVudFRhYkRhdGEuZXhwZW5zZUxpc3QgJiYgT2JqZWN0LmtleXMoY3VycmVudFRhYkRhdGEuZXhwZW5zZUxpc3QpLmxlbmd0aCA9PT0gMDtcbiAgICBjb25zdCBoYXNMaXN0RGVmaW5lZCA9IGN1cnJlbnRUYWJEYXRhLmV4cGVuc2VMaXN0OyAvLyBUbyBkZXRlcm1pbmUgaWYgdGhlIGNhbGwgaXMgY29tcGxldGVkXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIHsvKiA8ZGl2PlxuICAgICAgICAgICAgPHNwYW4+RGF0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPlBlcmNlbnRhZ2U8L3NwYW4+XG4gICAgICAgICAgPC9kaXY+ICovfVxuICAgICAgICAgIDxkaXYgcmVmPVwidHJhbnNhY3RlZENhcmRcIiBjbGFzc05hbWU9eyd0cmFuc2FjdGVkQ2FyZCB0cmFuc2l0aW9uMWEgJyArICh2aWV3TW9yZSA/ICdzaG93QWxsVHJhbnNhY3Rpb24nIDogJycpfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dENlbnRlciBtdDVcIj5cbiAgICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPXsnaW4tYmwgc29ydFR5cGUgc29ydFR5cGVMZWZ0IGZzMTQgJyArIChhY3RpdmVGaWx0ZXIgPT09ICdzcGVudFJhdGUnID8gJyBsZWZ0QWN0aXZlUmlnaHQgJyA6ICcnKX0gb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMuY2hhbmdlRmlsdGVyKCdzcGVudFJhdGUnKX0gPlNwZW50IFJhdGUgPC9SaXBwbGU+XG4gICAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz17J2luLWJsIHNvcnRUeXBlIHNvcnRUeXBlUmlnaHQgZnMxNCAnICsgKGFjdGl2ZUZpbHRlciA9PT0gJ3NwZW50UmF0ZScgPyAnIGxlZnRBY3RpdmVMZWZ0ICcgOiAncmlnaHRBY3RpdmVSaWdodCcpfSBvbkNsaWNrSGFuZGxlcj17KCkgPT4gdGhpcy5jaGFuZ2VGaWx0ZXIoJ2RhdGUnKX0gPiBEYXRlIDwvUmlwcGxlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRyYW5zYWN0U2Nyb2xsZXJcIj5cbiAgICAgICAgICAgICAge3R5cGVvZihoYXNMaXN0RGVmaW5lZCkgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5rZXlzKGhhc0xpc3REZWZpbmVkKS5sZW5ndGggPT09IDA/XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0Q2VudGVyIHBhZFQyMCBtaDEwcFwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0dSBcIiBvbkNsaWNrPXsoKSA9PiB0aGlzLm5ld0V4cGVuc2UodHJ1ZSl9PkFkZCBUcmFuc2FjdGlvbiA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIHshdXNlckluZm8gJiYgPGRpdiBjbGFzc05hbWU9XCJwYWRUMTAgcGFkQjIwXCI+PGEgaHJlZj1cIi9sb2dpblwiPjxzcGFuPlNpZ24gSW48L3NwYW4+PC9hPiBmb3IgUGFzdCBUcmFuc2FjdGlvbnM8L2Rpdj59XG4gICAgICAgICAgICAgICAgPC9kaXY+OlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAge2FjdGl2ZVRhYiA9PT0gV0VFSyA/IHRoaXMucmVuZGVySW5uZXJUcmFuc2FjdGlvbmNhcmQoaGFzTGlzdERlZmluZWQpIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHthY3RpdmVUYWIgPT09IE1PTlRIID8gdGhpcy5yZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZChoYXNMaXN0RGVmaW5lZCkgOiBudWxsfVxuICAgICAgICAgICAgICAgICAge2FjdGl2ZVRhYiA9PT0gWUVBUiA/IHRoaXMucmVuZGVySW5uZXJUcmFuc2FjdGlvbmNhcmQoaGFzTGlzdERlZmluZWQpIDogbnVsbH1cbiAgICAgICAgICAgICAgICA8L2Rpdj4gXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8UmlwcGxlIGNsYXNzZXM9XCJ2aWV3TW9yZUFycm93XCIgb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMuY2xpY2tWaWV3TW9yZSgpfT5cbiAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPXt2aWV3TW9yZSA/ICdyb3RhdGVWaWV3TW9yZScgOiAnJ30gcmVmPVwic3ZnVmlld01vcmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICA8cGF0aCBkPVwiTTcuNDEgNy44NEwxMiAxMi40Mmw0LjU5LTQuNThMMTggOS4yNWwtNiA2LTYtNnpcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L1JpcHBsZT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc1JlbFwiPlxuICAgICAgICAgICAgPGRpdiByZWY9XCJhZGRCdG5Db250YWluZXJcIiBjbGFzc05hbWU9eydhZGRCdG5Db250YWluZXIgJ30+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz1cImluLWJsIGFkZEJ0biB0aGVtZUJnXCIgb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMubmV3RXhwZW5zZSh0cnVlKX0gPiArIDwvUmlwcGxlPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gIH1cbiAgZ2V0Q3VycmVudERhdGUoKSB7XG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgY3Vyck1vbnRoID0gTU9OVEhTTkFNRVtkYXRlLmdldE1vbnRoKCldO1xuICAgIGNvbnN0IGN1cnJEYXRlID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgcmV0dXJuIGN1cnJEYXRlICsgJyAnICsgY3Vyck1vbnRoICsgJyAnICsgZGF0ZS5nZXRGdWxsWWVhcigpO1xuICB9XG4gIGdldFRvZ2dsZXJIZWFkZXIoKSB7XG4gICAgY29uc3Qge2FjdGl2ZVRhYn0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHttbSwgeXkgLCB3d30gPSB0aGlzLmN1cnJlbnRUYWJEYXRhKCk7XG4gICAgbGV0IHRvZ2dsZXJIZWFkZXIgPSAnJztcbiAgICBsZXQgaXNQcmV2RGlzYWJsZWQgPSBmYWxzZTtcbiAgICBsZXQgaXNOZXh0RGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIGlmIChhY3RpdmVUYWIgPT09IE1PTlRIKSB7XG4gICAgICB0b2dnbGVySGVhZGVyID0gIHR5cGVvZihtbSkgIT09ICd1bmRlZmluZWQnID8gTU9OVEhTTkFNRVttbV0gOiAnLS0tLSc7XG4gICAgICBpc1ByZXZEaXNhYmxlZCA9IG1tID09PSAwID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgaXNOZXh0RGlzYWJsZWQgPSBtbSA9PT0gMTEgPyB0cnVlIDogZmFsc2U7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVUYWIgPT09IFdFRUspIHtcbiAgICAgIHRvZ2dsZXJIZWFkZXIgPSAgd3cgPyAoJ1dlZWsgJyArICB3dykgOiAnLS0tLSc7XG4gICAgICBpc1ByZXZEaXNhYmxlZCA9IHd3ID09PSAxID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgaXNOZXh0RGlzYWJsZWQgPSB3dyA9PT0gNSA/IHRydWUgOiBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdG9nZ2xlckhlYWRlciA9IHl5ID8geXkgOiAnLS0tLSc7XG4gICAgICBpc05leHREaXNhYmxlZCA9IHl5ID09PSAyMDE4ID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB7dG9nZ2xlckhlYWRlciwgaXNQcmV2RGlzYWJsZWQsIGlzTmV4dERpc2FibGVkfVxuICB9XG5cbiAgdG9nZ2xlVHlwZSh0eXBlLCB2YWwpIHtcbiAgICBsZXQgb2JqVG9DaGFuZ2UgPSB7fTtcbiAgICBpZiAodHlwZSA9PT0gV0VFSykge1xuICAgICAgb2JqVG9DaGFuZ2UgPSB7c2VsZWN0b3JXVzogdmFsfTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IE1PTlRIKSB7XG4gICAgICBvYmpUb0NoYW5nZSA9IHtzZWxlY3Rvck1NOiB2YWx9O1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gWUVBUikge1xuICAgICAgb2JqVG9DaGFuZ2UgPSB7c2VsZWN0b3JZWTogdmFsfTtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7Li4ub2JqVG9DaGFuZ2V9LCAoKSA9PiB7XG4gICAgICB0aGlzLmdldEV4cGVuc2UodHJ1ZSwgdHJ1ZSk7XG4gICAgICB0aGlzLmdldEV4cGVuc2VTdW1tYXJ5KHRydWUsIHRydWUpO1xuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHthY3RpdmVUYWIsIHNob3dOZXdFeHBlbnNlLCB2aWV3TW9yZSA9IGZhbHNlLCBlZGl0RXhwZW5zZSwgZWRpdFRyYW5zYWN0aW9uT2JqfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3Qge3N0YW5kaW5nID0gdW5kZWZpbmVkLCBzcGVudCA9IHVuZGVmaW5lZCwgcGxvdERhdGEgPSB1bmRlZmluZWQsIGluY29tZUxpc3QgPSB1bmRlZmluZWR9ID0gdGhpcy5jdXJyZW50VGFiRGF0YSgpO1xuICAgIGNvbnN0IHt0b2dnbGVySGVhZGVyLCBpc1ByZXZEaXNhYmxlZCwgaXNOZXh0RGlzYWJsZWR9ID0gdGhpcy5nZXRUb2dnbGVySGVhZGVyKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgIDxQcm9tcHQgd2hlbj17IXNob3dOZXdFeHBlbnNlfSBtZXNzYWdlPXsoKSA9PiBcIkdvaW5nIGJhY2sgd2lsbCBMb2cgeW91IG91dC5cIn0+PC9Qcm9tcHQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdiByZWY9XCJiYWNrRHJvcFwiIGNsYXNzTmFtZT17J3RyYW5zaXRpb24xYSB6aTkgJyArICgoc2hvd05ld0V4cGVuc2UgfHwgZWRpdEV4cGVuc2UpID8gJ2JhY2tEcm9wJyA6ICcnKX0gb25DbGljaz17KCkgPT4gdGhpcy5uZXdFeHBlbnNlKGZhbHNlKX0+PC9kaXY+XG4gICAgICAgICAge3RoaXMucmVuZGVyTGVmdE1lbnVCYXIoKX1cbiAgICAgICAgICA8ZGl2IHJlZj1cIm1haW5Db250ZW50XCIgY2xhc3NOYW1lPVwibWFpbkNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgIDxkaXYgcmVmPVwiZmlyc3RIYWxmTGFuZGluZ1R4dFwiIGNsYXNzTmFtZT1cInRyYW5zaXRpb24wXzUgZmlyc3QtaGFsZi1sYW5kaW5nXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGFuZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPVwibGVmdC1tZW51LWNvbnRhaW5lclwiIG9uQ2xpY2tIYW5kbGVyPXt0aGlzLmxlZnRNZW51Q2xpY2t9PlxuICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cImxlZnQtbWVudVwiIHNyYz1cIi9pbWcvbWVudS5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgPC9SaXBwbGU+XG4gICAgICAgICAgICAgICAgICB7LyogPHNwYW4gY2xhc3NOYW1lPVwibGVmdC1tZW51LWNvbnRhaW5lclwiIG9uQ2xpY2s9e3RoaXMubGVmdE1lbnVDbGlja30+PC9zcGFuPiAqL31cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRpbmdcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmIgZjExXCI+Q1VSUkVOVCBCQUxBTkNFPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJmMThcIj7igrkgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJzdGFuZGluZ0FtdFwiPnsodHlwZW9mKHN0YW5kaW5nKSAhPT0gJ3VuZGVmaW5lZCcgPyBzdGFuZGluZyA6ICcwJyl9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHRDZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj48c3BhbiBjbGFzc05hbWU9XCJmMTFcIj57dGhpcy5nZXRDdXJyZW50RGF0ZSgpfTwvc3Bhbj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXhwZW5zZURheXNCdG4gdzg1IG0xMGFcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW4tYmwgdzMzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBvbkNoYW5nZT17KGUpID0+IHRoaXMudG9nZ2xlVHlwZShXRUVLLCBlLnRhcmdldC52YWx1ZSl9IGlkPVwid2Vla1NlbGVjdG9yIGRiIHdoaXRlXCIgdmFsdWU9e3RoaXMuc3RhdGUuc2VsZWN0b3JXV30+XG4gICAgICAgICAgICAgICAgICAgICAgICB7cmVuZGVyT3B0aW9ucygnd2VlaycpfVxuICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDxSaXBwbGUgb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChXRUVLKX0gIGNsYXNzZXM9eydwYWRCNSBicjEwIGRiIHdoaXRlIHBhZFQxMCBtdDUgJyArIChhY3RpdmVUYWIgPT09IFdFRUsgPyAnZGF5VHlwZUJ0bi1hY3RpdmUnIDogJycpfT5XZWVrPC9SaXBwbGU+XG4gICAgICAgICAgICAgICAgICAgICAgey8qIDxsYWJlbCBvbkNsaWNrPXsoKSA9PiB0aGlzLmNoYW5nZUV4cGVuc2VEYXlGb3JtYXQoV0VFSyl9ICBjbGFzc05hbWU9eydkYiB3aGl0ZSBwYWRUMTAgJyArIChhY3RpdmVUYWIgPT09IFdFRUsgPyAnZGF5VHlwZUJ0bi1hY3RpdmUnIDogJycpfSBodG1sRm9yPVwid2Vla1NlbGVjdG9yXCI+V2VlazwvbGFiZWw+ICovfVxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsndHlwZUJyZHJCdG0gJyArIChhY3RpdmVUYWIgPT09IFdFRUsgPyAndzYwJzogJycpfT48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW4tYmwgdzMzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLnRvZ2dsZVR5cGUoTU9OVEgsIGUudGFyZ2V0LnZhbHVlKX0gaWQ9XCJtb250aFNlbGVjdG9yIGRiIHdoaXRlXCIgdmFsdWU9e3RoaXMuc3RhdGUuc2VsZWN0b3JNTX0+XG4gICAgICAgICAgICAgICAgICAgICAge3JlbmRlck9wdGlvbnMoJ21vbnRoJyl9XG4gICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICA8UmlwcGxlIG9uQ2xpY2tIYW5kbGVyPXsoKSA9PiB0aGlzLmNoYW5nZUV4cGVuc2VEYXlGb3JtYXQoTU9OVEgpfSAgY2xhc3Nlcz17J3BhZEI1IGJyMTAgZGIgd2hpdGUgcGFkVDEwIG10NSAnICsgKGFjdGl2ZVRhYiA9PT0gTU9OVEggPyAnZGF5VHlwZUJ0bi1hY3RpdmUnIDogJycpfT5Nb250aDwvUmlwcGxlPlxuICAgICAgICAgICAgICAgICAgICB7LyogPGxhYmVsIG9uQ2xpY2s9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChNT05USCl9ICBjbGFzc05hbWU9eydkYiB3aGl0ZSBwYWRUMTAgJyArIChhY3RpdmVUYWIgPT09IE1PTlRIID8gJ2RheVR5cGVCdG4tYWN0aXZlJyA6ICcnKX0gaHRtbEZvcj1cIm1vbnRoU2VsZWN0b3JcIj5Nb250aDwvbGFiZWw+ICovfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17J3R5cGVCcmRyQnRtICcgKyAoYWN0aXZlVGFiID09PSBNT05USCA/ICd3NjAnOiAnJyl9PjwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImluLWJsIHczM1wiPlxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy50b2dnbGVUeXBlKFlFQVIsIGUudGFyZ2V0LnZhbHVlKX0gaWQ9XCJ5ZWFyU2VsZWN0b3IgZGIgd2hpdGVcIiB2YWx1ZT17dGhpcy5zdGF0ZS5zZWxlY3RvcllZfT5cbiAgICAgICAgICAgICAgICAgICAge3JlbmRlck9wdGlvbnMoJ3llYXInKX1cbiAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgIDxSaXBwbGUgb25DbGlja0hhbmRsZXI9eygpID0+IHRoaXMuY2hhbmdlRXhwZW5zZURheUZvcm1hdChZRUFSKX0gIGNsYXNzZXM9eydwYWRCNSBicjEwIGRiIHdoaXRlIHBhZFQxMCBtdDUgJyArIChhY3RpdmVUYWIgPT09IFlFQVIgPyAnZGF5VHlwZUJ0bi1hY3RpdmUnIDogJycpfT5ZZWFyPC9SaXBwbGU+XG4gICAgICAgICAgICAgICAgICAgIHsvKiA8bGFiZWwgb25DbGljaz17KCkgPT4gdGhpcy5jaGFuZ2VFeHBlbnNlRGF5Rm9ybWF0KFlFQVIpfSBjbGFzc05hbWU9eydkYiB3aGl0ZSBwYWRUMTAgJyArIChhY3RpdmVUYWIgPT09IFlFQVIgPyAnZGF5VHlwZUJ0bi1hY3RpdmUnIDogJycpfSBodG1sRm9yPVwieWVhclNlbGVjdG9yXCI+WWVhcjwvbGFiZWw+ICovfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17J3R5cGVCcmRyQnRtICcgKyAoYWN0aXZlVGFiID09PSBZRUFSID8gJ3c2MCc6ICcnKX0+PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwZW50SW5jb21lU2VjdGlvblwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbi1ibCBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbCBpbi1ibCBzcGVudEljb25cIiA+XG4gICAgICAgICAgICAgICAgICAgICAgPHN2ZyAgd2lkdGg9XCIyMVwiIGhlaWdodD1cIjE3XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMjQgMTJjMC02LjYyNy01LjM3My0xMi0xMi0xMnMtMTIgNS4zNzMtMTIgMTIgNS4zNzMgMTIgMTIgMTIgMTItNS4zNzMgMTItMTJ6bS0xNyAxaDR2LThoMnY4aDRsLTUgNi01LTZ6XCIvPjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWJIZWFkaW5nIGluLWJsXCI+eydTcGVudCA6IOKCuScgKyAodHlwZW9mKHNwZW50KSAhPT0gJ3VuZGVmaW5lZCc/IHNwZW50OiAnMCcpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW4tYmwgIFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsIGluLWJsIGluY29tZUljb24gXCIgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwiZmwgaW4tYmxcIiB3aWR0aD1cIjIxXCIgaGVpZ2h0PVwiMTdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0wIDEyYzAgNi42MjcgNS4zNzMgMTIgMTIgMTJzMTItNS4zNzMgMTItMTItNS4zNzMtMTItMTItMTItMTIgNS4zNzMtMTIgMTJ6bTE3LTFoLTR2OGgtMnYtOGgtNGw1LTYgNSA2elwiLz48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3ViSGVhZGluZyBpbi1ibFwiPnsnSW5jb21lIDog4oK5JyArIChpbmNvbWVMaXN0ICYmIHR5cGVvZihpbmNvbWVMaXN0LmFtb3VudCkgIT09ICd1bmRlZmluZWQnID8gaW5jb21lTGlzdC5hbW91bnQgOiAnMCcpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3RoaXMuZ2V0VHJhbnNhY3Rpb25DYXJkKCl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7cGxvdERhdGEgJiYgcGxvdERhdGEucGVyRGl2aXNpb25EYXRhICYmICBwbG90RGF0YS5wZXJEaXZpc2lvbkRhdGEubGVuZ3RoID4gMCA/XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3RoZXItaGFsZi1sYW5kaW5nIG10MTBcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHJlZj1cIm90aGVySGFsZkxhbmRpbmdUeHRcIiBjbGFzc05hbWU9XCJ0cmFuc2l0aW9uMF81IFwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0Q2VudGVyIHRyU3VtYXJ5SGVhZGluZyBmYlwiID5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+eydFeHBlbnNlIFRyZW5kcyd9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICB7YWN0aXZlVGFiID09PSBXRUVLID8gIDxHcmFwaCBwbG90RGF0YT17cGxvdERhdGF9IHRhYj17YWN0aXZlVGFifS8+IDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHthY3RpdmVUYWIgPT09IE1PTlRIID8gIDxHcmFwaCBwbG90RGF0YT17cGxvdERhdGF9IHRhYj17YWN0aXZlVGFifS8+IDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIHthY3RpdmVUYWIgPT09IFlFQVIgPyAgPEdyYXBoIHBsb3REYXRhPXtwbG90RGF0YX0gdGFiPXthY3RpdmVUYWJ9Lz4gOiBudWxsfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj4gOiBudWxsfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3Nob3dOZXdFeHBlbnNlID8gXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICA8TmV3RXhwZW5zZSBuZXdFeHBlbnNlPXt0aGlzLm5ld0V4cGVuc2V9Lz5cbiAgICAgICAgICA8L2Rpdj4gOiBudWxsfVxuICAgICAgICB7ZWRpdEV4cGVuc2UgP1xuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8TmV3RXhwZW5zZSBuZXdFeHBlbnNlPXt0aGlzLm5ld0V4cGVuc2V9IGVkaXRUcmFuc2FjdGlvbk9iaj17ZWRpdFRyYW5zYWN0aW9uT2JqfS8+XG4gICAgICAgICAgPC9kaXY+IDogbnVsbH1cbiAgICAgICAge3RoaXMuc3RhdGUuc2hvd1BvcHVwICYmIDxQb3B1cCBjYW5jZWxDYWxsYmFjaz17dGhpcy5jYW5jZWxQb3B1cH0gY29uZmlybUNhbGxiYWNrPXt0aGlzLmNvbmZpcm1Qb3B1cH0vPn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtuZXdfZXhwZW5zZSwgZWRpdF9leHBlbnNlLCBnZXRGcmVxdWVudENhdGVnb3JpZXN9IGZyb20gJy4uL2FwaUNhbGxzL0FwaUNhbGxzJztcbmltcG9ydCB7TU9OVEhTTkFNRVNIT1JULCBUT0RBWSwgWUVTVEVSREFZfSBmcm9tICcuLi9jb25zdGFudHMvY29uc3RhbnRzJztcbmltcG9ydCB7cmVuZGVyT3B0aW9ucywgUmlwcGxlfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5ld0V4cGVuc2UgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnNlbGVjdFR5cGUgPSB0aGlzLnNlbGVjdFR5cGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN1Ym1pdE5ld0V4cGVuc2UgPSB0aGlzLnN1Ym1pdE5ld0V4cGVuc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlbmRlcklubmVyVHJhbnNhY3Rpb25jYXJkID0gdGhpcy5yZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlRnJlcXVlbnRDYXRlZ29yaWVzVGFwID0gdGhpcy5oYW5kbGVGcmVxdWVudENhdGVnb3JpZXNUYXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uQmFja1ByZXNzID0gdGhpcy5vbkJhY2tQcmVzcy5iaW5kKHRoaXMpO1xuICAgIGxldCAgYW1vdW50ID0gJyc7XG4gICAgbGV0ICBjYXRlZ29yeSA9ICcnO1xuICAgIGxldCAgZGF5ID0gJyc7XG4gICAgbGV0ICBtb250aCA9ICcnO1xuICAgIGxldCAgeWVhciA9ICcnO1xuICAgIGxldCBkZXNjcmlwdGlvbiA9ICcnO1xuICAgIGlmIChwcm9wcy5lZGl0VHJhbnNhY3Rpb25PYmopIHtcbiAgICAgIGFtb3VudCA9IHByb3BzLmVkaXRUcmFuc2FjdGlvbk9iai5hbW91bnQ7XG4gICAgICBjYXRlZ29yeSA9IHByb3BzLmVkaXRUcmFuc2FjdGlvbk9iai5jYXRlZ29yeTtcbiAgICAgIGRlc2NyaXB0aW9uID0gcHJvcHMuZWRpdFRyYW5zYWN0aW9uT2JqLmRlc2NyaXB0aW9uO1xuICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShwcm9wcy5lZGl0VHJhbnNhY3Rpb25PYmouZGF0ZSlcbiAgICAgIGRheSA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgICAgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgICB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuXG4gICAgfVxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB0eXBlOiAnZXhwZW5zZScsXG4gICAgICBhbW91bnQ6IGFtb3VudCxcbiAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeSxcbiAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbixcbiAgICAgIGRheTogZGF5LCBcbiAgICAgIG1vbnRoOiBtb250aCxcbiAgICAgIHllYXI6IHllYXIsXG4gICAgICBlcnJvcjoge30sXG4gICAgICBmcmVxdWVudENhdGVnb3JpZXM6IFtdXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgZ2V0RnJlcXVlbnRDYXRlZ29yaWVzKCkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLmRhdGEgJiYgIXJlcy5kYXRhLmVycikge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtmcmVxdWVudENhdGVnb3JpZXM6IHJlcy5kYXRhLmRhdGEuc2xpY2UoMCw1KX0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZXQgRnJlcXVlbnQgQ2F0ZWdvcmllcycpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGhpc3RvcnkucHVzaFN0YXRlKCdNT0RBTCcsICcvbmV3X2V4cGVuc2UnKTtcbiAgICB3aW5kb3cub25wb3BzdGF0ZSA9IHRoaXMub25CYWNrUHJlc3M7XG4gIH1cblxuICBvbkJhY2tQcmVzcyhiYWNrT2JqKSB7XG4gICAgd2luZG93Lm9ucG9wc3RhdGUgPSBudWxsO1xuICAgIHRoaXMucHJvcHMubmV3RXhwZW5zZShmYWxzZSk7XG4gIH1cblxuICByZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBrZXk9XCJjYXRlZ29yeUxvYWRlclwiIGNsYXNzTmFtZT1cInRyYW5zYWN0ZWRDYXJkSW5uZXIgbWg2MlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZElubmVyaGVhZGluZyBkZmxleCBkZmNlbnRlclwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2F0X3BlcmNlbnQgcHJvZ3Jlc3NCYXIgZmwgbTAgbXQxMFwiPjwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzQmFyIGJsIHRleHRDZW50ZXIgXCIgPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBzZWxlY3RUeXBlKHR5cGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHt0eXBlOiB0eXBlfSk7XG4gIH1cblxuICBjaGFuZ2VBbW91bnQodmFsKXtcbiAgICBpZiAodmFsICYmIHRoaXMuc3RhdGUuZXJyb3IuYW1vdW50KSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHthbW91bnQ6IHZhbCwgZXJyb3I6e319KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7YW1vdW50OiB2YWx9KTtcbiAgICB9XG4gIH1cblxuICBjaGFuZ2VDYXRlZ29yeSh2YWwpIHtcbiAgICBpZiAodmFsICYmIHRoaXMuc3RhdGUuZXJyb3IuY2F0ZWdvcnkpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2NhdGVnb3J5OiB2YWwsIGVycm9yOnt9fSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2NhdGVnb3J5OiB2YWx9KTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVEYXRlRXJyb3IoKSB7XG4gICAgY29uc3Qge2RheSwgbW9udGgsIHllYXJ9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAoIShuZXcgRGF0ZShwYXJzZUludCh5ZWFyKSwgcGFyc2VJbnQobW9udGgpLCBwYXJzZUludChkYXkpKSA+IG5ldyBEYXRlKCkpKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtlcnJvcjp7fX0pO1xuICAgIH1cbiAgfVxuXG4gIGdldERhdGVEYXRhKHZhbCkge1xuICAgIGxldCBjdXJyRGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgaWYgKHZhbCA9PT0gWUVTVEVSREFZKSB7XG4gICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGN1cnJEYXRlLnNldERhdGUoY3VyckRhdGUuZ2V0RGF0ZSgpIC0gMSkpO1xuICAgICAgY3VyckRhdGUgPSBkYXRlO1xuICAgIH1cbiAgICByZXR1cm4geyBkYXk6IGN1cnJEYXRlLmdldERhdGUoKSwgbW9udGg6IGN1cnJEYXRlLmdldE1vbnRoKCksIHllYXI6IGN1cnJEYXRlLmdldEZ1bGxZZWFyKCkgfTtcbiAgfVxuXG4gIGNoYW5nZURhdGUodmFsKSB7XG4gICAgaWYgKHZhbCA9PT0gVE9EQVkpIHtcbiAgICAgIGNvbnN0IGRhdGVEYXRhID0gdGhpcy5nZXREYXRlRGF0YShUT0RBWSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdG9kYXlUYXA6dHJ1ZSwgeWVzdGVyZGF5VGFwOiBmYWxzZSwgLi4uZGF0ZURhdGF9LCAoKSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlRGF0ZUVycm9yKCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHZhbCA9PSBZRVNURVJEQVkpIHtcbiAgICAgIGNvbnN0IGRhdGVEYXRhID0gdGhpcy5nZXREYXRlRGF0YShZRVNURVJEQVkpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHRvZGF5VGFwOiBmYWxzZSwgeWVzdGVyZGF5VGFwOiB0cnVlLCAuLi5kYXRlRGF0YX0sICgpID0+IHtcbiAgICAgICAgdGhpcy5yZW1vdmVEYXRlRXJyb3IoKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsuLi52YWx9LCAoKSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlRGF0ZUVycm9yKCk7XG4gICAgICAgIGNvbnN0IGRhdGVEYXRhVG9kYXkgPSB0aGlzLmdldERhdGVEYXRhKFRPREFZKTtcbiAgICAgICAgY29uc3QgZGF0ZURhdGFZZXN0ZXJkYXkgPSB0aGlzLmdldERhdGVEYXRhKFlFU1RFUkRBWSk7XG4gICAgICAgIGNvbnN0IHtkYXksIG1vbnRoLCB5ZWFyfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGlmIChkYXkudG9TdHJpbmcoKSA9PT0gZGF0ZURhdGFUb2RheS5kYXkudG9TdHJpbmcoKSAmJiBtb250aC50b1N0cmluZygpID09PSBkYXRlRGF0YVRvZGF5Lm1vbnRoLnRvU3RyaW5nKCkgJiYgeWVhci50b1N0cmluZygpID09PSBkYXRlRGF0YVRvZGF5LnllYXIudG9TdHJpbmcoKSkge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3RvZGF5VGFwOiB0cnVlLCB5ZXN0ZXJkYXlUYXA6IGZhbHNlfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoZGF5LnRvU3RyaW5nKCkgPT09IGRhdGVEYXRhWWVzdGVyZGF5LmRheS50b1N0cmluZygpICYmIG1vbnRoLnRvU3RyaW5nKCkgPT09IGRhdGVEYXRhWWVzdGVyZGF5Lm1vbnRoLnRvU3RyaW5nKCkgJiYgeWVhci50b1N0cmluZygpID09PSBkYXRlRGF0YVllc3RlcmRheS55ZWFyLnRvU3RyaW5nKCkpIHtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHt0b2RheVRhcDogZmFsc2UsIHllc3RlcmRheVRhcDogdHJ1ZX0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3RvZGF5VGFwOiBmYWxzZSwgeWVzdGVyZGF5VGFwOiBmYWxzZX0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBpc1ZhbGlkRGF0ZSgpIHtcbiAgICBjb25zdCB7ZGF5LCBtb250aCwgeWVhcn0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGRhdGVSZWcgPSAvXlxcZHsxLDJ9JC87XG4gICAgY29uc3QgZGF0ZVJlZ1llYXIgPSAvXlxcZHs0fSQvO1xuICAgIGlmICghZGF0ZVJlZy50ZXN0KGRheSkgfHwgIWRhdGVSZWcudGVzdChtb250aCkgfHwgIWRhdGVSZWdZZWFyLnRlc3QoeWVhcikpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yOiB7ZGF0ZTogJ1BsZWFzZSBwcm92aWRlIGEgVmFsaWQgRGF0ZSEnfX0pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIGlmIChuZXcgRGF0ZShwYXJzZUludCh5ZWFyKSwgcGFyc2VJbnQobW9udGgpLCBwYXJzZUludChkYXkpKSA+IG5ldyBEYXRlKCkpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yOiB7ZGF0ZTogJ1BsZWFzZSBkbyBub3QgUHJvdmlkZSBGdXR1cmUgRGF0ZSEnfX0pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuZGF0ZSA9IG5ldyBEYXRlKHBhcnNlSW50KHllYXIpLCBwYXJzZUludChtb250aCksIHBhcnNlSW50KGRheSkpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHZhbGlkYXRlUGFyYW1zKCkge1xuICAgIHZhciByZWcgPSAvXlsxLTldWzAtOV0qJC87XG4gICAgY29uc3Qge2Ftb3VudCwgY2F0ZWdvcnl9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAoIWFtb3VudCB8fCAhcmVnLnRlc3QoYW1vdW50KSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXJyb3I6IHthbW91bnQ6ICdQbGVhc2UgcHJvdmlkZSBhIFZhbGlkIEFtb3VudCd9fSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghY2F0ZWdvcnkpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yOiB7Y2F0ZWdvcnk6ICdQbGVhc2UgcHJvdmlkZSBhIFZhbGlkIENhdGVnb3J5J319KTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlKCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgc3VibWl0TmV3RXhwZW5zZSgpIHtcbiAgICBjb25zdCB7YW1vdW50LCBkYXksIG1vbnRoLCB5ZWFyLCB0eXBlLCBjYXRlZ29yeSwgZGVzY3JpcHRpb259ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBpc1ZhbGlkYXRpb25TdWNjZXNzID0gdGhpcy52YWxpZGF0ZVBhcmFtcygpO1xuICAgIHRoaXMuc2V0U3RhdGUoe2Rpc2FibGVTdWJtaXQ6IHRydWV9KTtcbiAgICBpZiAoaXNWYWxpZGF0aW9uU3VjY2Vzcykge1xuICAgICAgY29uc3QgZGF0ZSA9IHRoaXMuZGF0ZTtcbiAgICAgIGNvbnN0IG1tID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgY29uc3QgeXkgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICBjb25zdCBmaXJzdERheW9mTW9udGggPSBuZXcgRGF0ZSh5eSwgbW0sIDEpLmdldERheSgpO1xuICAgICAgY29uc3Qgd3cgPSBNYXRoLmNlaWwoKGZpcnN0RGF5b2ZNb250aCArIGRhdGUuZ2V0RGF0ZSgpKSAvIDcpO1xuICAgICAgY29uc3QgZG93ID0gZGF0ZS5nZXREYXkoKTtcbiAgICAgIGNvbnN0IGRkID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICBjb25zdCBwYXJhbXMgPSB7IGFtb3VudCwgdHlwZSwgZGF0ZSwgbW0sIHl5LCB3dywgZG93LCBkZCwgY2F0ZWdvcnksIGRlc2NyaXB0aW9ufTtcbiAgICAgIHBhcmFtcy5jYXRlZ29yeT0gcGFyYW1zLmNhdGVnb3J5LnRyaW0oKS5zdWJzdHJpbmcoMCwxKS50b1VwcGVyQ2FzZSgpICsgcGFyYW1zLmNhdGVnb3J5LnRyaW0oKS5zdWJzdHJpbmcoMSk7XG4gICAgICBpZiAodGhpcy5wcm9wcy5lZGl0VHJhbnNhY3Rpb25PYmopIHtcbiAgICAgICAgcGFyYW1zLmlkID0gdGhpcy5wcm9wcy5lZGl0VHJhbnNhY3Rpb25PYmouaWQ7XG4gICAgICAgIGVkaXRfZXhwZW5zZShwYXJhbXMpLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgICAgICB0aGlzLnByb3BzLm5ld0V4cGVuc2UoZmFsc2UsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gRWRpdCBFeHBlbnNlJyxlcnIpO1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2Rpc2FibGVTdWJtaXQ6IGZhbHNlfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3X2V4cGVuc2UocGFyYW1zKS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgIHRoaXMucHJvcHMubmV3RXhwZW5zZShmYWxzZSwgdHJ1ZSk7XG4gICAgICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGNyZWF0ZSBuZXcgRXhwZW5zZScsZXJyKTtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHtkaXNhYmxlU3VibWl0OiBmYWxzZX0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7ZGlzYWJsZVN1Ym1pdDogZmFsc2V9KTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVGcmVxdWVudENhdGVnb3JpZXNUYXAoZSkge1xuICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3JpcHBsZS0tY29udGFpbmVyJykpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBjYXRlZ29yeTogZS50YXJnZXQucGFyZW50RWxlbWVudC5pbm5lclRleHR9KTtcbiAgICB9XG4gIH1cblxuICByZW5kZXJGcmVxdWVudENhdGVnb3JpZXMoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFwV3JhcHBlclwiIG9uQ2xpY2s9e3RoaXMuaGFuZGxlRnJlcXVlbnRDYXRlZ29yaWVzVGFwfT5cbiAgICAgICAge3RoaXMuc3RhdGUuZnJlcXVlbnRDYXRlZ29yaWVzLm1hcCgoZW50cnkpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPXsndGFwT3B0aW9uTWFyZ2luICcgKyAodGhpcy5zdGF0ZS5jYXRlZ29yeS50b0xvd2VyQ2FzZSgpID09PSBlbnRyeS5jYXRlZ29yeS50b0xvd2VyQ2FzZSgpID8gJ2FjdGl2ZVRhcE9wdGlvbiB0aGVtZUJnJzogJ3RhcE9wdGlvbiB0aGVtZUJyZHInKX0+XG4gICAgICAgICAgICAgIHtlbnRyeS5jYXRlZ29yeX1cbiAgICAgICAgICAgIDwvUmlwcGxlPlxuICAgICAgICAgIClcbiAgICAgICAgfSl9ICAgICAgXG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHt0eXBlLCBhbW91bnQsIGRheSwgbW9udGgsIHllYXIsIGNhdGVnb3J5LCBlcnJvciwgZGlzYWJsZVN1Ym1pdH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5ld0V4cGVuc2VDb250YWluZXIgemkxMFwiIGlkPVwiZXhwZW5zZUNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4cEluY0J0bnMgdGV4dENlbnRlciBtVDI1XCI+XG4gICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPXsnaW4tYmwgbmV3QnRuICcgKyAodHlwZSA9PT0gJ2V4cGVuc2UnID8gJ3NlbGVjdGVkVHlwZScgOiAnJyl9IG9uQ2xpY2tIYW5kbGVyPXsoKSA9PiB0aGlzLnNlbGVjdFR5cGUoJ2V4cGVuc2UnKX0gPkV4cGVuc2U8L1JpcHBsZT5cbiAgICAgICAgICA8UmlwcGxlIGNsYXNzZXM9eydpbi1ibCBuZXdCdG4gJyArICh0eXBlID09PSAnaW5jb21lJyA/ICdzZWxlY3RlZFR5cGUnIDogJycpfSBvbkNsaWNrSGFuZGxlcj17KCkgPT4gdGhpcy5zZWxlY3RUeXBlKCdpbmNvbWUnKX0gPkluY29tZTwvUmlwcGxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbW91bnRJbnB1dCBtVDI1IFwiPlxuICAgICAgICAgIDxzcGFuPuKCuTwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPXsncGFkTDEwIHc3NSAnICsgKGVycm9yLmFtb3VudCA/ICdyZWRCcmRyQnRtJyA6ICcnKX0gYXV0by1jb21wbGV0ZT1cIm9mZlwiIHR5cGU9XCJ0ZXh0XCIgaWQ9XCJuZXdFeHBBbXRcIiBwbGFjZWhvbGRlcj1cIkFtb3VudFwiIG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy5jaGFuZ2VBbW91bnQoZS50YXJnZXQudmFsdWUpfSB2YWx1ZT17YW1vdW50fS8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVxdWlyZWRBc2h0ZXJpeFwiPiAqIDwvc3Bhbj5cbiAgICAgICAgICB7ZXJyb3IuYW1vdW50ID8gPGRpdiBjbGFzc05hbWU9XCJlcnJvckRpdlwiPntlcnJvci5hbW91bnR9PC9kaXY+IDogbnVsbH1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cImNhdGVnb3J5SW5wdXQgbVQyNSBcIj5cbiAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPXsncGFkTDEwIHc3NSAnICsgKGVycm9yLmNhdGVnb3J5ID8gJ3JlZEJyZHJCdG0nIDogJycpfSBhdXRvLWNvbXBsZXRlPVwib2ZmXCIgIHR5cGU9XCJ0ZXh0XCIgaWQ9XCJuZXdDYXRlZ0FtdFwiIHBsYWNlaG9sZGVyPVwiQ2F0ZWdvcnlcIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuY2hhbmdlQ2F0ZWdvcnkoZS50YXJnZXQudmFsdWUpfSB2YWx1ZT17Y2F0ZWdvcnl9Lz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJyZXF1aXJlZEFzaHRlcml4XCI+ICogPC9zcGFuPlxuICAgICAgICAgIHtlcnJvci5jYXRlZ29yeSA/IDxkaXYgY2xhc3NOYW1lPVwiZXJyb3JEaXZcIj57ZXJyb3IuY2F0ZWdvcnl9PC9kaXY+IDogbnVsbH1cbiAgICAgICAgICB7dGhpcy5zdGF0ZS5mcmVxdWVudENhdGVnb3JpZXMubGVuZ3RoID09PSAwID8gdGhpcy5yZW5kZXJJbm5lclRyYW5zYWN0aW9uY2FyZCgpIDogdGhpcy5yZW5kZXJGcmVxdWVudENhdGVnb3JpZXMoKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uSW5wdXRXcmFwIHRjIG0tNSBtVDI1IFwiPlxuICAgICAgICAgIDxpbnB1dCBpZD1cIm5ld0Rlc2NyaXB0aW9uXCIgY2xhc3NOYW1lPVwicGFkTDEwIHc3NVwiIHBsYWNlaG9sZGVyPVwiRGVzY3JpcHRpb25cIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuc2V0U3RhdGUoeyBkZXNjcmlwdGlvbjogZS50YXJnZXQudmFsdWV9KX0gdmFsdWU9e3RoaXMuc3RhdGUuZGVzY3JpcHRpb259Lz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BlbnREYXkgbVQyNSBcIj5cbiAgICAgICAgICA8c2VsZWN0IHJlZj1cImRheVwiIGNsYXNzTmFtZT1cIncyMCBcIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuY2hhbmdlRGF0ZSh7ZGF5OiBlLnRhcmdldC52YWx1ZX0pfSB2YWx1ZT17dGhpcy5zdGF0ZS5kYXl9PntyZW5kZXJPcHRpb25zKCdkYXknKX08L3NlbGVjdD5cbiAgICAgICAgICA8c2VsZWN0IHJlZj1cIm1vbnRoXCIgY2xhc3NOYW1lPVwidzI1IFwiIG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy5jaGFuZ2VEYXRlKHttb250aDogZS50YXJnZXQudmFsdWV9KX0gdmFsdWU9e3RoaXMuc3RhdGUubW9udGh9PntyZW5kZXJPcHRpb25zKCdtb250aCcpfTwvc2VsZWN0PlxuICAgICAgICAgIDxzZWxlY3QgcmVmPVwieWVhclwiIGNsYXNzTmFtZT1cIncyMCBcIiBvbkNoYW5nZT17KGUpID0+IHRoaXMuY2hhbmdlRGF0ZSh7eWVhcjogZS50YXJnZXQudmFsdWV9KX0gdmFsdWU9e3RoaXMuc3RhdGUueWVhcn0+e3JlbmRlck9wdGlvbnMoJ3llYXInKX08L3NlbGVjdD5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhcFdyYXBwZXJcIj5cbiAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz17J3RhcE9wdGlvbk1hcmdpbiAnICsgKHRoaXMuc3RhdGUudG9kYXlUYXAgPyAnYWN0aXZlVGFwT3B0aW9uIHRoZW1lQmcnOiAndGFwT3B0aW9uIHRoZW1lQnJkcicpfSBvbkNsaWNrSGFuZGxlcj17KCkgPT4gdGhpcy5jaGFuZ2VEYXRlKFRPREFZKX0gPlRvZGF5PC9SaXBwbGU+XG4gICAgICAgICAgICA8UmlwcGxlIGNsYXNzZXM9eyd0YXBPcHRpb25NYXJnaW4gJyArICh0aGlzLnN0YXRlLnllc3RlcmRheVRhcCA/ICdhY3RpdmVUYXBPcHRpb24gdGhlbWVCZyc6ICd0YXBPcHRpb24gdGhlbWVCcmRyJyl9IG9uQ2xpY2tIYW5kbGVyPXsoKSA9PiB0aGlzLmNoYW5nZURhdGUoWUVTVEVSREFZKX0gPlllc3RlcmRheTwvUmlwcGxlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHtlcnJvci5kYXRlID8gPGRpdiBjbGFzc05hbWU9XCJtdDEwIGVycm9yRGl2XCI+e2Vycm9yLmRhdGV9PC9kaXY+IDogbnVsbH1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dENlbnRlclwiPlxuICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz17J3N1Ym1pdEJ0biB0aGVtZUJnICcgKyAoZGlzYWJsZVN1Ym1pdCA/ICdkaXNhYmxlQnRuJyA6ICcnKX0gb25DbGlja0hhbmRsZXI9e3RoaXMuc3VibWl0TmV3RXhwZW5zZX0gPkRvbmU8L1JpcHBsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59IiwiXG5jb25zdCBXSURUSCA9IDE4MDtcbmNvbnN0IEhFSUdIVCA9IDExNTtcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0RJVklTSU9OTEVOR1RILCBNQVhMRU5HVEhQRVJUQUIsIE1PTlRIU05BTUVTSE9SVCwgTU9OVEgsIFdFRUssIFlFQVIsIFdFRUtOQU1FU0hPUlR9IGZyb20gJy4uL2NvbnN0YW50cy9jb25zdGFudHMnO1xuaW1wb3J0IHthbW91bnRPbkdyYXBofSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyYXBoIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5nZW5lcmF0ZVNWRyA9IHRoaXMuZ2VuZXJhdGVTVkcuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh3aW5kb3cgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvbnJlc2l6ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICBhbGVydCgnYXR0YWNoRXZlbnQgLSByZXNpemUnKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlclBvaW50cyh4Q29vcmRpbmF0ZXMsIHlDb29yZGluYXRlcywgYW1vdW50T25Db29yZGluYXRlcykge1xuICAgIGNvbnN0IHBvaW50c0VsZW1lbnQgPSBbXTtcbiAgICBjb25zdCB0YWIgPSB0aGlzLnByb3BzLnRhYjtcbiAgICBsZXQgdGV4dEluZGV4ID0gMDtcbiAgICBmb3IobGV0IGluZGV4ID0gMTsgaW5kZXggPCB4Q29vcmRpbmF0ZXMubGVuZ3RoIC0gMTsgaW5kZXgrKykge1xuICAgICAgbGV0IHBvaW50VGV4dCA9ICcnO1xuICAgICAgaWYgKHRhYiA9PT0gV0VFSykge1xuICAgICAgICBwb2ludFRleHQgPSBXRUVLTkFNRVNIT1JUW3RleHRJbmRleCsrXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgfSBlbHNlIGlmICh0YWIgPT09IFlFQVIpIHtcbiAgICAgICAgcG9pbnRUZXh0ID0gTU9OVEhTTkFNRVNIT1JUW3RleHRJbmRleCsrXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgfSBlbHNlIGlmICh0YWIgPT09IE1PTlRIICkge1xuICAgICAgICBpZiAoaW5kZXggJSAyICE9PSAwKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcG9pbnRUZXh0ID0gaW5kZXg7XG4gICAgICB9XG4gICAgICBwb2ludHNFbGVtZW50LnB1c2goXG4gICAgICAgIDxnIGtleT17J2dyb3VwXycgKyBpbmRleH0+XG4gICAgICAgICAgPGE+XG4gICAgICAgICAgPHRleHQgY2xhc3NOYW1lPVwiZmJcIiB4PXt4Q29vcmRpbmF0ZXNbaW5kZXhdfSBmaWxsPVwiIzc1NzU3NVwiIHk9e3lDb29yZGluYXRlc1tpbmRleF0gLSA1fSBmb250U2l6ZT1cIjVcIiB0ZXh0QW5jaG9yPVwibWlkZGxlXCI+e2Ftb3VudE9uR3JhcGgoYW1vdW50T25Db29yZGluYXRlc1tpbmRleF0pfTwvdGV4dD5cbiAgICAgICAgICA8Y2lyY2xlIGN4PXt4Q29vcmRpbmF0ZXNbaW5kZXhdfSBjeT17eUNvb3JkaW5hdGVzW2luZGV4XX0gc3Ryb2tlPVwiIzA3NTdkMFwiIGZpbGw9XCIjMDc1N2QwXCIgcj1cIjAuNVwiIHN0cm9rZVdpZHRoPVwiMVwiPjwvY2lyY2xlPlxuICAgICAgICAgIDx0ZXh0IGNsYXNzTmFtZT1cImZiXCIgeD17eENvb3JkaW5hdGVzW2luZGV4XX0gZmlsbD1cIiM3NTc1NzVcIiB5PXtIRUlHSFQgKyA3fSBmb250U2l6ZT1cIjVcIiB0ZXh0QW5jaG9yPVwibWlkZGxlXCI+e3BvaW50VGV4dH08L3RleHQ+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L2c+XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gcG9pbnRzRWxlbWVudDtcbiAgfVxuXG4gIGdlbmVyYXRlU1ZHKCkge1xuICAgIGNvbnN0IHtwbG90RGF0YSwgdGFifSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeENvb3JkaW5hdGVzID0gW107XG4gICAgY29uc3QgeUNvb3JkaW5hdGVzID0gW107XG4gICAgY29uc3QgYW1vdW50T25Db29yZGluYXRlcyA9IFtdO1xuICAgIGNvbnN0IGxlbmd0aCA9IERJVklTSU9OTEVOR1RIW3RhYl07XG4gICAgY29uc3QgbWF4TGVuZyA9IE1BWExFTkdUSFBFUlRBQlt0YWJdO1xuICAgIGNvbnN0IG1heEFtdCA9IHBsb3REYXRhLm1heEFtb3VudDtcbiAgICBjb25zdCB4Q29vcmRpbmF0ZURpdkxlbmd0aCA9IChXSURUSCAvIGxlbmd0aCk7XG4gICAgbGV0IGxhc3REaXZpc2lvbiA9IHRhYiA9PT0gTU9OVEggPyAwIDogLTE7IC8vIEJlY2F1c2Ugd2Ugc2hvdyBvbmx5IGRhdGVzIGluIG1vbnRoIGRpdmlzaW9uIGJlZ2lucyB3aXRoIDEgc28gbGFzdCBzaHVkIGJlIDAgXG5cbiAgICBsZXQgc3RyID0gJyc7XG5cbiAgICAvKiBUbyBzdGFydCB0aGUgZ3JhcGggYXQgdGhlIExlYXN0IFBvaW50ICovXG4gICAgeENvb3JkaW5hdGVzLnB1c2goMCk7XG4gICAgeUNvb3JkaW5hdGVzLnB1c2goSEVJR0hUKTtcbiAgICBhbW91bnRPbkNvb3JkaW5hdGVzLnB1c2goJycpO1xuICAgIHBsb3REYXRhLnBlckRpdmlzaW9uRGF0YS5mb3JFYWNoKChlbnRyeSkgPT4ge1xuICAgICAgd2hpbGUgKGVudHJ5LmRpdmlzaW9uID4gbGFzdERpdmlzaW9uKSB7XG4gICAgICAgIGNvbnN0IGxhc3RYID0geENvb3JkaW5hdGVzW3hDb29yZGluYXRlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgeENvb3JkaW5hdGVzLnB1c2goKGxhc3RYICsgeENvb3JkaW5hdGVEaXZMZW5ndGgpKTtcbiAgICAgICAgaWYgKGVudHJ5LmRpdmlzaW9uID09PSBsYXN0RGl2aXNpb24gKyAxKSB7XG4gICAgICAgICAgY29uc3QgcGVyY2VudCA9ICgoZW50cnkuYW1vdW50IC8gbWF4QW10KSAqIDEwMCk7XG4gICAgICAgICAgeUNvb3JkaW5hdGVzLnB1c2goSEVJR0hUIC0gKChIRUlHSFQgLyAxMDApICogcGVyY2VudCkpO1xuICAgICAgICAgIGFtb3VudE9uQ29vcmRpbmF0ZXMucHVzaChlbnRyeS5hbW91bnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHlDb29yZGluYXRlcy5wdXNoKEhFSUdIVCk7XG4gICAgICAgICAgYW1vdW50T25Db29yZGluYXRlcy5wdXNoKCcnKTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0RGl2aXNpb24rKztcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyB0byBwdXNoIHZhbHVlcyBmb3IgcmVtYWluaW5nIGRheXNcbiAgICB3aGlsZShtYXhMZW5nID4gbGFzdERpdmlzaW9uKSB7XG4gICAgICBjb25zdCBsYXN0WCA9IHhDb29yZGluYXRlc1t4Q29vcmRpbmF0ZXMubGVuZ3RoIC0gMV07XG4gICAgICB4Q29vcmRpbmF0ZXMucHVzaCgobGFzdFggKyB4Q29vcmRpbmF0ZURpdkxlbmd0aCkpO1xuICAgICAgeUNvb3JkaW5hdGVzLnB1c2goSEVJR0hUKTtcbiAgICAgIGxhc3REaXZpc2lvbisrO1xuICAgICAgYW1vdW50T25Db29yZGluYXRlcy5wdXNoKCcnKTtcbiAgICB9XG4gICAgY29uc3QgbGFzdFggPSB4Q29vcmRpbmF0ZXNbeENvb3JkaW5hdGVzLmxlbmd0aCAtIDFdO1xuICAgIHhDb29yZGluYXRlcy5wdXNoKChsYXN0WCArIHhDb29yZGluYXRlRGl2TGVuZ3RoKSk7XG4gICAgeUNvb3JkaW5hdGVzLnB1c2goSEVJR0hUKTtcbiAgICBhbW91bnRPbkNvb3JkaW5hdGVzLnB1c2goJycpO1xuIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgeENvb3JkaW5hdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzdHIgKz0gJyAnICsgeENvb3JkaW5hdGVzW2ldICsgJywnICsgeUNvb3JkaW5hdGVzW2ldICsgJyAnO1xuICAgIH1cbiAgICBpZiAoc3RyKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIHsvKiA8c3ZnIHZpZXdCb3g9eyctNSAtMTAgJyArIChXSURUSCArIDM1KSArICcgJyArIChIRUlHSFQgKyAxNSl9IHN0eWxlPXt7bWFyZ2luOiAnMTBweCd9fT4gKi99XG4gICAgICAgICAgPHN2ZyB2aWV3Qm94PXsod2luZG93ICYmIHdpbmRvdy5zY3JlZW4ud2lkdGggPiA2MDAgPyAnLTUwIC0xMCAyODUgMjEwJyA6ICgnLTE1IC0xNSAyMjAgMTUwJykpfSBzdHlsZT17e21hcmdpbjogJzEwcHgnfX0+XG4gICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPXtzdHJ9IGNsYXNzTmFtZT1cImdyYXBoUGxvdExpbmVcIiAvPlxuICAgICAgICAgICAge3RoaXMucmVuZGVyUG9pbnRzKHhDb29yZGluYXRlcywgeUNvb3JkaW5hdGVzLCBhbW91bnRPbkNvb3JkaW5hdGVzKX1cbiAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4oXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5nZW5lcmF0ZVNWRygpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUmlwcGxlfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtjYW5jZWxDYWxsYmFjaywgY29uZmlybUNhbGxiYWNrfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9wdXBCYWNrRHJvcFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcHVwQ29udGFpbmVyIHdoaXRlQmdcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcHVwSGVhZGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZiIGZzMTQgcGFkQjEwIHRleHRDZW50ZXJcIj5cbiAgICAgICAgICAgICAgRG8geW91IHdhbnQgdG8gRGVsZXRlIHRoaXMgdHJhbnNhY3Rpb24/XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJcIj5cbiAgICAgICAgICAgICAgPFJpcHBsZSBjbGFzc2VzPVwiaW4tYmwgbmV3QnRuIHdoaXRlIHRoZW1lQmcgaW4tYmwgdHIgbWY1IGZzMTJcIiBvbkNsaWNrSGFuZGxlcj17Y29uZmlybUNhbGxiYWNrfT5Db25maXJtPC9SaXBwbGU+XG4gICAgICAgICAgICAgIDxSaXBwbGUgY2xhc3Nlcz1cImluLWJsIG5ld0J0biB3aGl0ZSB0aGVtZUJnIGluLWJsIHRyIG1mNSBmczEyXCIgb25DbGlja0hhbmRsZXI9e2NhbmNlbENhbGxiYWNrfT5DYW5jZWw8L1JpcHBsZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuIiwidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09MQUJfVVJJLCB7IHVzZU1vbmdvQ2xpZW50OiB0cnVlIH0pLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gRGInKTtcbn0sKGUpPT4ge1xuICAgIGNvbnNvbGUubG9nKGUpO1xufSk7XG5tb2R1bGUuZXhwb3J0cyA9IHttb25nb29zZX07XG4iLCJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IGFwcCBmcm9tICcuLi9zZXJ2ZXInXG5pbXBvcnQgRXhwZW5zZXMgZnJvbSAnLi4vbW9kZWxzL2V4cGVuc2VNb2RlbCc7XG5pbXBvcnQgVXNlcnMgZnJvbSAnLi4vbW9kZWxzL3VzZXJNb2RlbCc7XG5pbXBvcnQgeyBNT05USCwgWUVBUiwgV0VFSyB9IGZyb20gJy4uLy4uL3NyYy9wYWdlcy9jb25zdGFudHMvY29uc3RhbnRzJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0anMnO1xuXG5leHBvcnQgY29uc3Qgc2lnblVwID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgeyB1c2VybmFtZSA9ICcnLCBwYXNzd29yZCA9ICcnLCBlbWFpbElkID0gJycgfSA9IHJlcXVlc3QuYm9keTtcbiAgICB2YXIgdXNlciA9IG5ldyBVc2Vycyh7XG4gICAgICAgIF9pZDogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWQoKSxcbiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICBwYXNzd29yZDogcGFzc3dvcmRcbiAgICB9KTtcbiAgICBVc2Vycy5maW5kKHsgdXNlcm5hbWU6IHVzZXJuYW1lIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogdHJ1ZSwgbXNnOiAnVXNlcm5hbWUgYWxyZWFkeSBFeGlzdHMnIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdXNlci5zYXZlKCkudGhlbigoZG9jKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5zZXNzaW9uLnRva2VuID0gZG9jLnRva2VuO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogZmFsc2UsIG1zZzogJ1NhdmVkIFN1Y2Nlc3NmdWxseScgfSk7XG4gICAgICAgICAgICB9LCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnN0YXR1cyg1MDApLnNlbmQoZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sIChlKSA9PiB7XG4gICAgICAgIHJlc3BvbnNlLnNlbmQoZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IHNpZ25JbiA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGNvbnN0IHsgdXNlcm5hbWUgPSAnJywgcGFzc3dvcmQgPSAnJywgZW1haWxJZCA9ICcnIH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgY29uc29sZS5sb2cocmVxdWVzdC5zZXNzaW9uLnVzZXIpO1xuICAgIFVzZXJzLmZpbmRPbmUoeyB1c2VybmFtZTogdXNlcm5hbWUgfSkudGhlbigoZG9jKSA9PiB7XG4gICAgICAgIGlmIChkb2MpIHtcbiAgICAgICAgICAgIGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBkb2MucGFzc3dvcmQsIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICAgIGlmICghZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3Quc2Vzc2lvbi50b2tlbiA9IGRvYy50b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7IGVycm9yOiBmYWxzZSwgbXNnOiAnc3VjY2VzcycgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7IGVycm9yOiB0cnVlLCBtc2c6ICdJbnZhbGlkIHBhc3N3b3JkJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoeyBlcnJvcjogdHJ1ZSwgbXNnOiAnTm8gdXNlciBhY2NvdW50IGZvdW5kJyB9KTtcbiAgICAgICAgfVxuICAgIH0sIChlKSA9PiB7XG4gICAgICAgIHJlc3BvbnNlLnNlbmQoZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGxvZ291dCA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIHJlcXVlc3Quc2Vzc2lvbi50b2tlbiA9IG51bGw7XG4gICAgcmVzcG9uc2Uuc2VuZCh7IGVycm9yOiBmYWxzZSwgbXNnOiAnc3VjY2VzcycgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlckluZm8gPSAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBpZiAocmVxdWVzdC5zZXNzaW9uLnRva2VuKSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5zZXNzaW9uLnRva2VuO1xuICAgICAgICBVc2Vycy5maW5kT25lKHsgdG9rZW46IHRva2VufSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdXNlcm5hbWUgPSByZXMudXNlcm5hbWU7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7IHVzZXJJbmZvOiB7dXNlcm5hbWU6IHVzZXJuYW1lfSB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7IGVycm9yOiB0cnVlLCBtc2c6ICdObyB1c2VyIGFjY291bnQgZm91bmQnIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAoZSkgPT4ge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChlKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2UgIHtcbiAgICAgICAgcmVzcG9uc2Uuc2VuZCgyMDApLnNlbmQoe2Vycm9yOiB0cnVlfSk7XG4gICAgfVxuICAgXG59O1xuXG5cbmV4cG9ydCBjb25zdCBuZXdFeHBlbnNlID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgbGV0IHsgYW1vdW50LCBkYXRlIH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgY29uc3QgeyAgd3csIGRvdywgbW0sIHl5LCBkZCwgdHlwZSwgY2F0ZWdvcnksIGRlc2NyaXB0aW9uIH0gPSByZXF1ZXN0LmJvZHk7XG4gICAgYW1vdW50ID0gcGFyc2VJbnQoYW1vdW50KTtcbiAgICBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgY29uc3QgbmV3RXhwZW5zZSA9IHsgYW1vdW50LCBjYXRlZ29yeSwgZGF0ZSwgdHlwZSwgd3csIGRvdywgbW0sIHl5LCBkZCwgZGVzY3JpcHRpb259O1xuICAgIHZhciBuZXdFeHBlbnNlSW5zdGFuY2UgPSBuZXcgRXhwZW5zZXMoe1xuICAgICAgICB0b2tlbjogcmVxdWVzdC5zZXNzaW9uLnRva2VuLFxuICAgICAgICAuLi5uZXdFeHBlbnNlXG4gICAgfSk7XG4gICAgbmV3RXhwZW5zZUluc3RhbmNlLnNhdmUoKS50aGVuKChkb2MpID0+IHtcbiAgICAgICAgcmVzcG9uc2Uuc2VuZChkb2MpO1xuICAgIH0sIChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBzYXZlIG5ldyBFeHBlbnNlJywgZXJyKTtcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEV4cGVuc2VEYXRhID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LnNlc3Npb24udG9rZW4gPyByZXF1ZXN0LnNlc3Npb24udG9rZW4gOiAnJztcbiAgICBjb25zdCB7YWN0aXZlRmlsdGVyfSA9IHJlcXVlc3QuYm9keTtcbiAgICBmdW5jdGlvbiBleHBlbnNlRGF0ZVJlc3BvbmRlcihlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uZC5zZW5kKDUwMCkuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGV4cGVuc2VMaXN0ID0ge30sIGluY29tZUxpc3Q9e307XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhkYXRhKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhW2tleV0udHlwZSA9PT0gJ2V4cGVuc2UnKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cGVuc2VMaXN0ID0gZGF0YVtrZXldO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YVtrZXldLnR5cGUgPT09ICdpbmNvbWUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGluY29tZUxpc3QgPSBkYXRhW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgc3BlbnQsIHN0YW5kaW5nO1xuICAgICAgICAgICAgaWYgKGV4cGVuc2VMaXN0ICYmIGV4cGVuc2VMaXN0LnRyYW5zYWN0aW9uTGlzdCkge1xuICAgICAgICAgICAgICAgIGV4cGVuc2VMaXN0LnRyYW5zYWN0aW9uTGlzdC5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50ID0gdHJhbnNhY3Rpb24uYW1vdW50IC8gKGV4cGVuc2VMaXN0LmFtb3VudCAvIDEwMCk7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLnBlcmNlbnQgPSBNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApIC8gMTAwO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHNwZW50ID0gZXhwZW5zZUxpc3QuYW1vdW50O1xuICAgICAgICAgICAgfSBlbHNlICB7XG4gICAgICAgICAgICAgICAgc3BlbnQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluY29tZUxpc3QgJiYgaW5jb21lTGlzdC50cmFuc2FjdGlvbkxpc3QpIHtcbiAgICAgICAgICAgICAgICBpbmNvbWVMaXN0LnRyYW5zYWN0aW9uTGlzdC5tYXAoKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50ID0gdHJhbnNhY3Rpb24uYW1vdW50IC8gKGluY29tZUxpc3QuYW1vdW50IC8gMTAwKTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb24ucGVyY2VudCA9IE1hdGgucm91bmQocGVyY2VudCAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgc3RhbmRpbmcgPSBpbmNvbWVMaXN0LmFtb3VudCAtIHNwZW50O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdGFuZGluZyA9IDAgLSBzcGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgeXksIG1tLCB3dywgZGR9ID0gcmVxdWVzdC5ib2R5XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHsgZGQ6ZGQsIG1tOiBtbSwgeXk6IHl5LCB3dzogd3csIGV4cGVuc2VMaXN0OiBleHBlbnNlTGlzdCwgaW5jb21lTGlzdDogaW5jb21lTGlzdCwgc3BlbnQ6IHNwZW50LCBzdGFuZGluZzogc3RhbmRpbmcgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBRdWVyaWVzIHN0YXJ0XG4gICAgY29uc3QgZ3JvdXAxID0ge1xuICAgICAgICAkZ3JvdXA6IHtcbiAgICAgICAgICAgIF9pZDogeyBjYXRlZ29yeTogJyRjYXRlZ29yeScsIHR5cGU6ICckdHlwZScgfSxcbiAgICAgICAgICAgIHR5cGU6IHsgJyRmaXJzdCc6ICckdHlwZScgfSxcbiAgICAgICAgICAgIGNhdGVnb3J5OiB7ICckZmlyc3QnOiAnJGNhdGVnb3J5JyB9LFxuICAgICAgICAgICAgZGF0ZTogeyAnJGZpcnN0JzogJyRkYXRlJyB9LFxuICAgICAgICAgICAgYW1vdW50OiB7ICRzdW06ICckYW1vdW50JyB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGdyb3VwMiA9IHtcbiAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6IHsgdHlwZTogJyR0eXBlJyB9LFxuICAgICAgICAgICAgYW1vdW50OiB7ICRzdW06ICckYW1vdW50JyB9LFxuICAgICAgICAgICAgdHlwZTogeyAnJGZpcnN0JzogJyR0eXBlJyB9LFxuICAgICAgICAgICAgdHJhbnNhY3Rpb25MaXN0OiB7ICRwdXNoOiB7IGNhdGVnb3J5OiAnJGNhdGVnb3J5JywgYW1vdW50OiAnJGFtb3VudCcsIGRhdGU6ICckZGF0ZScsIGlkOiAnJF9pZCcsIGRlc2NyaXB0aW9uOiAnJGRlc2NyaXB0aW9uJyB9IH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgdW53aW5kID0geyAkdW53aW5kOiAnJHRyYW5zYWN0aW9uTGlzdCcgfTtcbiAgICBsZXQgc29ydCA9IHt9O1xuICAgIGlmIChhY3RpdmVGaWx0ZXIgPT09ICdzcGVudFJhdGUnKSB7XG4gICAgICAgIHNvcnQgPSB7ICRzb3J0OiB7ICd0cmFuc2FjdGlvbkxpc3QuYW1vdW50JzogLTEgfSB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHNvcnQgPSB7ICRzb3J0OiB7ICd0cmFuc2FjdGlvbkxpc3QuZGF0ZSc6IC0xIH0gfTtcbiAgICB9XG4gICAgY29uc3QgcmVHcm91cCA9IHtcbiAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6IHsgdHlwZTogJyR0eXBlJyB9LFxuICAgICAgICAgICAgYW1vdW50OiB7ICckZmlyc3QnOiAnJGFtb3VudCcgfSxcbiAgICAgICAgICAgIHR5cGU6IHsgJyRmaXJzdCc6ICckdHlwZScgfSxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uTGlzdDogeyAkcHVzaDogJyR0cmFuc2FjdGlvbkxpc3QnIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gUXVlcmllcyBlbmRcblxuICAgIGNvbnN0IHsgdGFiLCB3dywgbW0sIHl5LCBkb3cgfSA9IHJlcXVlc3QuYm9keTtcbiAgICBpZiAodGFiID09PSBZRUFSKSB7XG4gICAgICAgIEV4cGVuc2VzLmFnZ3JlZ2F0ZShbXG4gICAgICAgICAgICB7ICRtYXRjaDogeyB0b2tlbjogdG9rZW59IH0sXG4gICAgICAgICAgICB7ICRtYXRjaDogeyB5eTogcGFyc2VJbnQoeXkpIH0gfSxcbiAgICAgICAgICAgIHsgLi4uZ3JvdXAyIH0sXG4gICAgICAgICAgICB7IC4uLnVud2luZCB9LHsgLi4uc29ydCB9LHsgLi4ucmVHcm91cCB9LFxuICAgICAgICAgICAgeyAkcHJvamVjdDogeyBfaWQ6IDAsIGFtb3VudDogMSwgdHlwZTogMSwgdHJhbnNhY3Rpb25MaXN0OiAxIH0gfVxuICAgICAgICBdKS5hbGxvd0Rpc2tVc2UodHJ1ZSkuZXhlYyhleHBlbnNlRGF0ZVJlc3BvbmRlcik7XG4gICAgfSBlbHNlIGlmICh0YWIgPT09IE1PTlRIKSB7XG4gICAgICAgIEV4cGVuc2VzLmFnZ3JlZ2F0ZShbXG4gICAgICAgICAgICB7ICRtYXRjaDogeyB0b2tlbjogdG9rZW4gfSB9LFxuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgeXk6IHBhcnNlSW50KHl5KSB9IH0seyAkbWF0Y2g6IHsgbW06IHBhcnNlSW50KG1tKSB9IH0sXG4gICAgICAgICAgICB7IC4uLmdyb3VwMiB9LFxuICAgICAgICAgICAgeyAuLi51bndpbmQgfSx7IC4uLnNvcnQgfSx7IC4uLnJlR3JvdXAgfSxcbiAgICAgICAgICAgIHsgJHByb2plY3Q6IHsgX2lkOiAwLCBhbW91bnQ6IDEsIHR5cGU6IDEsIHRyYW5zYWN0aW9uTGlzdDogMSB9IH1cbiAgICAgICAgXSkuYWxsb3dEaXNrVXNlKHRydWUpLmV4ZWMoZXhwZW5zZURhdGVSZXNwb25kZXIpO1xuICAgIH0gZWxzZSBpZiAodGFiID09PSBXRUVLKSB7XG4gICAgICAgIEV4cGVuc2VzLmFnZ3JlZ2F0ZShbXG4gICAgICAgICAgICB7ICRtYXRjaDogeyB0b2tlbjogdG9rZW4gfSB9LFxuICAgICAgICAgICAgeyAkbWF0Y2g6IHsgeXk6IHBhcnNlSW50KHl5KSB9IH0seyAkbWF0Y2g6IHsgbW06IHBhcnNlSW50KG1tKSB9IH0seyAkbWF0Y2g6IHsgd3c6IHBhcnNlSW50KHd3KSB9IH0sXG4gICAgICAgICAgICB7IC4uLmdyb3VwMiB9LFxuICAgICAgICAgICAgeyAuLi51bndpbmQgfSx7IC4uLnNvcnQgfSx7IC4uLnJlR3JvdXAgfSxcbiAgICAgICAgICAgIHsgJHByb2plY3Q6IHsgX2lkOiAwLCBhbW91bnQ6IDEsIHR5cGU6IDEsIHRyYW5zYWN0aW9uTGlzdDogMSB9IH1cbiAgICAgICAgXSkuYWxsb3dEaXNrVXNlKHRydWUpLmV4ZWMoZXhwZW5zZURhdGVSZXNwb25kZXIpO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFeHBlbnNlU3VtbWFyeSA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIGZ1bmN0aW9uIGV4ZWNTdW1tYXJ5UXVlcnkoZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlc3BvbmQuc2VuZCg1MDApLnNlbmQoZXJyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGFbMF0gJiYgZGF0YVswXS5wZXJEaXZpc2lvbkRhdGEpIHtcbiAgICAgICAgICAgICAgICBsZXQgbWF4QW1vdW50ID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVI7XG4gICAgICAgICAgICAgICAgZGF0YVswXS5wZXJEaXZpc2lvbkRhdGEuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXhBbW91bnQgPCBlbnRyeS5hbW91bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heEFtb3VudCA9IGVudHJ5LmFtb3VudFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZGF0YVswXS5tYXhBbW91bnQgPSBtYXhBbW91bnQ7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCh7Li4uZGF0YVswXX0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5zZW5kKHt9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LnNlc3Npb24udG9rZW4gPyByZXF1ZXN0LnNlc3Npb24udG9rZW4gOiAnJztcbiAgICBjb25zdCB7dGFiLCB5eSwgbW0sIHd3fSA9IHJlcXVlc3QuYm9keTtcbiAgICBpZiAodGFiID09PSBZRUFSKSB7XG4gICAgICAgIEV4cGVuc2VzLmFnZ3JlZ2F0ZShbXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHRva2VuOiB0b2tlbiB9fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgeXk6IHl5fX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHR5cGU6ICdleHBlbnNlJ319LFxuICAgICAgICAgICAgeyRncm91cDogeyBfaWQ6IHsgbW06ICckbW0nfSwgYW1vdW50OiB7JHN1bTogJyRhbW91bnQnfSwgbW9udGg6IHsnJGZpcnN0JzogJyRtbSd9fX0sXG4gICAgICAgICAgICB7JHNvcnQ6IHsgbW9udGg6IDEgfX0sXG4gICAgICAgICAgICB7JGdyb3VwOiB7X2lkOiBudWxsLCB0b3RhbEFtb3VudDogeyckc3VtJzogJyRhbW91bnQnfSwgcGVyRGl2aXNpb25EYXRhOiB7JHB1c2ggOiB7IGFtb3VudDogJyRhbW91bnQnLCBkaXZpc2lvbjogJyRtb250aCd9fX19LFxuICAgICAgICAgICAgeyRwcm9qZWN0OiB7X2lkOiAwfX1cbiAgICAgICAgICAgIF0pLmFsbG93RGlza1VzZSh0cnVlKS5leGVjKGV4ZWNTdW1tYXJ5UXVlcnkpO1xuICAgIH0gZWxzZSBpZiAodGFiID09PSBNT05USCkge1xuICAgICAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICAgICAgeyRtYXRjaDogeyB0b2tlbjogdG9rZW4gfX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHl5OiB5eX19LFxuICAgICAgICAgICAgeyRtYXRjaDogeyBtbTogbW19fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgdHlwZTogJ2V4cGVuc2UnfX0sXG4gICAgICAgICAgICB7JGdyb3VwOiB7IF9pZDoge2RkOiAnJGRkJ30sIGFtb3VudDogeyckc3VtJzogJyRhbW91bnQnfSwgZGQ6IHsnJGZpcnN0JzogJyRkZCd9IH19LFxuICAgICAgICAgICAgeyRzb3J0OiB7ZGQ6IDF9fSxcbiAgICAgICAgICAgIHskZ3JvdXA6IHtfaWQ6IG51bGwsIHRvdGFsQW1vdW50OiB7JyRzdW0nOiAnJGFtb3VudCd9LCBwZXJEaXZpc2lvbkRhdGE6IHskcHVzaDoge2Ftb3VudDogJyRhbW91bnQnLCBkaXZpc2lvbjogJyRkZCd9fX19LFxuICAgICAgICAgICAgeyRwcm9qZWN0OiB7X2lkOjB9fVxuICAgICAgICAgICAgXSkuYWxsb3dEaXNrVXNlKHRydWUpLmV4ZWMoZXhlY1N1bW1hcnlRdWVyeSk7XG4gICAgfSBlbHNlIGlmICh0YWIgPT09IFdFRUspIHtcbiAgICAgICAgRXhwZW5zZXMuYWdncmVnYXRlKFtcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgdG9rZW46IHRva2VuIH19LFxuICAgICAgICAgICAgeyRtYXRjaDogeyB5eTogeXl9fSxcbiAgICAgICAgICAgIHskbWF0Y2g6IHsgbW06IG1tfX0sXG4gICAgICAgICAgICB7JG1hdGNoOiB7IHd3OiB3d319LFxuICAgICAgICAgICAgeyRtYXRjaDogeyB0eXBlOiAnZXhwZW5zZSd9fSxcbiAgICAgICAgICAgIHskZ3JvdXA6IHsgX2lkOiB7ZG93OiAnJGRvdyd9LCBhbW91bnQ6IHskc3VtOiAnJGFtb3VudCd9LCBkb3c6IHsnJGZpcnN0JzogJyRkb3cnfX19LFxuICAgICAgICAgICAgeyRzb3J0OiB7IGRvdzogMX19LFxuICAgICAgICAgICAgeyRncm91cDogeyBfaWQ6IG51bGwsIHRvdGFsQW1vdW50OiB7JHN1bTogJyRhbW91bnQnfSwgIHBlckRpdmlzaW9uRGF0YTogeyRwdXNoOiB7YW1vdW50OiAnJGFtb3VudCcsIGRpdmlzaW9uOiAnJGRvdyd9fX19LFxuICAgICAgICAgICAgeyRwcm9qZWN0OiB7X2lkOiAwfX1cbiAgICAgICAgICAgIF0pLmFsbG93RGlza1VzZSh0cnVlKS5leGVjKGV4ZWNTdW1tYXJ5UXVlcnkpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUV4cGVuc2VEYXRlID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3Qge2lkfSA9IHJlcXVlc3QuYm9keTtcbiAgICBFeHBlbnNlcy5maW5kT25lQW5kUmVtb3ZlKHtfaWQ6IGlkfSkudGhlbigoZG9jKSA9PiB7XG4gICAgICAgIHJlc3BvbnNlLnNlbmQoZG9jKTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGVkaXRFeHBlbnNlID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgbGV0IHthbW91bnQsIGRhdGV9ID0gcmVxdWVzdC5ib2R5O1xuICAgIGNvbnN0IHsgIGlkLCB3dywgZG93LCBtbSwgeXksIGRkLCB0eXBlLCBjYXRlZ29yeSwgZGVzY3JpcHRpb24gfSA9IHJlcXVlc3QuYm9keTtcbiAgICBhbW91bnQgPSBwYXJzZUludChhbW91bnQpO1xuICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICBjb25zdCBuZXdFeHBlbnNlID0geyBhbW91bnQsIGNhdGVnb3J5LCBkYXRlLCB0eXBlLCB3dywgZG93LCBtbSwgeXksIGRkLCBkZXNjcmlwdGlvbn07XG4gICAgRXhwZW5zZXMuZmluZE9uZUFuZFVwZGF0ZShcbiAgICAgICAge19pZDogaWR9LFxuICAgICAgICB7JHNldDogeydhbW91bnQnOiBhbW91bnQsICdjYXRlZ29yeSc6IGNhdGVnb3J5LCAnZGF0ZSc6IGRhdGUsICd0eXBlJzogdHlwZSwgJ3d3Jzogd3csICdkZCc6IGRkLCAnbW0nOiBtbSwgJ3l5JzogeXksICdkb3cnOiBkb3csICdkZXNjcmlwdGlvbic6IGRlc2NyaXB0aW9uIH0gfSxcbiAgICAgICAge3Vwc2VydDp0cnVlLCByZXR1cm5OZXdEb2N1bWVudCA6IHRydWV9XG4gICAgKS50aGVuKChkb2MpID0+IHtcbiAgICAgICAgcmVzcG9uc2Uuc2VuZCh7ZXJyOiBmYWxzZX0pO1xuICAgIH0pO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0RnJlcXVlbnRDYXRlZ29yaWVzID0gKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3Qge3Rva2VufSA9IHJlcXVlc3Quc2Vzc2lvbjtcbiAgICBFeHBlbnNlcy5hZ2dyZWdhdGUoW1xuICAgICAgICB7JG1hdGNoOiB7dG9rZW46IHRva2VuIH19LFxuICAgICAgICB7JG1hdGNoOiB7dHlwZTogXCJleHBlbnNlXCJ9fSxcbiAgICAgICAgeyRncm91cDoge19pZDogJyRjYXRlZ29yeScsIGNhdGVnb3J5OiB7JyRmaXJzdCc6ICckY2F0ZWdvcnknfSwgY291bnQ6IHskc3VtOiAxfX19LFxuICAgICAgICB7JHNvcnQ6IHsnY291bnQnOiAtMX19LFxuICAgICAgICB7JHByb2plY3Q6IHsnX2lkJzogMCwgY2F0ZWdvcnk6IDEsIGNvdW50OiAxfX1cbiAgICAgICAgXSkuYWxsb3dEaXNrVXNlKHRydWUpLmV4ZWMoZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuc2VuZCh7ZXJyb3I6IHRydWUsIG1zZzogZXJyfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLnNlbmQoe2Vycm9yOiBmYWxzZSwgZGF0YTogWy4uLmRhdGFdfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhwcmVzcy1zZXNzaW9uXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNvbm5lY3QtbW9uZ29cIik7Il0sInNvdXJjZVJvb3QiOiIifQ==