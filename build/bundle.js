!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=7)}([function(e,t){e.exports=require("react")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Ripple=void 0;var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.renderOptions=function(e){var t=[];if("day"===e){t.push(i.default.createElement("option",null,"Day"));for(var n=1;n<32;n++)t.push(i.default.createElement("option",{key:"day_"+n,value:n},n))}else if("month"===e){t.push(i.default.createElement("option",null,"Month"));for(var a=0;a<12;a++)t.push(i.default.createElement("option",{key:"month_"+a,value:a},l.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(i.default.createElement("option",null,"Year"));for(var r=2020;r>2e3;r--)t.push(i.default.createElement("option",{key:"year_"+r,value:r},r))}else if("week"===e){t.push(i.default.createElement("option",null,"Week"));for(var o=1;o<6;o++)t.push(i.default.createElement("option",{key:"week_"+o,value:o},o))}return t},t.formatDate=function(e){var t=void 0;t="object"!==(void 0===e?"undefined":r(e))?new Date(e):e;var n="";return n+=t.getDate()+" "+l.MONTHSNAMESHORT[t.getMonth()]+" "+t.getFullYear()},t.amountOnGraph=function(e){if(""===e)return"";parseFloat(e,10);return e>1e3?Math.round(10*parseFloat(e/1e3,10))/10+"K":e},t.setLoader=function(e){"undefined"!=typeof window&&(window.loader=e)};var o,s=n(0),i=(o=s)&&o.__esModule?o:{default:o},l=n(2);t.Ripple=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),a(t,[{key:"callCleanUp",value:function(e,t){var n;return function(){var a=arguments[0].currentTarget;clearTimeout(n),n=setTimeout(function(){e(a)},t)}}},{key:"showRipple",value:function(e){var t=e.currentTarget,n=t.offsetWidth,a=t.getBoundingClientRect(),r=e.pageX-a.x-n/2,o="top:"+(e.pageY-a.y-n/2)+"px; left: "+r+"px; height: "+n+"px; width: "+n+"px;",s=document.createElement("span");return t.appendChild(s),s.setAttribute("style",o)}},{key:"cleanUp",value:function(e){for(;e.firstChild;)e.removeChild(e.firstChild)}},{key:"render",value:function(){var e=this.props,t=e.children,n=void 0===t?null:t,a=e.classes,r=void 0===a?"":a,o=e.onClickHandler,s=void 0===o?null:o;return i.default.createElement("div",{ref:"targetElement",className:r,onClick:s,ripple:"ripple"},n,i.default.createElement("div",{className:"ripple--container",onMouseDown:this.showRipple,onMouseUp:this.callCleanUp(this.cleanUp,2e3)}))}}]),t}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MAXLENGTHPERTAB={month:31,year:11,week:6},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t.WEEKNAMESHORT=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t.TODAY="today",t.YESTERDAY="yesterday"},function(e,t){e.exports=require("react-router-dom")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getFrequentCategories=t.edit_expense=t.deleteExpenseDate=t.get_expense_summary=t.get_expense_data=t.new_expense=t.logoutUser=t.getUserInfo=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(18),s=(a=o)&&a.__esModule?a:{default:a};t.signup=function(e){return s.default.post("/signup/",r({},e))},t.signin=function(e){return s.default.post("/signin/",r({},e))},t.getUserInfo=function(){return s.default.post("/userinfo/",{})},t.logoutUser=function(){return s.default.post("/logout/",{})},t.new_expense=function(e){return s.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return s.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return s.default.post("/get_expense_summary/",e)},t.deleteExpenseDate=function(e){return s.default.post("/delete_expense_date/",e)},t.edit_expense=function(e){return s.default.post("/edit_expense/",e)},t.getFrequentCategories=function(){return s.default.get("/getFrequentCategories/")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(13);s(n(8));var a=s(n(14)),r=s(n(15));s(n(16));n(26);var o=n(27);function s(e){return e&&e.__esModule?e:{default:e}}n(8);var i=n(28),l=n(29),u=n(30)(i),c=(0,a.default)(),d=process.env.PORT;c.use(l()),c.use(i({secret:"foo",resave:!0,store:new u({url:process.env.MONGOLAB_URI})})),c.use(r.default.urlencoded({extended:!1})),c.use(r.default.json()),c.use(a.default.static("build/public")),c.use("/styles",a.default.static("src/pages/styles")),c.use(a.default.static("src/pages/static")),c.post("/signup",o.signUp),c.post("/signin",o.signIn),c.post("/logout",o.logout),c.post("/userinfo",o.getUserInfo),c.post("/new_expense",o.newExpense),c.post("/get_expense_data",o.getExpenseData),c.post("/get_expense_summary",o.getExpenseSummary),c.post("/delete_expense_date",o.deleteExpenseDate),c.post("/edit_expense",o.editExpense),c.get("/getFrequentCategories",o.getFrequentCategories);c.get("*",function(e,t){t.send('\n        <html>\n            <head>\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="manifest" href="/manifest.json">\n                <link rel="icon" href="/img/budget64.png">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n                <style>\n                    @keyframes rippleLoader {\n                        100% {\n                           width: 400px;\n                           height: 400px;\n                            opacity: 0;\n                          }\n                    }\n                </style>\n            </head>\n            <body>\n                <div id="root"></div>\n                <script>\n                    window.loader = true;\n                    document.getElementById(\'root\').innerHTML =\n                        \'<div>                            </div>                                <div style="position: relative">                                    <div style="color: #fff; background-color: #0757d0; border-radius: 100%; width: 60px; height: 60px; text-align: center; margin: 45vh auto;z-index: 7;position: relative;">                                        <div style="padding: 24px"/>                                            <svg x="0px" y="0px" width="13px" height="13px" viewBox="0 0 401.998 401.998" style={{"enable-background" :"new 0 0 401.998 401.998", "xml:space": "preserve"}}>                                                <g>                                                    <g>                                                        <path d="M326.62,91.076c-1.711-1.713-3.901-2.568-6.563-2.568h-48.82c-3.238-15.793-9.329-29.502-18.274-41.112h66.52   c2.669,0,4.853-0.856,6.57-2.565c1.704-1.712,2.56-3.903,2.56-6.567V9.136c0-2.666-0.855-4.853-2.56-6.567   C324.334,0.859,322.15,0,319.481,0H81.941c-2.666,0-4.853,0.859-6.567,2.568c-1.709,1.714-2.568,3.901-2.568,6.567v37.972   c0,2.474,0.904,4.615,2.712,6.423s3.949,2.712,6.423,2.712h41.399c40.159,0,65.665,10.751,76.513,32.261H81.941   c-2.666,0-4.856,0.855-6.567,2.568c-1.709,1.715-2.568,3.901-2.568,6.567v29.124c0,2.664,0.855,4.854,2.568,6.563   c1.714,1.715,3.905,2.568,6.567,2.568h121.915c-4.188,15.612-13.944,27.506-29.268,35.691   c-15.325,8.186-35.544,12.279-60.67,12.279H81.941c-2.474,0-4.615,0.905-6.423,2.712c-1.809,1.809-2.712,3.951-2.712,6.423v36.263   c0,2.478,0.855,4.571,2.568,6.282c36.543,38.828,83.939,93.165,142.182,163.025c1.715,2.286,4.093,3.426,7.139,3.426h55.672   c4.001,0,6.763-1.708,8.281-5.141c1.903-3.426,1.53-6.662-1.143-9.708c-55.572-68.143-99.258-119.153-131.045-153.032   c32.358-3.806,58.625-14.277,78.802-31.404c20.174-17.129,32.449-39.403,36.83-66.811h47.965c2.662,0,4.853-0.854,6.563-2.568   c1.715-1.709,2.573-3.899,2.573-6.563V97.646C329.193,94.977,328.335,92.79,326.62,91.076z" data-original="#000000"  data-old_color="#F7F4F4" fill="#fff"/>                                                    </g>                                                </g>                                            </svg>                                        </div>                                    </div>                                <span style="transform: translate(-50%, -50%);position: absolute; top: 50%; left: 50%; width: 0; height: 0; background-color: #0757d0; border-radius: 50%; animation: rippleLoader 1.5s ease infinite;"></span>                            </div>                        </div>\';\n                <\/script>\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link rel="stylesheet" type="text/css" href="/styles/notfound.css">\n                <link rel="stylesheet" type="text/css" href="/styles/popup.css">\n                <script src = "/swRegisterer.js"><\/script>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>')}),c.listen(d,function(){console.log("Server Started on Port: ",d)}),t.default=c},function(e,t,n){"use strict"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=c(o),i=c(n(5)),l=n(6),u=n(1);function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.signoutUser=n.signoutUser.bind(n),n.state={username:"",password:"",signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login",load:!window.signedIn},window.signedIn&&n.signoutUser(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){(0,u.setLoader)(!1)}},{key:"signoutUser",value:function(){(0,l.logoutUser)().then(function(e){if(!e.data.error)return window.signedIn=!1,console.log("Signing out success"),void window.location.reload();console.log("unable to signout user"),window.location.reload()}).catch(function(){console.log("unable to signout user"),window.location.reload()})}},{key:"head",value:function(){return s.default.createElement(i.default,null,s.default.createElement("title",null,"Expense Login"))}},{key:"successful",value:function(e){e.data&&!e.data.error?(this.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):this.setState(a({},e.data)),e.data&&e.data.error&&this.resetButtonText()}},{key:"isValid",value:function(){return this.state.username.length<5?(this.setState({error:!0,msg:"Username must be greater than 4 Characters"}),!1):!(this.state.password.length<8)||(this.setState({error:!0,msg:"Password must be greater than 7 Characters"}),!1)}},{key:"resetButtonText",value:function(){this.setState({signinText:"Sign In",signupText:"Sign Up",continueText:"Continue with Test Login"})}},{key:"signUp",value:function(){var e=this;this.isValid()&&(this.setState({signupText:"Signing up..."}),(0,l.signup)({username:this.state.username,password:this.state.password}).then(function(t){e.successful(t)}).catch(function(t){e.resetButtonText(),console.log("Failed to Signup")}))}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(e||this.isValid())&&(0,l.signin)({username:a,password:r}).then(function(e){t.successful(e)}).catch(function(e){t.resetButtonText(),console.log("Failed to SignIn",e)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.signinText,a=t.signupText,r=t.continueText;return s.default.createElement("div",null,this.head(),this.state.load&&s.default.createElement("div",null,s.default.createElement("div",{className:""},s.default.createElement("div",{className:"fieldsDiv padB10"},s.default.createElement("div",{className:"username"},s.default.createElement("input",{className:"loginInput ",id:"loginUsername",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),s.default.createElement("div",{className:"password padT10"},s.default.createElement("input",{className:"loginInput ",id:"loginPwd",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),this.state.error&&s.default.createElement("div",{id:"errorDiv",className:"textCenter red "},this.state.msg),s.default.createElement("div",{className:"textCenter "},s.default.createElement("div",{className:"new di"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns themeBg",onClickHandler:function(){return e.signIn(!1)}},s.default.createElement("span",{className:"padLR5"},n))),s.default.createElement("div",{className:"new di"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns themeBg",onClickHandler:this.signUp},s.default.createElement("span",{className:"padLR5"},a)))),s.default.createElement("div",{className:"textCenter "},s.default.createElement("div",{className:"new"},s.default.createElement(u.Ripple,{classes:"in-bl newBtn loginBtns testLogin themeBg",onClickHandler:function(){return e.signIn(!0)}},s.default.createElement("span",{className:"padLR5"},r)))))))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(4));r(n(11));function r(e){return e&&e.__esModule?e:{default:e}}var o=a.default.model("Expenses",{token:{type:String,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},description:{type:String,required:!1,trim:!0},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(4)),r=(o(n(10)),o(n(12)));function o(e){return e&&e.__esModule?e:{default:e}}var s=new a.default.Schema({_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},token:{type:String,required:!1},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});function i(e,t){r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt for Token",n):r.default.hash(e._id.toHexString()+e.password.toString(),a,function(n,a){n?console.log("Unable to generate Hash for Token",n):(e.token=a,t())})})}s.pre("save",function(e){var t=this;t.isModified("password")?r.default.genSalt(10,function(n,a){n?console.log("Unable to generate Salt",n):r.default.hash(t.password,a,function(n,a){n?console.log("Unable to generate Hash",n):(t.password=a,i(t,e))})}):i(t,e)});var l=a.default.model("Users",s);t.default=l},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=i(r),s=(n(17),i(n(9)),i(n(19)));n(3);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return o.default.createElement(s.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("react-router")},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(0)),r=n(3),o=l(n(9)),s=l(n(20)),i=l(n(21));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(o.default,e)}}),a.default.createElement(r.Route,{path:"/",exact:!0,render:function(e){return a.default.createElement(o.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(i.default,e)}}),a.default.createElement(r.Route,{path:"*",render:function(e){return a.default.createElement(s.default,e)}}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=l(r),s=l(n(5)),i=n(3);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return o.default.createElement(s.default,null,o.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){return o.default.createElement("div",null,this.head(),o.default.createElement("div",{className:"notfoundContainer"},o.default.createElement("h5",{className:"notFoundText fb textCenter"},"Sorry, this page does not exist!")),o.default.createElement("div",null,o.default.createElement("ul",{className:"notfoundUL textCenter"},o.default.createElement("li",null,o.default.createElement("div",{className:"blueBtn"},o.default.createElement(i.NavLink,{to:"/login",className:"white"}," Login "))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=h(o),i=(h(n(5)),h(n(22))),l=n(6),u=n(2),c=h(n(23)),d=n(1),f=h(n(24)),p=n(3),m=h(n(25));function h(e){return e&&e.__esModule?e:{default:e}}function g(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.cancelPopup=n.cancelPopup.bind(n),n.confirmPopup=n.confirmPopup.bind(n),n.deleteExpense=n.deleteExpense.bind(n),n.editExpense=n.editExpense.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,viewMore:!1,weekData:{},monthData:{},yearData:{},selectorWW:"",selectorMM:"",selectorYY:"",activeFilter:"spentRate"},n.viewedMore={},n.userInfo(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary(),this.updateTogglerContent()}},{key:"updateTogglerContent",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"currentTabData",value:function(){var e=this.state.activeTab;return e===u.WEEK?this.state.weekData:e===u.MONTH?this.state.monthData:e===u.YEAR?this.state.yearData:void 0}},{key:"findCurrentDataProp",value:function(){var e=this.state.activeTab;return e===u.WEEK?"weekData":e===u.MONTH?"monthData":e===u.YEAR?"yearData":void 0}},{key:"getParams",value:function(e){var t=this.state,n=t.activeTab,a=t.activeFilter,r=this.currentTabData(),o=r.dd,s=r.mm,i=r.yy,l=r.ww,u=i&&void 0!==s&&o?new Date(i,s,o):new Date,c=u.getMonth(),d=u.getDay(),f=u.getDate(),p=u.getFullYear();if(!l){var m=new Date(p,c,1).getDay();l=Math.ceil((m+u.getDate())/7)}return this.state.selectorWW&&void 0!==this.state.selectorMM&&this.state.selectorYY&&(p=parseInt(this.state.selectorYY),c=parseInt(this.state.selectorMM),l=parseInt(this.state.selectorWW)),{tab:n,mm:c,dow:d,ww:l,yy:p,dd:f,activeFilter:a}}},{key:"userInfo",value:function(){var e=this;(0,l.getUserInfo)().then(function(t){t.data&&t.data.userInfo?e.setState({userInfo:t.data.userInfo}):e.navigateToSignIn()}).catch(function(){e.navigateToSignIn()})}},{key:"getExpenseSummary",value:function(e,t){var n=this,r=this.getParams(t),o=this.findCurrentDataProp();(0,l.get_expense_summary)(r).then(function(e){var t;n.setState((g(t={},o,a({},n.state[o],{plotData:a({},e.data)})),g(t,"getExpenseSummarySuccess",!0),t))},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(e,t){var n=this,r=this.getParams(t),o=this.findCurrentDataProp();(0,l.get_expense_data)(r).then(function(e){var t,r=e.data,s=r.expenseList,i=r.incomeList,l=r.standing,u=r.spent,c=r.ww,d=r.yy,f=r.mm,p=r.dd;n.setState((g(t={},o,a({},n.state[o],{expenseList:s,incomeList:i,standing:l,spent:u,ww:c,yy:d,mm:f,dd:p})),g(t,"selectorMM",f),g(t,"selectorWW",c),g(t,"selectorYY",d),g(t,"getExpenseDataSuccess",!0),t))},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.otherHalfLandingTxt&&(this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")),this.refs.addBtnContainer.classList.toggle("dn")}},{key:"navigateToSignIn",value:function(){this.state.userInfo?(0,l.logoutUser)().then(function(){window.location.href="/login"}):window.location.href="/login"}},{key:"renderLeftMenuBar",value:function(){var e=this.state.userInfo;return s.default.createElement("div",{className:"menuBar"},s.default.createElement("div",{ref:"popup",className:"popup zi9 ",onClick:this.leftMenuClick},s.default.createElement("div",{className:"sideBar in-bl fl"},s.default.createElement(d.Ripple,{key:"logout",classes:"menu-option",onClickHandler:this.navigateToSignIn},e?"Logout":"Sign In"),s.default.createElement(d.Ripple,{key:"aboutMe",classes:"menu-option",onClickHandler:function(){return window.open("https://dhilipkmr.github.io/materializedResume/")}},"About Me"))))}},{key:"newExpense",value:function(e,t,n){var a=this;t?this.setState({showNewExpense:e,editExpense:void 0!==n?n:this.state.editExpense,weekData:{},monthData:{},yearData:{}},function(){a.getExpense(t),a.getExpenseSummary(t)}):this.setState({showNewExpense:e,editExpense:n})}},{key:"cancelPopup",value:function(){this.setState({showPopup:!1})}},{key:"confirmPopup",value:function(){var e=this;this.setState({showPopup:!1}),(0,l.deleteExpenseDate)({id:this.state.deleteTransactionObj.id}).then(function(t){t&&(e.getExpense(!0,!0),e.getExpenseSummary(!0,!0))})}},{key:"editExpense",value:function(e){this.setState({editExpense:!0,editTransactionObj:e})}},{key:"deleteExpense",value:function(e){this.setState({showPopup:!0,deleteTransactionObj:e})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(e){var t=this;if(!e){for(var n=[],r=0;r<2;r++)n.push(s.default.createElement("div",{key:"transaction_type_"+r},s.default.createElement("div",{className:"transactedCardInner"},s.default.createElement("div",{className:"cardInnerheading"},s.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),s.default.createElement("div",{className:"progressBar bl textCenter mt30"})),s.default.createElement("div",{className:"cardBrdrBtm"})));return n}return this.currentTabData().expenseList.transactionList.map(function(e,n){return t.state.viewMore||t.viewedMore[t.state.activeTab]||!t.state.viewMore&&n<2?(t.state.viewMore&&(t.viewedMore[t.state.activeTab]=!0),s.default.createElement("div",{key:"transaction_type_"+n},s.default.createElement("div",{className:"transactedCardInner"},s.default.createElement("div",{className:"cardInnerheading"},s.default.createElement("div",{className:"cat w33 in-bl tl"},e.category),s.default.createElement("div",{className:"cat w33 in-bl tc"},(0,d.formatDate)(e.date)),s.default.createElement("div",{className:"cat w33 in-bl tr"},s.default.createElement("svg",{onClick:function(){return t.editExpense(a({},e))},height:"15px",viewBox:"0 -1 450 400",width:"15px"},s.default.createElement("path",{d:"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0"})))),s.default.createElement("div",{className:"progressBar bl textCenter marginT25"},s.default.createElement("div",{className:"filled",style:{maxWidth:e.percent+"%"}})),s.default.createElement("div",null,s.default.createElement("div",{className:"padR15 padL10 cat w33 in-bl tl"},"₹"+e.amount),s.default.createElement("div",{className:"cat w33 in-bl tc"},e.percent+" %"),s.default.createElement("div",{className:"padR7 cat w33 in-bl tr"},s.default.createElement("svg",{onClick:function(){return t.deleteExpense({id:e.id})},fill:"#a20404",height:"15px",viewBox:"-40 0 450 400",width:"15px"},s.default.createElement("path",{d:"m232.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m114.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}),s.default.createElement("path",{d:"m28.398438 127.121094v246.378906c0 14.5625 5.339843 28.238281 14.667968 38.050781 9.285156 9.839844 22.207032 15.425781 35.730469 15.449219h189.203125c13.527344-.023438 26.449219-5.609375 35.730469-15.449219 9.328125-9.8125 14.667969-23.488281 14.667969-38.050781v-246.378906c18.542968-4.921875 30.558593-22.835938 28.078124-41.863282-2.484374-19.023437-18.691406-33.253906-37.878906-33.257812h-51.199218v-12.5c.058593-10.511719-4.097657-20.605469-11.539063-28.03125-7.441406-7.421875-17.550781-11.5546875-28.0625-11.46875h-88.796875c-10.511719-.0859375-20.621094 4.046875-28.0625 11.46875-7.441406 7.425781-11.597656 17.519531-11.539062 28.03125v12.5h-51.199219c-19.1875.003906-35.394531 14.234375-37.878907 33.257812-2.480468 19.027344 9.535157 36.941407 28.078126 41.863282zm239.601562 279.878906h-189.203125c-17.097656 0-30.398437-14.6875-30.398437-33.5v-245.5h250v245.5c0 18.8125-13.300782 33.5-30.398438 33.5zm-158.601562-367.5c-.066407-5.207031 1.980468-10.21875 5.675781-13.894531 3.691406-3.675781 8.714843-5.695313 13.925781-5.605469h88.796875c5.210937-.089844 10.234375 1.929688 13.925781 5.605469 3.695313 3.671875 5.742188 8.6875 5.675782 13.894531v12.5h-128zm-71.199219 32.5h270.398437c9.941406 0 18 8.058594 18 18s-8.058594 18-18 18h-270.398437c-9.941407 0-18-8.058594-18-18s8.058593-18 18-18zm0 0"}),s.default.createElement("path",{d:"m173.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0"}))))),s.default.createElement("div",{className:"cardBrdrBtm"}))):null})}},{key:"changeFilter",value:function(e){var t=this;"date"===e?this.setState({activeFilter:"date"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)}):"spentRate"===e&&this.setState({activeFilter:"spentRate"},function(){t.getExpense(!0,!0),t.getExpenseSummary(!0,!0)})}},{key:"getTransactionCard",value:function(){var e=this,t=this.currentTabData(),n=this.state,a=n.activeTab,r=n.viewMore,o=void 0!==r&&r,i=n.userInfo,l=n.activeFilter,c=t.expenseList;return s.default.createElement("div",null,s.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(o?"showAllTransaction":"")},s.default.createElement("div",{className:"textCenter mt5"},s.default.createElement(d.Ripple,{classes:"in-bl sortType sortTypeLeft fs14 "+("spentRate"===l?" leftActiveRight ":""),onClickHandler:function(){return e.changeFilter("spentRate")}},"Spent Rate "),s.default.createElement(d.Ripple,{classes:"in-bl sortType sortTypeRight fs14 "+("spentRate"===l?" leftActiveLeft ":"rightActiveRight"),onClickHandler:function(){return e.changeFilter("date")}}," Date ")),s.default.createElement("div",null,s.default.createElement("div",{className:"transactScroller"},void 0!==c&&0===Object.keys(c).length?s.default.createElement("div",{className:"textCenter padT20 mh10p"},s.default.createElement("div",{className:"tu ",onClick:function(){return e.newExpense(!0)}},"Add Transaction "),!i&&s.default.createElement("div",{className:"padT10 padB20"},s.default.createElement("a",{href:"/login"},s.default.createElement("span",null,"Sign In"))," for Past Transactions")):s.default.createElement("div",null,a===u.WEEK?this.renderInnerTransactioncard(c):null,a===u.MONTH?this.renderInnerTransactioncard(c):null,a===u.YEAR?this.renderInnerTransactioncard(c):null)))),s.default.createElement(d.Ripple,{classes:"viewMoreArrow",onClickHandler:function(){return e.clickViewMore()}},s.default.createElement("svg",{className:o?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),s.default.createElement("div",{className:"posRel"},s.default.createElement("div",{ref:"addBtnContainer",className:"addBtnContainer "},s.default.createElement("div",{className:""},s.default.createElement(d.Ripple,{classes:"in-bl addBtn themeBg",onClickHandler:function(){return e.newExpense(!0)}}," + ")))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"getTogglerHeader",value:function(){var e=this.state.activeTab,t=this.currentTabData(),n=t.mm,a=t.yy,r=t.ww,o="",s=!1,i=!1;return e===u.MONTH?(o=void 0!==n?u.MONTHSNAME[n]:"----",s=0===n,i=11===n):e===u.WEEK?(o=r?"Week "+r:"----",s=1===r,i=5===r):(o=a||"----",i=2018===a),{togglerHeader:o,isPrevDisabled:s,isNextDisabled:i}}},{key:"toggleType",value:function(e,t){var n=this,r={};e===u.WEEK?r={selectorWW:t}:e===u.MONTH?r={selectorMM:t}:e===u.YEAR&&(r={selectorYY:t}),this.setState(a({},r),function(){n.getExpense(!0,!0),n.getExpenseSummary(!0,!0)})}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=(t.viewMore,t.editExpense),o=t.editTransactionObj,l=t.getExpenseSummarySuccess,h=t.getExpenseDataSuccess,g=this.currentTabData(),v=g.standing,y=void 0===v?void 0:v,E=g.spent,b=void 0===E?void 0:E,w=g.plotData,x=void 0===w?void 0:w,_=g.incomeList,T=void 0===_?void 0:_,k=this.getTogglerHeader();k.togglerHeader,k.isPrevDisabled,k.isNextDisabled;return l&&h?((0,d.setLoader)(!1),s.default.createElement("div",{className:""},s.default.createElement(p.Prompt,{when:!a,message:function(){return"Going back will Log you out."}}),s.default.createElement("div",null,s.default.createElement("div",{ref:"backDrop",className:"transition1a zi9 "+(a||r?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),s.default.createElement("div",{ref:"mainContent",className:"mainContent "},s.default.createElement("div",{className:""},s.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 first-half-landing"},s.default.createElement("div",{className:"standing"},s.default.createElement(d.Ripple,{classes:"left-menu-container",onClickHandler:this.leftMenuClick},s.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),s.default.createElement("div",{className:"heading"},s.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),s.default.createElement("div",null,s.default.createElement("span",{className:"f18"},"₹ "),s.default.createElement("span",{className:"standingAmt"},void 0!==y?y:"0")),s.default.createElement("div",{className:"textCenter"},s.default.createElement("div",null,s.default.createElement("span",{className:"f11"},this.getCurrentDate())))),s.default.createElement("div",{className:"expenseDaysBtn w85 m10a"},s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("div",null,s.default.createElement("select",{key:"weekSelect",onChange:function(t){return e.toggleType(u.WEEK,t.target.value)},id:"weekSelector db white",value:this.state.selectorWW},(0,d.renderOptions)("week")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.WEEK)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.WEEK?"dayTypeBtn-active":"")},"Week"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.WEEK?"w60":"")}))),s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("select",{key:"monthSelect",onChange:function(t){return e.toggleType(u.MONTH,t.target.value)},id:"monthSelector db white",value:this.state.selectorMM},(0,d.renderOptions)("month")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.MONTH)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.MONTH?"dayTypeBtn-active":"")},"Month"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.MONTH?"w60":"")})),s.default.createElement("div",{className:"in-bl w33"},s.default.createElement("select",{key:"yearSelect",onChange:function(t){return e.toggleType(u.YEAR,t.target.value)},id:"yearSelector db white",value:this.state.selectorYY},(0,d.renderOptions)("year")),s.default.createElement(d.Ripple,{onClickHandler:function(){return e.changeExpenseDayFormat(u.YEAR)},classes:"padB5 br10 db white padT10 mt5 "+(n===u.YEAR?"dayTypeBtn-active":"")},"Year"),s.default.createElement("div",{className:"typeBrdrBtm "+(n===u.YEAR?"w60":"")}))),s.default.createElement("div",{className:"spentIncomeSection"},s.default.createElement("div",{className:"in-bl "},s.default.createElement("div",{className:"fl in-bl spentIcon"},s.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==b?b:"0"))),s.default.createElement("div",{className:"in-bl  "},s.default.createElement("div",{className:"fl in-bl incomeIcon "},s.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(T&&void 0!==T.amount?T.amount:"0")))),this.getTransactionCard())),x&&x.perDivisionData&&x.perDivisionData.length>0?s.default.createElement("div",{className:"other-half-landing mt10"},s.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},s.default.createElement("div",{className:"textCenter trSumaryHeading fb"},s.default.createElement("span",null,"Expense Trends")),n===u.WEEK?s.default.createElement(c.default,{plotData:x,tab:n}):null,n===u.MONTH?s.default.createElement(c.default,{plotData:x,tab:n}):null,n===u.YEAR?s.default.createElement(c.default,{plotData:x,tab:n}):null)):null)),a?s.default.createElement("div",null,s.default.createElement(i.default,{newExpense:this.newExpense})):null,r?s.default.createElement("div",null,s.default.createElement(i.default,{newExpense:this.newExpense,editTransactionObj:o})):null,this.state.showPopup&&s.default.createElement(f.default,{cancelCallback:this.cancelPopup,confirmCallback:this.confirmPopup}))):((0,d.setLoader)(!0),s.default.createElement(m.default,null))}}]),t}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),i=(a=s)&&a.__esModule?a:{default:a},l=n(6),u=n(2),c=n(1);var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n),n.renderInnerTransactioncard=n.renderInnerTransactioncard.bind(n),n.handleFrequentCategoriesTap=n.handleFrequentCategoriesTap.bind(n),n.onBackPress=n.onBackPress.bind(n);var a="",r="",o="",s="",i="",l="";if(e.editTransactionObj){a=e.editTransactionObj.amount,r=e.editTransactionObj.category,l=e.editTransactionObj.description;var u=new Date(e.editTransactionObj.date);o=u.getDate(),s=u.getMonth(),i=u.getFullYear()}return n.state={type:"expense",amount:a,category:r,description:l,day:o,month:s,year:i,error:{},frequentCategories:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),o(t,[{key:"componentDidMount",value:function(){var e=this;(0,l.getFrequentCategories)().then(function(t){t.data&&!t.data.err?e.setState({frequentCategories:t.data.data.slice(0,5)}):console.log("Unable to get Frequent Categories")}),history.pushState("MODAL","/new_expense"),window.onpopstate=this.onBackPress}},{key:"onBackPress",value:function(e){window.onpopstate=null,this.props.newExpense(!1)}},{key:"renderInnerTransactioncard",value:function(){return i.default.createElement("div",null,i.default.createElement("div",{key:"categoryLoader",className:"transactedCardInner mh62"},i.default.createElement("div",{className:"cardInnerheading dflex dfcenter"},i.default.createElement("span",{className:"cat_percent progressBar fl m0 mt10"})),i.default.createElement("div",{className:"progressBar bl textCenter "})))}},{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){e&&this.state.error.amount?this.setState({amount:e,error:{}}):this.setState({amount:e})}},{key:"changeCategory",value:function(e){e&&this.state.error.category?this.setState({category:e,error:{}}):this.setState({category:e})}},{key:"removeDateError",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year;new Date(parseInt(a),parseInt(n),parseInt(t))>new Date||this.setState({error:{}})}},{key:"getDateData",value:function(e){var t=new Date;if(e===u.YESTERDAY){var n=new Date(t.setDate(t.getDate()-1));t=n}return{day:t.getDate(),month:t.getMonth(),year:t.getFullYear()}}},{key:"changeDate",value:function(e){var t=this;if(e===u.TODAY){var n=this.getDateData(u.TODAY);this.setState(r({todayTap:!0,yesterdayTap:!1},n),function(){t.removeDateError()})}else if(e==u.YESTERDAY){var a=this.getDateData(u.YESTERDAY);this.setState(r({todayTap:!1,yesterdayTap:!0},a),function(){t.removeDateError()})}else this.setState(r({},e),function(){t.removeDateError();var e=t.getDateData(u.TODAY),n=t.getDateData(u.YESTERDAY),a=t.state,r=a.day,o=a.month,s=a.year;r.toString()===e.day.toString()&&o.toString()===e.month.toString()&&s.toString()===e.year.toString()?t.setState({todayTap:!0,yesterdayTap:!1}):r.toString()===n.day.toString()&&o.toString()===n.month.toString()&&s.toString()===n.year.toString()?t.setState({todayTap:!1,yesterdayTap:!0}):t.setState({todayTap:!1,yesterdayTap:!1})})}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return r.test(t)&&r.test(n)&&/^\d{4}$/.test(a)?new Date(parseInt(a),parseInt(n),parseInt(t))>new Date?(this.setState({error:{date:"Please do not Provide Future Date!"}}),!1):(this.date=new Date(parseInt(a),parseInt(n),parseInt(t)),!0):(this.setState({error:{date:"Please provide a Valid Date!"}}),!1)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return t&&/^[1-9][0-9]*$/.test(t)?n?!!this.isValidDate():(this.setState({error:{category:"Please provide a Valid Category"}}),!1):(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category,o=t.description,s=this.validateParams();if(this.setState({disableSubmit:!0}),s){var i=this.date,u=i.getMonth(),c=i.getFullYear(),d=new Date(c,u,1).getDay(),f=Math.ceil((d+i.getDate())/7),p=i.getDay(),m=i.getDate(),h={amount:n,type:a,date:i,mm:u,yy:c,ww:f,dow:p,dd:m,category:r,description:o};h.category=h.category.trim().substring(0,1).toUpperCase()+h.category.trim().substring(1),this.props.editTransactionObj?(h.id=this.props.editTransactionObj.id,(0,l.edit_expense)(h).then(function(t){e.props.newExpense(!1,!0,!1)},function(t){console.log("Unable to Edit Expense",t),e.setState({disableSubmit:!1})})):(0,l.new_expense)(h).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.setState({disableSubmit:!1})})}else this.setState({disableSubmit:!1})}},{key:"handleFrequentCategoriesTap",value:function(e){e.target.classList.contains("ripple--container")&&this.setState({category:e.target.parentElement.innerText})}},{key:"renderFrequentCategories",value:function(){var e=this;return i.default.createElement("div",{className:"tapWrapper",onClick:this.handleFrequentCategoriesTap},this.state.frequentCategories.map(function(t){return i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(e.state.category.toLowerCase()===t.category.toLowerCase()?"activeTapOption themeBg":"tapOption themeBrdr")},t.category)}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),o=t.error,s=t.disableSubmit;return i.default.createElement("div",{className:"newExpenseContainer zi10",id:"expenseContainer"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement(c.Ripple,{classes:"in-bl newBtn "+("expense"===n?"selectedType":""),onClickHandler:function(){return e.selectType("expense")}},"Expense"),i.default.createElement(c.Ripple,{classes:"in-bl newBtn "+("income"===n?"selectedType":""),onClickHandler:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{className:"padL10 w75 "+(o.amount?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newExpAmt",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),i.default.createElement("span",{className:"requiredAshterix"}," * "),o.amount?i.default.createElement("div",{className:"errorDiv"},o.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{className:"padL10 w75 "+(o.category?"redBrdrBtm":""),"auto-complete":"off",type:"text",id:"newCategAmt",placeholder:"Category",onChange:function(t){return e.changeCategory(t.target.value)},value:r}),i.default.createElement("span",{className:"requiredAshterix"}," * "),o.category?i.default.createElement("div",{className:"errorDiv"},o.category):null,0===this.state.frequentCategories.length?this.renderInnerTransactioncard():this.renderFrequentCategories()),i.default.createElement("div",{className:"descriptionInputWrap tc m-5 mT25 "},i.default.createElement("input",{id:"newDescription",className:"padL10 w75",placeholder:"Description",onChange:function(t){return e.setState({description:t.target.value})},value:this.state.description})),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",className:"w20 ",onChange:function(t){return e.changeDate({day:t.target.value})},value:this.state.day},(0,c.renderOptions)("day")),i.default.createElement("select",{ref:"month",className:"w25 ",onChange:function(t){return e.changeDate({month:t.target.value})},value:this.state.month},(0,c.renderOptions)("month")),i.default.createElement("select",{ref:"year",className:"w20 ",onChange:function(t){return e.changeDate({year:t.target.value})},value:this.state.year},(0,c.renderOptions)("year")),i.default.createElement("div",{className:"tapWrapper"},i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(this.state.todayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClickHandler:function(){return e.changeDate(u.TODAY)}},"Today"),i.default.createElement(c.Ripple,{classes:"tapOptionMargin "+(this.state.yesterdayTap?"activeTapOption themeBg":"tapOption themeBrdr"),onClickHandler:function(){return e.changeDate(u.YESTERDAY)}},"Yesterday")),o.date?i.default.createElement("div",{className:"mt10 errorDiv"},o.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement(c.Ripple,{classes:"submitBtn themeBg "+(s?"disableBtn":""),onClickHandler:this.submitNewExpense},"Done")))}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=(a=o)&&a.__esModule?a:{default:a},i=n(2),l=n(1);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"renderPoints",value:function(e,t,n){for(var a=[],r=this.props.tab,o=0,u=1;u<e.length-1;u++){var c="";if(r===i.WEEK)c=i.WEEKNAMESHORT[o++].toUpperCase();else if(r===i.YEAR)c=i.MONTHSNAMESHORT[o++].toUpperCase();else if(r===i.MONTH){if(u%2!=0)continue;c=u}a.push(s.default.createElement("g",{key:"group_"+u},s.default.createElement("a",null,s.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:t[u]-5,fontSize:"5",textAnchor:"middle"},(0,l.amountOnGraph)(n[u])),s.default.createElement("circle",{cx:e[u],cy:t[u],stroke:"#0757d0",fill:"#0757d0",r:"0.5",strokeWidth:"1"}),s.default.createElement("text",{className:"fb",x:e[u],fill:"#757575",y:122,fontSize:"5",textAnchor:"middle"},c))))}return a}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],o=[],l=i.DIVISIONLENGTH[n],u=i.MAXLENGTHPERTAB[n],c=t.maxAmount,d=180/l,f=n===i.MONTH?0:-1,p="";for(a.push(0),r.push(115),o.push(""),t.perDivisionData.forEach(function(e){for(;e.division>f;){var t=a[a.length-1];if(a.push(t+d),e.division===f+1){var n=e.amount/c*100;r.push(115-1.15*n),o.push(e.amount)}else r.push(115),o.push("");f++}});u>f;){var m=a[a.length-1];a.push(m+d),r.push(115),f++,o.push("")}var h=a[a.length-1];a.push(h+d),r.push(115),o.push("");for(var g=0;g<a.length;g++)p+=" "+a[g]+","+r[g]+" ";return p?s.default.createElement("div",null,s.default.createElement("svg",{viewBox:window&&window.screen.width>600?"-50 -10 285 210":"-15 -15 220 150",style:{margin:"10px"}},s.default.createElement("polyline",{points:p,className:"graphPlotLine"}),this.renderPoints(a,r,o))):null}},{key:"render",value:function(){return s.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=(a=o)&&a.__esModule?a:{default:a},i=n(1);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props,t=e.cancelCallback,n=e.confirmCallback;return s.default.createElement("div",{className:"popupBackDrop"},s.default.createElement("div",{className:"popupContainer whiteBg"},s.default.createElement("div",{className:"popupHeader"},s.default.createElement("div",{className:"fb fs14 padB10 textCenter"},"Do you want to Delete this transaction?"),s.default.createElement("div",{className:"tr"},s.default.createElement(i.Ripple,{classes:"in-bl newBtn white themeBg in-bl tr mf5 fs12",onClickHandler:n},"Confirm"),s.default.createElement(i.Ripple,{classes:"in-bl newBtn white themeBg in-bl tr mf5 fs12",onClickHandler:t},"Cancel")))))}}]),t}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(0),s=(a=o)&&a.__esModule?a:{default:a};var i={position:"relative"},l={color:"#fff",backgroundColor:"#0757d0",borderRadius:"100%",width:"60px",height:"60px",textAlign:"center",margin:"45vh auto",zIndex:"7",position:"relative"},u={padding:"24px"},c={position:"absolute",border:"0.01px solid #0757d0",top:"50%",left:"50%",width:"0px",height:"0px",backgroundColor:"#0757d0",borderRadius:"50%",animation:"rippleLoader 1.5s ease infinite",transform:"translate(-50%, -50%)"};t.default=function(){var e=document.createElement("style");return e.innerHTML="@keyframes rippleLoader{\n    100% {\n      opacity: 0;\n      width: 400px;\n      height: 400px;\n    }\n  }",document.head.appendChild(e),s.default.createElement("div",null,s.default.createElement("div",{style:r({},i)},s.default.createElement("div",{style:r({},l)},s.default.createElement("div",{style:r({},u)},s.default.createElement("svg",{x:"0px",y:"0px",width:"13px",height:"13px",viewBox:"0 0 401.998 401.998",style:{enableBackground:"new 0 0 401.998 401.998","xml:space":"preserve"}},s.default.createElement("g",null,s.default.createElement("g",null,s.default.createElement("path",{d:"M326.62,91.076c-1.711-1.713-3.901-2.568-6.563-2.568h-48.82c-3.238-15.793-9.329-29.502-18.274-41.112h66.52   c2.669,0,4.853-0.856,6.57-2.565c1.704-1.712,2.56-3.903,2.56-6.567V9.136c0-2.666-0.855-4.853-2.56-6.567   C324.334,0.859,322.15,0,319.481,0H81.941c-2.666,0-4.853,0.859-6.567,2.568c-1.709,1.714-2.568,3.901-2.568,6.567v37.972   c0,2.474,0.904,4.615,2.712,6.423s3.949,2.712,6.423,2.712h41.399c40.159,0,65.665,10.751,76.513,32.261H81.941   c-2.666,0-4.856,0.855-6.567,2.568c-1.709,1.715-2.568,3.901-2.568,6.567v29.124c0,2.664,0.855,4.854,2.568,6.563   c1.714,1.715,3.905,2.568,6.567,2.568h121.915c-4.188,15.612-13.944,27.506-29.268,35.691   c-15.325,8.186-35.544,12.279-60.67,12.279H81.941c-2.474,0-4.615,0.905-6.423,2.712c-1.809,1.809-2.712,3.951-2.712,6.423v36.263   c0,2.478,0.855,4.571,2.568,6.282c36.543,38.828,83.939,93.165,142.182,163.025c1.715,2.286,4.093,3.426,7.139,3.426h55.672   c4.001,0,6.763-1.708,8.281-5.141c1.903-3.426,1.53-6.662-1.143-9.708c-55.572-68.143-99.258-119.153-131.045-153.032   c32.358-3.806,58.625-14.277,78.802-31.404c20.174-17.129,32.449-39.403,36.83-66.811h47.965c2.662,0,4.853-0.854,6.563-2.568   c1.715-1.709,2.573-3.899,2.573-6.563V97.646C329.193,94.977,328.335,92.79,326.62,91.076z","data-original":"#000000","data-old_color":"#F7F4F4",fill:"#fff"})))))),s.default.createElement("span",{style:r({},c)})))}},function(e,t,n){"use strict";var a=n(4);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getFrequentCategories=t.editExpense=t.deleteExpenseDate=t.getExpenseSummary=t.getExpenseData=t.newExpense=t.getUserInfo=t.logout=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=u(n(4)),o=(u(n(7)),u(n(10))),s=u(n(11)),i=n(2),l=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}function c(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}t.signUp=function(e,t){var n=e.body,a=n.username,o=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=(n.emailId,new s.default({_id:r.default.Types.ObjectId(),username:o,password:l}));s.default.find({username:o}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):u.save().then(function(n){e.session.token=n.token,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,o=n.password,i=void 0===o?"":o;n.emailId;console.log(e.session.user),s.default.findOne({username:r}).then(function(n){n?l.default.compare(i,n.password,function(a){a?t.send({error:!0,msg:"Invalid password"}):(e.session.token=n.token,t.send({error:!1,msg:"success"}))}):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.logout=function(e,t){e.session.token=null,t.send({error:!1,msg:"success"})},t.getUserInfo=function(e,t){if(e.session.token){var n=e.session.token;s.default.findOne({token:n}).then(function(e){if(e){var n=e.username;t.send({userInfo:{username:n}})}else t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})}else t.send(200).send({error:!0})},t.newExpense=function(e,t){var n=e.body,r=n.amount,s=n.date,i=e.body,l=i.ww,u=i.dow,c=i.mm,d=i.yy,f=i.dd,p=i.type,m=i.category,h=i.description,g={amount:r=parseInt(r),category:m,date:s=new Date(s),type:p,ww:l,dow:u,mm:c,yy:d,dd:f,description:h};new o.default(a({token:e.session.token},g)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session.token?e.session.token:"";function r(n,a){if(n)respond.send(500).send(n);else{var r={},o={};Object.keys(a).map(function(e){"expense"===a[e].type?r=a[e]:"income"===a[e].type&&(o=a[e])});var s=void 0,i=void 0;r&&r.transactionList?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),s=r.amount):s=0,o&&o.transactionList?(o.transactionList.map(function(e){var t=e.amount/(o.amount/100);e.percent=Math.round(100*t)/100}),i=o.amount-s):i=0-s;var l=e.body,u=l.yy,c=l.mm,d=l.ww,f=l.dd;t.send({dd:f,mm:c,yy:u,ww:d,expenseList:r,incomeList:o,spent:s,standing:i})}}var s={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount",date:"$date",id:"$_id",description:"$description"}}}},l={$unwind:"$transactionList"},u={};u="spentRate"===e.body.activeFilter?{$sort:{"transactionList.amount":-1}}:{$sort:{"transactionList.date":-1}};var c={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},d=e.body,f=d.tab,p=d.ww,m=d.mm,h=d.yy;d.dow;f===i.YEAR?o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.MONTH?o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r):f===i.WEEK&&o.default.aggregate([{$match:{token:n}},{$match:{yy:parseInt(h)}},{$match:{mm:parseInt(m)}},{$match:{ww:parseInt(p)}},a({},s),a({},l),a({},u),a({},c),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(r)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var r=e.session.token?e.session.token:"",s=e.body,l=s.tab,u=s.yy,c=s.mm,d=s.ww;l===i.YEAR?o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.MONTH?o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):l===i.WEEK&&o.default.aggregate([{$match:{token:r}},{$match:{yy:u}},{$match:{mm:c}},{$match:{ww:d}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)},t.deleteExpenseDate=function(e,t){var n=e.body.id;o.default.findOneAndRemove({_id:n}).then(function(e){t.send(e)})},t.editExpense=function(e,t){var n=e.body,a=n.amount,r=n.date,s=e.body,i=s.id,l=s.ww,u=s.dow,c=s.mm,d=s.yy,f=s.dd,p=s.type,m=s.category,h=s.description;a=parseInt(a),r=new Date(r);o.default.findOneAndUpdate({_id:i},{$set:{amount:a,category:m,date:r,type:p,ww:l,dd:f,mm:c,yy:d,dow:u,description:h}},{upsert:!0,returnNewDocument:!0}).then(function(e){t.send({err:!1})})},t.getFrequentCategories=function(e,t){var n=e.session.token;o.default.aggregate([{$match:{token:n}},{$match:{type:"expense"}},{$group:{_id:"$category",category:{$first:"$category"},count:{$sum:1}}},{$sort:{count:-1}},{$project:{_id:0,category:1,count:1}}]).allowDiskUse(!0).exec(function(e,n){e?t.status(200).send({error:!0,msg:e}):t.status(200).send({error:!1,data:[].concat(c(n))})})}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("compression")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,