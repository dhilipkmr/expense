!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=6)}([function(e,t){e.exports=require("react")},function(e,t){e.exports=require("react-helmet")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MONTH="month",t.YEAR="year",t.WEEK="week",t.DIVISIONLENGTH={month:31,year:12,week:7},t.MONTHSNAME=["January","February","March","April","May","June","July","August","September","October","November","December"],t.MONTHSNAMESHORT=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},function(e,t){e.exports=require("mongoose")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.get_expense_summary=t.get_expense_data=t.new_expense=t.signin=t.signup=void 0;var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=n(17),s=(a=o)&&a.__esModule?a:{default:a};t.signup=function(e){return s.default.post("/signup/",r({},e))},t.signin=function(e){return s.default.post("/signin/",r({},e))},t.new_expense=function(e){return s.default.post("/new_expense/",r({},e))},t.get_expense_data=function(e){return s.default.post("/get_expense_data/",e)},t.get_expense_summary=function(e){return s.default.post("/get_expense_summary/",e)}},function(e,t){e.exports=require("react-router-dom")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(12);d(n(7));var a=d(n(13)),r=d(n(14)),o=d(n(0)),s=d(n(15)),i=n(8),l=d(n(1)),u=d(n(16)),c=(d(n(24)),n(25));function d(e){return e&&e.__esModule?e:{default:e}}n(7);var f=n(26),p=n(27)(f),m=(0,a.default)(),y=process.env.PORT;m.use(f({secret:"foo",resave:!0,store:new p({url:process.env.MONGOLAB_URI})})),m.use(r.default.urlencoded({extended:!1})),m.use(r.default.json()),m.use(a.default.static("build/public")),m.use("/styles",a.default.static("src/pages/styles")),m.use(a.default.static("src/pages/static")),m.post("/signup",c.signUp),m.post("/signin",c.signIn),m.post("/new_expense",c.newExpense),m.post("/get_expense_data",c.getExpenseData),m.post("/get_expense_summary",c.getExpenseSummary);m.get("*",function(e,t){var n=function(e){var t=l.default.renderStatic();return"\n        <html>\n            <head>\n                "+t.meta.toString()+"\n                "+t.title.toString()+'\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css">\n                <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js">\n                <link rel="stylesheet" type="text/css" href="/styles/common.css">\n                <link rel="stylesheet" type="text/css" href="/styles/home.css">\n                <link rel="stylesheet" type="text/css" href="/styles/login.css">\n                <link rel="stylesheet" type="text/css" href="/styles/new_expense.css">\n                <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">\n            </head>\n            <body>\n                <div id="root">'+e+'</div>\n                <script src="client_bundle.js"><\/script>\n            </body>\n        </html>'}(s.default.renderToString(o.default.createElement(i.StaticRouter,null,o.default.createElement(u.default,{location:e.url,context:{}}))));t.send(n)}),m.listen(y,function(){console.log("proces.env",y,process.env.MONGOLAB_URI),console.log("Server Started on Port: ",y)}),t.default=m},function(e,t,n){"use strict";process.env.MONGOLAB_URI="mongodb://dhilipk13:dhilipk13@ds247310.mlab.com:47310/expense"},function(e,t){e.exports=require("react-router")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=l(r),s=l(n(1)),i=n(4);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n.signUp=n.signUp.bind(n),n.signIn=n.signIn.bind(n),n.state={username:"",password:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return o.default.createElement(s.default,null,o.default.createElement("title",null,"Expense Login"))}},{key:"signUp",value:function(){(0,i.signup)({username:this.state.username,password:this.state.password})}},{key:"signIn",value:function(e){var t=this,n=this.state,a=n.username,r=n.password;e&&(a="dhilip",r="dhilipdhilip"),(0,i.signin)({username:a,password:r}).then(function(e){e.data&&!e.data.error?(console.log(t),t.props.history.push("/home",{}),"undefined"!=typeof window&&(window.signedIn=!0)):console.log("Failed to SignIn",e)}).catch(function(e){console.log("Failed to SignIn",e)})}},{key:"render",value:function(){var e=this;return o.default.createElement("div",null,this.head(),o.default.createElement("div",null,o.default.createElement("div",{className:"loginContainer white"},o.default.createElement("div",{className:"fieldsDiv"},o.default.createElement("div",{className:"username"},o.default.createElement("input",{className:"whiteBrdrBtm",placeholder:"Username",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},type:"text"})),o.default.createElement("div",{className:"password padT10"},o.default.createElement("input",{className:"whiteBrdrBtm",placeholder:"Password",value:this.state.password,onChange:function(t){return e.setState({password:t.target.value})},type:"password"}))),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn",onClick:this.signIn},"Sign In")),o.default.createElement("div",{className:"new di"},o.default.createElement("span",{className:"newBtn",onClick:this.signUp},"Sign Up"))),o.default.createElement("div",{className:"textCenter padT20"},o.default.createElement("div",{className:"new"},o.default.createElement("span",{className:"newBtn",onClick:function(){return e.signIn(!0)}},"Continue with Test Login"))))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(3));r(n(11));function r(e){return e&&e.__esModule?e:{default:e}}var o=a.default.model("Expenses",{user_id:{type:a.default.Schema.Types.ObjectId,ref:"Users"},amount:{type:Number,required:!0,trim:!0},category:{type:String,required:!0,trim:!0,default:"others"},type:{type:String,required:!1,trim:!0,default:"expense"},date:{type:Date,required:!1,trim:!0,default:Date.now()},dd:{type:Number,required:!1,trim:!0},ww:{type:Number,required:!1,trim:!0},dow:{type:Number,required:!1,trim:!0},mm:{type:Number,required:!1,trim:!0},yy:{type:Number,required:!1,trim:!0}});t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(3));r(n(10));function r(e){return e&&e.__esModule?e:{default:e}}var o=a.default.model("Users",{_id:a.default.Schema.Types.ObjectId,username:{type:String,required:!0,minlength:5,trim:!0},emailId:{type:String,required:!1,trim:!0},password:{type:String,required:!0,minlength:8,trim:!0},expense:[{type:a.default.Schema.Types.ObjectId,ref:"Expenses"}]});t.default=o},function(e,t){e.exports=require("babel-polyfill")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("react-dom/server")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=i(r),s=(n(8),i(n(9)),i(n(18)));n(5);function i(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"render",value:function(){return o.default.createElement(s.default,null)}}]),t}();t.default=l},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(0)),r=n(5),o=(i(n(19)),i(n(9))),s=(i(n(20)),i(n(21)));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(){return a.default.createElement(r.Switch,null,a.default.createElement(r.Route,{path:"/login",exact:!0,render:function(e){return a.default.createElement(o.default,e)}}),a.default.createElement(r.Route,{path:"/home",exact:!0,render:function(e){return a.default.createElement(s.default,e)}}))}},function(e,t){e.exports=require("react-dom")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(0),o=l(r),s=l(n(1)),i=n(5);function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.head=n.head.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),a(t,[{key:"head",value:function(){return o.default.createElement(s.default,null,o.default.createElement("title",null,"Page Not Found"))}},{key:"render",value:function(){var e=this;return o.default.createElement("div",null,this.head(),o.default.createElement("div",null,o.default.createElement("h1",null,"Sorry, the page you are expecting does not exist!")),o.default.createElement("div",null,o.default.createElement("ul",null,o.default.createElement("li",{onClick:function(){return e.props.history.goBack()}},"Back"),o.default.createElement("li",null,o.default.createElement(i.NavLink,{to:"/"}," Home ")),o.default.createElement("li",null,o.default.createElement(i.NavLink,{to:"/login"}," Login ")))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=d(o),i=(d(n(1)),d(n(22))),l=n(4),u=n(2),c=d(n(23));function d(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leftMenuClick=n.leftMenuClick.bind(n),n.newExpense=n.newExpense.bind(n),n.navigateToSignIn=n.navigateToSignIn.bind(n),n.state={activeTab:u.MONTH,showNewExpense:!1,standing:void 0,spent:void 0,expenseList:{},incomeList:{},viewMore:!1},n.viewedMore={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.getExpense(),this.getExpenseSummary()}},{key:"getExpenseSummary",value:function(){var e=this,t={tab:this.state.activeTab,mm:(new Date).getMonth(),dow:(new Date).getDay(),ww:Math.ceil((new Date).getDate()/7),yy:(new Date).getFullYear()};(0,l.get_expense_summary)(t).then(function(t){e.setState({plotData:a({},t.data)})},function(e){console.log("Unable to Get Expense Summary Details",e)})}},{key:"getExpense",value:function(){var e=this,t={tab:this.state.activeTab,mm:(new Date).getMonth(),dow:(new Date).getDay(),ww:Math.ceil((new Date).getDate()/7),yy:(new Date).getFullYear()};(0,l.get_expense_data)(t).then(function(t){var n=t.data,a=n.expenseList,r=n.incomeList,o=n.standing,s=n.spent;e.setState({expenseList:a,incomeList:r,standing:o,spent:s})},function(e){console.log("Unable to Get Expense Details",e)})}},{key:"changeExpenseDayFormat",value:function(e){var t=this;this.setState({activeTab:e,viewMore:!1},function(){t.getExpense(),t.getExpenseSummary()})}},{key:"leftMenuClick",value:function(){this.refs.backDrop.classList.toggle("backDrop"),this.refs.popup.classList.toggle("right0"),this.refs.firstHalfLandingTxt.classList.toggle("scale90"),this.refs.otherHalfLandingTxt.classList.toggle("scale90")}},{key:"navigateToSignIn",value:function(){console.log(this.props),this.props.history.push("/login")}},{key:"renderLeftMenuBar",value:function(){return s.default.createElement("div",{className:"menuBar"},s.default.createElement("div",{ref:"popup",className:"popup zi2 ",onClick:this.leftMenuClick},s.default.createElement("div",{className:"sideBar in-bl fl"},s.default.createElement("div",{className:"menu-option"},"Settings"),s.default.createElement("div",{className:"menu-option",onClick:this.navigateToSignIn},"Sign In"),s.default.createElement("div",{className:"menu-option"},"About Me"))))}},{key:"newExpense",value:function(e,t){var n=this;this.setState({showNewExpense:e},function(){t&&(n.getExpense(),n.getExpenseSummary())})}},{key:"clickViewMore",value:function(){this.setState({viewMore:!this.state.viewMore}),this.refs.transactedCard.scrollTop=0}},{key:"renderInnerTransactioncard",value:function(){var e=this;return this.state.expenseList.transactionList.map(function(t,n){return e.state.viewMore||e.viewedMore[e.state.activeTab]||!e.state.viewMore&&n<2?(e.state.viewMore&&(e.viewedMore[e.state.activeTab]=!0),s.default.createElement("div",{key:"transaction_type_"+n,className:"transactedCardInner"},s.default.createElement("div",{className:"cardInnerheading"},s.default.createElement("span",{className:"cat_name"},t.category),s.default.createElement("span",{className:"cat_percent "},t.percent+" %")),s.default.createElement("div",{className:"progressBar bl textCenter marginT25"},s.default.createElement("div",{className:"filled",style:{maxWidth:t.percent+"%"}})))):null})}},{key:"getTransactionCard",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.viewMore,r=void 0!==a&&a,o=this.state.expenseList&&Object.keys(this.state.expenseList).length>0;return s.default.createElement("div",null,s.default.createElement("div",{ref:"transactedCard",className:"transactedCard transition1a "+(r?"showAllTransaction":"")},o?s.default.createElement("div",null,s.default.createElement("div",{className:"transactScroller"},n===u.WEEK?this.renderInnerTransactioncard():null,n===u.MONTH?this.renderInnerTransactioncard():null,n===u.YEAR?this.renderInnerTransactioncard():null)):s.default.createElement("div",{className:"textCenter padT20 mh10p"},s.default.createElement("div",null,"No Transactions added "),"undefined"!=typeof window&&!window.signedIn&&s.default.createElement("div",{className:"padT10 padB20"},s.default.createElement("a",{href:"/login"},s.default.createElement("span",null,"Sign In"))," for Past Transactions"))),s.default.createElement("div",{className:"viewMoreArrow",onClick:function(){return e.clickViewMore()}},s.default.createElement("svg",{className:r?"rotateViewMore":"",ref:"svgViewMore",xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}))),s.default.createElement("div",{className:"newContainer "+(o?"":"padT10")},s.default.createElement("div",{className:"new"},s.default.createElement("span",{className:"newBtn",onClick:function(){return e.newExpense(!0)}}," + add New"))))}},{key:"getCurrentDate",value:function(){var e=new Date,t=u.MONTHSNAME[e.getMonth()];return e.getDate()+" "+t+" "+e.getFullYear()}},{key:"render",value:function(){var e=this,t=this.state,n=t.activeTab,a=t.showNewExpense,r=t.standing,o=void 0===r?void 0:r,l=t.spent,d=void 0===l?void 0:l,f=(t.viewMore,t.plotData),p=t.incomeList;return s.default.createElement("div",{className:""},s.default.createElement("div",null,s.default.createElement("div",{ref:"backDrop",className:"transition2a zi1 "+(a?"backDrop":""),onClick:function(){return e.newExpense(!1)}}),this.renderLeftMenuBar(),s.default.createElement("div",{ref:"mainContent",className:"mainContent"},s.default.createElement("div",{className:""},s.default.createElement("div",{class:"first-half-landing"}),s.default.createElement("div",{ref:"firstHalfLandingTxt",className:"transition0_5 "},s.default.createElement("div",{className:"standing"},s.default.createElement("span",{className:"left-menu-container",onClick:this.leftMenuClick},s.default.createElement("img",{className:"left-menu",src:"/img/menu.svg"}))),s.default.createElement("div",{className:"heading"},s.default.createElement("div",{className:"fb f11"},"CURRENT BALANCE"),s.default.createElement("div",null,s.default.createElement("span",{className:"f18"},"₹ "),s.default.createElement("span",{className:"standingAmt"},void 0!==o?o:"0")),s.default.createElement("div",{className:"textCenter"},s.default.createElement("div",null,s.default.createElement("span",{className:"f11"},this.getCurrentDate())))),s.default.createElement("div",{className:"expenseDaysBtn"},s.default.createElement("span",{className:"dayTypeBtn "+(n===u.WEEK?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.WEEK)}},"Week"),s.default.createElement("span",{className:"dayTypeBtn "+(n===u.MONTH?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.MONTH)}},"Month"),s.default.createElement("span",{className:"dayTypeBtn "+(n===u.YEAR?"dayTypeBtn-active":""),onClick:function(){e.changeExpenseDayFormat(u.YEAR)}},"Year")),s.default.createElement("div",{className:"spentIncomeSection"},s.default.createElement("div",{className:"in-bl "},s.default.createElement("div",{className:"fl in-bl spentIcon"},s.default.createElement("svg",{width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M24 12c0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12 12-5.373 12-12zm-17 1h4v-8h2v8h4l-5 6-5-6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Spent : ₹"+(void 0!==d?d:"0"))),s.default.createElement("div",{className:"in-bl  "},s.default.createElement("div",{className:"fl in-bl incomeIcon "},s.default.createElement("svg",{className:"fl in-bl",width:"21",height:"17",viewBox:"0 0 24 24"},s.default.createElement("path",{d:"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12-5.373-12-12-12-12 5.373-12 12zm17-1h-4v8h-2v-8h-4l5-6 5 6z"}))),s.default.createElement("div",{className:"subHeading in-bl"},"Income : ₹"+(p&&void 0!==p.amount?p.amount:"0")))),this.getTransactionCard())),f&&f.perDivisionData&&f.perDivisionData.length>0?s.default.createElement("div",{className:"other-half-landing"},s.default.createElement("div",{ref:"otherHalfLandingTxt",className:"transition0_5 "},s.default.createElement("div",{className:"textCenter trSumaryHeading fb"},s.default.createElement("span",null,"Expense Trends")),n===u.WEEK?s.default.createElement(c.default,{plotData:f,tab:n}):null,n===u.MONTH?s.default.createElement(c.default,{plotData:f,tab:n}):null,n===u.YEAR?s.default.createElement(c.default,{plotData:f,tab:n}):null)):null)),a?s.default.createElement("div",null,s.default.createElement(i.default,{newExpense:this.newExpense})):null)}}]),t}();t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=n(0),i=(a=s)&&a.__esModule?a:{default:a},l=n(4),u=n(2);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.selectType=n.selectType.bind(n),n.submitNewExpense=n.submitNewExpense.bind(n),n.state={type:"expense",amount:"",category:"",day:"",month:"",year:"",error:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.Component),o(t,[{key:"selectType",value:function(e){this.setState({type:e})}},{key:"changeAmount",value:function(e){this.setState({amount:e})}},{key:"changeDate",value:function(e,t,n){this.setState(r({},e)),t&&2===e[t].length&&n&&this.refs[n].focus()}},{key:"isValidDate",value:function(){var e=this.state,t=e.day,n=e.month,a=e.year,r=/^\d{1,2}$/;return!!(r.test(t)&&r.test(n)&&/^\d{4}$/.test(a))&&(this.date=new Date(parseInt(a),parseInt(n),parseInt(t)),!0)}},{key:"validateParams",value:function(){var e=this.state,t=e.amount,n=e.category;return t&&/^\d+$/.test(t)?n?!!this.isValidDate()||(this.setState({error:{date:"Please provide a Valid Date"}}),!1):(this.setState({error:{category:"Please provide a Valid Category"}}),!1):(this.setState({error:{amount:"Please provide a Valid Amount"}}),!1)}},{key:"submitNewExpense",value:function(){var e=this,t=this.state,n=t.amount,a=(t.day,t.month,t.year,t.type),r=t.category;if(this.validateParams()){var o={amount:n,type:a,date:this.date,category:r};(0,l.new_expense)(o).then(function(t){e.props.newExpense(!1,!0)},function(t){console.log("Unable to create new Expense",t),e.props.newExpense(!1,!1)})}}},{key:"renderOptions",value:function(e){var t=[];if("day"===e){t.push(i.default.createElement("option",null,"Day"));for(var n=1;n<32;n++)t.push(i.default.createElement("option",{value:n},n))}else if("month"===e){t.push(i.default.createElement("option",null,"Month"));for(var a=0;a<12;a++)t.push(i.default.createElement("option",{value:a},u.MONTHSNAMESHORT[a]))}else if("year"===e){t.push(i.default.createElement("option",null,"Year"));for(var r=2020;r>2e3;r--)t.push(i.default.createElement("option",{value:r},r))}return t}},{key:"render",value:function(){var e=this,t=this.state,n=t.type,a=t.amount,r=(t.day,t.month,t.year,t.category),o=t.error;return i.default.createElement("div",{className:"newExpenseContainer zi2"},i.default.createElement("div",{className:"expIncBtns textCenter mT25"},i.default.createElement("span",{className:"newBtn "+("expense"===n?"selectedType":""),onClick:function(){return e.selectType("expense")}},"Expense"),i.default.createElement("span",{className:"newBtn "+("income"===n?"selectedType":""),onClick:function(){return e.selectType("income")}},"Income")),i.default.createElement("div",{className:"amountInput mT25 "},i.default.createElement("span",null,"₹"),i.default.createElement("input",{type:"text",placeholder:"Amount",onChange:function(t){return e.changeAmount(t.target.value)},value:a}),o.amount?i.default.createElement("div",{className:"errorDiv"},o.amount):null),i.default.createElement("div",{className:"categoryInput mT25 "},i.default.createElement("input",{type:"text",placeholder:"Category",onChange:function(t){return e.setState({category:t.target.value})},value:r}),o.category?i.default.createElement("div",{className:"errorDiv"},o.category):null),i.default.createElement("div",{className:"spentDay mT25 "},i.default.createElement("select",{ref:"day",onChange:function(t){return e.changeDate({day:t.target.value},"day","month")}},this.renderOptions("day")),i.default.createElement("select",{ref:"month",onChange:function(t){return e.changeDate({month:t.target.value},"month","year")}},this.renderOptions("month")),i.default.createElement("select",{ref:"year",onChange:function(t){return e.changeDate({year:t.target.value},"year")}},this.renderOptions("year")),o.date?i.default.createElement("div",{className:"errorDiv"},o.date):null),i.default.createElement("div",{className:"textCenter"},i.default.createElement("div",{className:"submitBtn",onClick:this.submitNewExpense},"Done")))}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(0),s=(a=o)&&a.__esModule?a:{default:a},i=n(2);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.generateSVG=n.generateSVG.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){window&&window.addEventListener&&window.addEventListener("onresize",function(){alert("attachEvent - resize")})}},{key:"generateSVG",value:function(){var e=this.props,t=e.plotData,n=e.tab,a=[],r=[],o=i.DIVISIONLENGTH[n],l=t.maxAmount,u=150/(o+2),c=0,d="";for(a.push(0),r.push(100),t.perDivisionData.forEach(function(e){for(;e.division>c;){var t=a[a.length-1];if(a.push(t+u),e.division===c+1){var n=e.amount/l*100;r.push(100-1*n)}else r.push(100);c+=1}});o>c;){var f=a[a.length-1];a.push(f+u),r.push(100),c+=1}var p=a[a.length-1];a.push(p+u),r.push(100);for(var m=0;m<a.length;m++)d+=" "+a[m]+","+r[m]+" ";return d?s.default.createElement("div",null,s.default.createElement("svg",{viewBox:"0 0 150 100",style:{margin:"20px"}},s.default.createElement("polyline",{points:d,className:"graphPlotLine"}))):null}},{key:"render",value:function(){return s.default.createElement("div",null,this.generateSVG())}}]),t}();t.default=l},function(e,t,n){"use strict";var a=n(3);a.Promise=global.Promise,a.connect(process.env.MONGOLAB_URI,{useMongoClient:!0}).then(function(){console.log("Connected to Db")},function(e){console.log(e)}),e.exports={mongoose1:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getExpenseSummary=t.getExpenseData=t.newExpense=t.signIn=t.signUp=void 0;var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=l(n(3)),o=(l(n(6)),l(n(10))),s=l(n(11)),i=n(2);function l(e){return e&&e.__esModule?e:{default:e}}t.signUp=function(e,t){var n=e.body,a=n.username,o=void 0===a?"":a,i=n.password,l=void 0===i?"":i,u=n.emailId,c=void 0===u?"":u,d=new s.default({_id:r.default.Types.ObjectId(),username:o,password:l,emailId:c});s.default.find({username:o}).then(function(n){n.length>0?t.send({error:!0,msg:"Username already Exists"}):d.save().then(function(n){e.session._userId=n._id,t.send({error:!1,msg:"Saved Successfully"})},function(e){t.status(500).send(e)})},function(e){t.send(e),console.log(e)})},t.signIn=function(e,t){var n=e.body,a=n.username,r=void 0===a?"":a,o=n.password,i=void 0===o?"":o;n.emailId;console.log(e.session.user),s.default.find({username:r,password:i}).then(function(n){n.length>0?(e.session._userId=n[0]._id,t.send({error:!1,msg:"success"})):t.send({error:!0,msg:"No user account found"})},function(e){t.send(e),console.log(e)})},t.newExpense=function(e,t){var n=e.body,s=n.amount,i=n.category,l=n.date,u=n.type;s=parseInt(s),l=new Date(l);var c=Math.ceil(l.getDate()/7),d=l.getDay(),f=l.getMonth(),p=l.getFullYear(),m=l.getDate(),y={amount:s,category:i,date:l,type:u,ww:c,dow:d,mm:f,yy:p,dd:m};new o.default(a({user_id:r.default.Types.ObjectId(e.session._userId)},y)).save().then(function(e){t.send(e)},function(e){console.log("Failed to save new Expense",e),t.status(500).send(e)})},t.getExpenseData=function(e,t){var n=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818");function s(e,n){if(e)respond.send(500).send(e);else{var a=void 0,r=void 0;Object.keys(n).map(function(e){"expense"===n[e].type?a=n[e]:"income"===n[e].type&&(r=n[e])});var o=void 0,s=void 0;a?(a.transactionList.map(function(e){var t=e.amount/(a.amount/100);e.percent=Math.round(100*t)/100}),o=a.amount):o=0,r?(r.transactionList.map(function(e){var t=e.amount/(r.amount/100);e.percent=Math.round(100*t)/100}),s=r.amount-o):s=0-o,t.send({expenseList:a,incomeList:r,spent:o,standing:s})}}var l={$group:{_id:{category:"$category",type:"$type"},type:{$first:"$type"},category:{$first:"$category"},amount:{$sum:"$amount"}}},u={$group:{_id:{type:"$type"},amount:{$sum:"$amount"},type:{$first:"$type"},transactionList:{$push:{category:"$category",amount:"$amount"}}}},c={$unwind:"$transactionList"},d={$sort:{"transactionList.amount":-1}},f={$group:{_id:{type:"$type"},amount:{$first:"$amount"},type:{$first:"$type"},transactionList:{$push:"$transactionList"}}},p=e.body,m=p.tab,y=p.ww,h=p.mm,v=p.yy;p.dow;m===i.YEAR?o.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(s):m===i.MONTH?o.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(h)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(s):m===i.WEEK&&o.default.aggregate([{$match:{user_id:n}},{$match:{yy:parseInt(v)}},{$match:{mm:parseInt(h)}},{$match:{ww:parseInt(y)}},a({},l),a({},u),a({},c),a({},d),a({},f),{$project:{_id:0,amount:1,type:1,transactionList:1}}]).allowDiskUse(!0).exec(s)},t.getExpenseSummary=function(e,t){function n(e,n){if(e)respond.send(500).send(e);else if(n&&n[0]&&n[0].perDivisionData){var r=Number.MIN_SAFE_INTEGER;n[0].perDivisionData.forEach(function(e){r<e.amount&&(r=e.amount)}),n[0].maxAmount=r,t.send(a({},n[0]))}else t.send({})}var s=e.session._userId?r.default.Types.ObjectId(e.session._userId):r.default.Types.ObjectId("5c10ba234f8b6296c08e5818"),l=e.body,u=l.tab,c=l.yy,d=l.mm,f=l.ww;u===i.YEAR?o.default.aggregate([{$match:{user_id:s}},{$match:{yy:c}},{$match:{type:"expense"}},{$group:{_id:{mm:"$mm"},amount:{$sum:"$amount"},month:{$first:"$mm"}}},{$sort:{month:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$month"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.MONTH?o.default.aggregate([{$match:{user_id:s}},{$match:{yy:c}},{$match:{mm:d}},{$match:{type:"expense"}},{$group:{_id:{dd:"$dd"},amount:{$sum:"$amount"},dd:{$first:"$dd"}}},{$sort:{dd:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dd"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n):u===i.WEEK&&o.default.aggregate([{$match:{user_id:s}},{$match:{yy:c}},{$match:{mm:d}},{$match:{ww:f}},{$match:{type:"expense"}},{$group:{_id:{dow:"$dow"},amount:{$sum:"$amount"},dow:{$first:"$dow"}}},{$sort:{dow:1}},{$group:{_id:null,totalAmount:{$sum:"$amount"},perDivisionData:{$push:{amount:"$amount",division:"$dow"}}}},{$project:{_id:0}}]).allowDiskUse(!0).exec(n)}},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("connect-mongo")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,